{
    "active_user_count": 11, 
    "advertiser_category": null, 
    "audience_target": "", 
    "avg_comment_num_per_submission": 18, 
    "avg_submission_score": 14, 
    "collection_range_end_unix_timestamp": 1507420800, 
    "collection_range_end_utc": "2017-10-08 00:00:00", 
    "collection_range_start_unix_timestamp": 1506816000, 
    "collection_range_start_utc": "2017-10-01 00:00:00", 
    "description": "#Welcome!\n\nThis subreddit is dedicated to discussion of programming languages, programming language theory, design, their syntax and compilers. Post your ideas and get constructive criticism.\n\nBe nice, contribute, and stay away from useless flame wars.\n\n#Please note!\n\nThis is about programming languages, **not programming per se.** If you want to ask \"what programming language should I learn\", \"what language would be best for X project\", or any question like that, please post to /r/AskProgramming or /r/LearnProgramming.\n\n#### [Check out the always-growing list of languages made by our community!](https://www.reddit.com/r/ProgrammingLanguages/wiki/languages)\n\n#### Related subreddits\n* /r/Compilers \n* /r/compsci\n* /r/programming \n* /r/coding \n* /r/AskProgramming \n* /r/learnprogramming \n\nFor language-specific discussion, take a look at the (rather old) [list of programming language subreddits](https://www.reddit.com/r/programming/comments/a6qgz/proggit_im_trying_to_compile_all_the_known/).\n\n#### Related online communities\n* [ProgLangDesign.net - the home of Freenode's #proglangdesign](http://www.proglangdesign.net/)\n* [Lambda the Ultimate: Programming Languages](http://lambda-the-ultimate.org/)  \n* [Programming languages tag on Computer Science Stack Exchange](http://cs.stackexchange.com/questions/tagged/programming-languages)  \n* [Programming languages tag on Theoretical Computer Science Stack Exchange](http://cstheory.stackexchange.com/questions/tagged/pl.programming-languages)", 
    "display_name": "ProgrammingLanguages", 
    "domain_occurrences": {
        "futhark-lang.org": 1, 
        "medium.com": 1, 
        "reddit.com": 1, 
        "self.ProgrammingLanguages": 6, 
        "youtube.com": 1
    }, 
    "id": "2qi8m", 
    "num_external_website_posts": 4, 
    "num_text_posts": 6, 
    "public_description": "General programming languages and programming language theory discussion. News, articles, proposals. This is the place for it.", 
    "submissions": [
        {
            "author": "Lorxu", 
            "created_utc": 1507323192.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "74qhvo", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/74qhvo/feedback_on_my_language_concept/", 
            "score": 11, 
            "selftext": "I've been working on ideas for a language for a while (I plan on calling it Rhea), and I'd like some feedback on what I've come up with before I get too far in my implementation and have to start over because someone pointed out a huge flaw in my concept. I'm making a language primarily to be able to use something other than C on GPUs, so it will compile to C and use OpenCL to get single-source CPU/GPU programming. The language it self is sort of a mix between imperative and functional. Here's the basic syntax:\n\n    val greet := [String : message]\n        print ('Hello, ' .+ message)\n    \n    greet 'World'\nWould print 'Hello, World'. The .+ is calling the .+ method on the String object, more or less, but I was inspired by Funk's function-based OO and so the dot is like a single quote in some Lisps, where .x will return a symbol instead of the value of the variable. So there's pattern matching:\n\n    val fib :=\n        [0]\n            1\n        [1]\n            1\n        [Int : n]\n            fib (n .- 1) .+ fib (n .- 2)\nAnd mutable closures, which I don't think I've seen before, but I think could work:\n\n    val MyClass :=\n        var x := 0\n        [.add]\n            x +: 1\n        [.x]\n            x\n    var myObject := MyClass\n    print (myObject .x) # => 0\n    myObject .add\n    print (myObject .x) # => 1\nGPU programming might be done like this:\n\n    val foo := [SomeType : someData]\n        doSomething someData\n    kernel 1024 foo # Runs foo 1024 times, in parallel\n\nAs for parallelism in general, I don't know. Maybe something actor based.\n\nI'm thinking of doing refinement or dependant types later, and probably first extended pattern matching, e.g.:\n\n    val foo :=\n        [Int : x where x > 2]\n            doStuff\nAnd an expression is a function application or definition, with arguments following an application: `foo 1 2 3` and `foo bar 3` would be interpreted `foo (bar, 3)` - other function calls have to be enclosed in parentheses.\n\nWhat do you think? What needs work? I'll add more information here if I think of more that would be useful.\n", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Feedback on my language concept", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/74qhvo/feedback_on_my_language_concept/"
        }, 
        {
            "author": "FascinatedBox", 
            "created_utc": 1507257092.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "74ktjg", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 44, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/74ktjg/what_compromises_have_you_made/", 
            "score": 16, 
            "selftext": "Sometimes two features just don't jive together like you want them to. Other times, there's some existing syntax you wish you had but you know it doesn't fit. I'm sure there's more. So what are some compromises that you've had to make?", 
            "subreddit": "ProgrammingLanguages", 
            "title": "What compromises have you made?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/74ktjg/what_compromises_have_you_made/"
        }, 
        {
            "author": "wyldcraft", 
            "created_utc": 1507219691.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "74gyj0", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 45, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/74gyj0/what_promising_languages_need_help_expanding/", 
            "score": 23, 
            "selftext": "I feel like re-inventing some wheels.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "What promising languages need help expanding their Standard Libraries?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/74gyj0/what_promising_languages_need_help_expanding/"
        }, 
        {
            "author": "spruit11", 
            "created_utc": 1507184230.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "74e5q9", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/74e5q9/the_egel_language/", 
            "score": 17, 
            "selftext": "[The Egel Language](https://egel-lang.github.io/) is a small toy language based on untyped eager combinator rewriting. The interpreter is implemented on top of an acyclic graph rewrite system written in C++ with utter disregard for performance.\n\nEgel supports a mostly pure eager untyped functional programming style. It has some experimental extras, such as exceptions, namespaces, threads, mutable variables, and rudimentary OO.\n\nThe current version is 0.0.0.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "The Egel Language", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/74e5q9/the_egel_language/"
        }, 
        {
            "author": "CitoplasmaX", 
            "created_utc": 1507148885.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "74ay3i", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 24, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/74ay3i/monolithic_programming_language/", 
            "score": 0, 
            "selftext": "I do not know what taxpayers know about a programming language that specializes in monolithic programming. With monolithic programming, in case someone does not know, I want to refer to the paradigm that does not have an article in wikipedia or is basically badly redirected (to monolithic application) and that is to create programs following the standard of structured programming but instead of possibility to create several functions or procedures, the program consists of a single main function.\n\nWell said that. I wanted to look for some language of that kind, I know that some Algol dialects are like this but it's difficult for the syntax to work today with modern compilers and so I prefer to ask for one that someone has done recently or is doing to learn, quite.\n\nFinally, it would be preferable if it were a compiled language, clearly.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Monolithic programming language", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/74ay3i/monolithic_programming_language/"
        }, 
        {
            "author": "Athas", 
            "created_utc": 1507122803.0, 
            "domain": "futhark-lang.org", 
            "id": "7481mw", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/7481mw/futhark_010_released/", 
            "score": 24, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Futhark 0.1.0 released", 
            "url": "https://futhark-lang.org/blog/2017-10-04-futhark-0.1.0-released.html"
        }, 
        {
            "author": "smalltalkrenaissance", 
            "created_utc": 1507113223.0, 
            "domain": "medium.com", 
            "id": "747ako", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/747ako/behold_pharo_the_modern_smalltalk/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Behold Pharo: The Modern Smalltalk", 
            "url": "https://medium.com/smalltalk-talk/behold-pharo-the-modern-smalltalk-38e132c46053"
        }, 
        {
            "author": "VermillionAzure", 
            "created_utc": 1507085469.0, 
            "domain": "reddit.com", 
            "id": "745eso", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/745eso/ama_ive_been_leading_a_student_team_implementing/", 
            "score": 13, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "AMA: I've been leading a student team implementing R7RS Scheme (Lisp) for the past 10 months. \u2022 r/learnprogramming", 
            "url": "https://www.reddit.com/r/learnprogramming/comments/745ep2/ama_ive_been_leading_a_student_team_implementing/"
        }, 
        {
            "author": "Neechoo", 
            "created_utc": 1506937403.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "73rt0p", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 35, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/73rt0p/bimonthly_what_are_you_working_on_how_is_it/", 
            "score": 23, 
            "selftext": "[Previous thread](https://www.reddit.com/r/ProgrammingLanguages/comments/6qweq3/bimonthly_what_are_you_working_on_how_is_it/)\n\nI'm sorry I'm a day late!\n\n# Good day again, /r/ProgrammingLanguages!\n\n**Thanks to a suggestion, the thread is now sorted with the newest comments showing up first - it should improve the activity over the time it is up!**\n\nThe (northern hemisphere) summer months have been busy for a lot of us. In no particular order, we've seen:\n\n* The first and final release of [Acorn](https://www.reddit.com/r/ProgrammingLanguages/wiki/acorn)'s source, [marking its end and the beginning of Cone](https://www.reddit.com/r/ProgrammingLanguages/comments/722f99/pivoting_from_acorn_to_cone/), accompanied by [a paper on gradual memory management](https://www.reddit.com/r/ProgrammingLanguages/comments/700fpf/a_framework_for_gradual_memory_management/);\n* [A greatly informative debate on compiler targets](https://www.reddit.com/r/ProgrammingLanguages/comments/72cl28/is_c_still_the_best_target_for_new_languages/)\n* [Another discussion on continuations](https://www.reddit.com/r/ProgrammingLanguages/comments/6zh31g/are_continuations_too_general/)\n* [The Oil Shell 0.1 release](https://www.reddit.com/r/ProgrammingLanguages/comments/6z730t/please_try_the_osh_01_release/)\n* [Myrddin 0.2](https://www.reddit.com/r/ProgrammingLanguages/comments/71q1t1/myrddin_02_released_9_out_of_10_cats_agree/)\n* [An impressive writeup about calling Futhark from other languages](https://futhark-lang.org/blog/2017-09-26-calling-futhark-from-c-and-haskell.html)\n\nand many more great submissions! It's been over two months since the last thread, so it's time to ask again:\n\nHow much progress have you made since last time? What new ideas have you stumbled upon, what old ideas have you abandoned? What new projects have you started? What are you working on?\n\nOnce again, feel free to share anything you've been working on, old or new, simple or complex, tiny or huge, whether you want to share and discuss it, or simply brag about it. Share your projects and thoughts on other redditors' ideas, and most importantly, have a great and productive October and November. Cheers!\n", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Bimonthly \"What are you working on? How is it coming along?\" thread - October/November", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/73rt0p/bimonthly_what_are_you_working_on_how_is_it/"
        }, 
        {
            "author": "eejp", 
            "created_utc": 1506861304.0, 
            "domain": "youtube.com", 
            "id": "73ldwj", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Strange Loop", 
                    "author_url": "https://www.youtube.com/channel/UC_QIfHvN9auy2CoOdSfMWDw", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/T-BZvBWiamU?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/T-BZvBWiamU/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "\"The Lux Programming Language\" by Eduardo Julian", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/73ldwj/the_lux_programming_language_strange_loop_2017/", 
            "score": 22, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "The Lux Programming Language [Strange Loop 2017]", 
            "url": "https://www.youtube.com/watch?v=T-BZvBWiamU"
        }
    ], 
    "subreddit_creation_utc": 1212017711.0, 
    "subscribers": 7345, 
    "title": "Programming Languages", 
    "title_word_count_occurrences": {
        "lisp": 1
    }, 
    "top_score_submissions": [
        {
            "author": "Athas", 
            "created_utc": 1507122803.0, 
            "domain": "futhark-lang.org", 
            "id": "7481mw", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/7481mw/futhark_010_released/", 
            "score": 24, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Futhark 0.1.0 released", 
            "url": "https://futhark-lang.org/blog/2017-10-04-futhark-0.1.0-released.html"
        }, 
        {
            "author": "wyldcraft", 
            "created_utc": 1507219691.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "74gyj0", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 45, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/74gyj0/what_promising_languages_need_help_expanding/", 
            "score": 23, 
            "selftext": "I feel like re-inventing some wheels.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "What promising languages need help expanding their Standard Libraries?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/74gyj0/what_promising_languages_need_help_expanding/"
        }, 
        {
            "author": "Neechoo", 
            "created_utc": 1506937403.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "73rt0p", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 35, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/73rt0p/bimonthly_what_are_you_working_on_how_is_it/", 
            "score": 23, 
            "selftext": "[Previous thread](https://www.reddit.com/r/ProgrammingLanguages/comments/6qweq3/bimonthly_what_are_you_working_on_how_is_it/)\n\nI'm sorry I'm a day late!\n\n# Good day again, /r/ProgrammingLanguages!\n\n**Thanks to a suggestion, the thread is now sorted with the newest comments showing up first - it should improve the activity over the time it is up!**\n\nThe (northern hemisphere) summer months have been busy for a lot of us. In no particular order, we've seen:\n\n* The first and final release of [Acorn](https://www.reddit.com/r/ProgrammingLanguages/wiki/acorn)'s source, [marking its end and the beginning of Cone](https://www.reddit.com/r/ProgrammingLanguages/comments/722f99/pivoting_from_acorn_to_cone/), accompanied by [a paper on gradual memory management](https://www.reddit.com/r/ProgrammingLanguages/comments/700fpf/a_framework_for_gradual_memory_management/);\n* [A greatly informative debate on compiler targets](https://www.reddit.com/r/ProgrammingLanguages/comments/72cl28/is_c_still_the_best_target_for_new_languages/)\n* [Another discussion on continuations](https://www.reddit.com/r/ProgrammingLanguages/comments/6zh31g/are_continuations_too_general/)\n* [The Oil Shell 0.1 release](https://www.reddit.com/r/ProgrammingLanguages/comments/6z730t/please_try_the_osh_01_release/)\n* [Myrddin 0.2](https://www.reddit.com/r/ProgrammingLanguages/comments/71q1t1/myrddin_02_released_9_out_of_10_cats_agree/)\n* [An impressive writeup about calling Futhark from other languages](https://futhark-lang.org/blog/2017-09-26-calling-futhark-from-c-and-haskell.html)\n\nand many more great submissions! It's been over two months since the last thread, so it's time to ask again:\n\nHow much progress have you made since last time? What new ideas have you stumbled upon, what old ideas have you abandoned? What new projects have you started? What are you working on?\n\nOnce again, feel free to share anything you've been working on, old or new, simple or complex, tiny or huge, whether you want to share and discuss it, or simply brag about it. Share your projects and thoughts on other redditors' ideas, and most importantly, have a great and productive October and November. Cheers!\n", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Bimonthly \"What are you working on? How is it coming along?\" thread - October/November", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/73rt0p/bimonthly_what_are_you_working_on_how_is_it/"
        }, 
        {
            "author": "eejp", 
            "created_utc": 1506861304.0, 
            "domain": "youtube.com", 
            "id": "73ldwj", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Strange Loop", 
                    "author_url": "https://www.youtube.com/channel/UC_QIfHvN9auy2CoOdSfMWDw", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/T-BZvBWiamU?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/T-BZvBWiamU/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "\"The Lux Programming Language\" by Eduardo Julian", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/73ldwj/the_lux_programming_language_strange_loop_2017/", 
            "score": 22, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "The Lux Programming Language [Strange Loop 2017]", 
            "url": "https://www.youtube.com/watch?v=T-BZvBWiamU"
        }, 
        {
            "author": "spruit11", 
            "created_utc": 1507184230.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "74e5q9", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/74e5q9/the_egel_language/", 
            "score": 17, 
            "selftext": "[The Egel Language](https://egel-lang.github.io/) is a small toy language based on untyped eager combinator rewriting. The interpreter is implemented on top of an acyclic graph rewrite system written in C++ with utter disregard for performance.\n\nEgel supports a mostly pure eager untyped functional programming style. It has some experimental extras, such as exceptions, namespaces, threads, mutable variables, and rudimentary OO.\n\nThe current version is 0.0.0.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "The Egel Language", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/74e5q9/the_egel_language/"
        }
    ], 
    "total_submissions": 10, 
    "utc_of_data_collection_completion": "2017-10-17 18:47:21", 
    "utc_of_data_collection_start": "2017-10-17 18:47:21"
}