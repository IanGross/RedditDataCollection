{
    "active_user_count": 62, 
    "advertiser_category": null, 
    "audience_target": "", 
    "avg_comment_num_per_submission": 6, 
    "avg_submission_score": 7, 
    "collection_range_end_unix_timestamp": 1507420800, 
    "collection_range_end_utc": "2017-10-08 00:00:00", 
    "collection_range_start_unix_timestamp": 1506816000, 
    "collection_range_start_utc": "2017-10-01 00:00:00", 
    "description": "News and links for Django developers.\n\nNew to Django? Check out the [/r/djangolearning](http://www.reddit.com/r/djangolearning) subreddit.\n\nDjango's [Code of Conduct](https://www.djangoproject.com/conduct/) applies here, so be good to each other.", 
    "display_name": "django", 
    "domain_occurrences": {
        "aumfor.com": 1, 
        "codeinthehole.com": 1, 
        "django-rest-framework.org": 1, 
        "djangoproject.com": 1, 
        "eldarion.com": 1, 
        "github.com": 2, 
        "medium.com": 2, 
        "self.django": 33, 
        "simonwillison.net": 1, 
        "simpleisbetterthancomplex.com": 1, 
        "v1k45.com": 1, 
        "youtube.com": 1
    }, 
    "id": "2qh4v", 
    "num_external_website_posts": 13, 
    "num_text_posts": 33, 
    "public_description": "", 
    "submissions": [
        {
            "author": "Shinoken__", 
            "created_utc": 1507410600.0, 
            "domain": "self.django", 
            "id": "74xi9l", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74xi9l/consuming_an_external_api_how_to_map_data/", 
            "score": 3, 
            "selftext": "Hi,\n\nI\u2019m currently working on a project that functions as a middleware between shops and suppliers. We\u2019re receiving data from the shop by polling/webhooks and we have to store these in Django, to then determine which supplier the order should be forwarded to.\n\nI currently have a few models set up to store the order and it\u2019s properties: Order, OrderLine, Product, Customer and Address. All of these models have an \u2018external_id\u2019 field that\u2019s equal to the ID of the data in the webshop.\n\nI\u2019m looking into how to write a class / utility that can map an order (nested Json), map the Json fields (the json is camelCase) and load/create the related models (if external_id exists) from the incoming order into the DB as well.  \n\nDoes anyone happen to know what\u2019s the best wau to achieve this? Any examples where I could look into?\n\nThanks!\n", 
            "subreddit": "django", 
            "title": "Consuming an external API, how to map data?", 
            "url": "https://www.reddit.com/r/django/comments/74xi9l/consuming_an_external_api_how_to_map_data/"
        }, 
        {
            "author": "kixlsd", 
            "created_utc": 1507404855.0, 
            "domain": "self.django", 
            "id": "74wy6a", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74wy6a/help_deploying_simple_django_app_to_azure_via/", 
            "score": 1, 
            "selftext": "Hey all,\n\nNew Python guy here (from Laravel/php world) and first want to say this is a fantastic community.\n\nMy company offers a $150/mo Azure credit so naturally I'm creating a sandbox there.  The Node deployment is pretty straight forward and awesome.  PHP not so much.  Python is easy, however, their docs provide instructions for a simple python \"hello world\" module, not a Django app.\n\nAfter setting up local git deployment using their \"git push azure master\" I'm getting a \"This web site is running Python 3.4.1\"...not my Django app.  I'm wondering if I need a requirements.txt file or what.  \n\n\nAnyone deploy Django to Azure using Azure CLI?\n\n(I'm on a Mac)\n\n\nUPDATE: I've abandoned Azure for Heroku.  MUCH better and more concise documentation.  Procfiles, buildpacks etc etc. ", 
            "subreddit": "django", 
            "title": "Help deploying simple Django app to Azure via Azure CLI.", 
            "url": "https://www.reddit.com/r/django/comments/74wy6a/help_deploying_simple_django_app_to_azure_via/"
        }, 
        {
            "author": "MrZakbug", 
            "created_utc": 1507401989.0, 
            "domain": "self.django", 
            "id": "74wnwi", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74wnwi/how_should_i_split_content_of_my_webapp_to/", 
            "score": 0, 
            "selftext": "Hello /r/django!\n\nI decided to learn django by doing something practical and I am trying to create a webapp I was thinking about for some time, and I think might earn me some bucks in the future. Anyway I have a problem with wrapping my head around Django's subapps idea. I know it would be good to split content of my webapp to separate subapps, but I am not sure how much of splitting should be done here. \n\nFor example I plan to have a homepage containing a menu bar, login/register, news section, about section. Should I create a separate app for news? Should I create a separate app for login/register form? I am also planning to have a form in which you enter some data and my webapp based on data comparison gives you a feedback what data you provided might mean. Should it be a separate app?\n\nSorry if this is messy and maybe explained a lot here. This is my first post on this subreddit and I could not find an answer with search bar. \n\nTL:DR \nI would love to know best practice in terms of splitting the content into separate subapps.\n\nEDIT:spelling", 
            "subreddit": "django", 
            "title": "How should I split content of my webapp to different subapps?", 
            "url": "https://www.reddit.com/r/django/comments/74wnwi/how_should_i_split_content_of_my_webapp_to/"
        }, 
        {
            "author": "mixkorshun", 
            "created_utc": 1507380238.0, 
            "domain": "github.com", 
            "id": "74unnj", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74unnj/djangosafefilefield_secure_file_field_which/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "django-safe-filefield - Secure file field, which allows you to restrict uploaded file extensions.", 
            "url": "https://github.com/mixkorshun/django-safe-filefield"
        }, 
        {
            "author": "UnKn0wn27", 
            "created_utc": 1507378467.0, 
            "domain": "self.django", 
            "id": "74uj5w", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74uj5w/how_to_use_custom_variables_in_serializers/", 
            "score": 1, 
            "selftext": "I want to create a serializer that uses the variables from my model and also counts how many data of the same id is found in the table.\n\nI have created this, but it doesn't work:\n\n    class WebsiteSerializer(serializers.Serializer):\n        item_nr = serializers.IntegerField()\n    \n        class Meta:\n            model = URL\n            fields = (\n                \"id\",\n                \"item\",\n                \"status\",\n                \"item_nr \"\n            )\n    \n        def get_item_nr (self, obj):\n            obj.item_nr = Items.objects.filter(item_id=self.context.get(id)).count()\n            return obj.item_nr \n\nThis is the error that I get:\n\n> Got AttributeError when attempting to get a value for field `item_nr `\n> on serializer `WebsiteSerializer`. The serializer field might be named\n> incorrectly and not match any attribute or key on the `URL` instance.\n> Original exception text was: 'URL' object has no attribute 'item_nr '.", 
            "subreddit": "django", 
            "title": "How to use custom variables in serializers?", 
            "url": "https://www.reddit.com/r/django/comments/74uj5w/how_to_use_custom_variables_in_serializers/"
        }, 
        {
            "author": "AWD_13", 
            "created_utc": 1507352847.0, 
            "domain": "self.django", 
            "id": "74t1ak", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74t1ak/ecommerce_website_tutorial/", 
            "score": 5, 
            "selftext": "Hello everyone! Is there anywhere I can find a tutorial on using Django to create an e-commerce website? Or any tutorial of Django that shows the essential processes I need to setup an e-commerce website..Thanks ", 
            "subreddit": "django", 
            "title": "E-Commerce Website Tutorial", 
            "url": "https://www.reddit.com/r/django/comments/74t1ak/ecommerce_website_tutorial/"
        }, 
        {
            "author": "Valachio", 
            "created_utc": 1507342600.0, 
            "domain": "self.django", 
            "id": "74s9se", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74s9se/are_books_worth_reading_for_a_newbie_using_django/", 
            "score": 1, 
            "selftext": "I'm using Django to develop the backend of my website.  I only have a tiny amount of HTML + CSS experience so I am struggling a lot with Django/Python. \n\nI'm thinking maybe I should take an alternative route, rather than spending hours banging my head against a very simple problem which could've been solved in seconds if I had more programming intuition.\n\nI've been looking into reading material and found stuff like Automate the Boring Stuff with Python and The Pragmatic Programmer.  My question is...  Would it be better for me to read up on how to program effectively first, or would it be better for me to just keep wrestling with Django until I figure things out?", 
            "subreddit": "django", 
            "title": "Are books worth reading for a newbie using Django to develop a website?", 
            "url": "https://www.reddit.com/r/django/comments/74s9se/are_books_worth_reading_for_a_newbie_using_django/"
        }, 
        {
            "author": "deeds4life", 
            "created_utc": 1507328695.0, 
            "domain": "self.django", 
            "id": "74r2af", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74r2af/django_not_working_with_internet_explorer/", 
            "score": 0, 
            "selftext": "I just had an issue come up with Internet Explorer. Anytime I try and visit the site, it prompts me to download a file with a random set of numbers and letters as the name. If I download the file and view in a text editor, it is the source code. If I use any other browser, site loads fine. Can someone point me in the right direction?", 
            "subreddit": "django", 
            "title": "Django Not Working With Internet Explorer", 
            "url": "https://www.reddit.com/r/django/comments/74r2af/django_not_working_with_internet_explorer/"
        }, 
        {
            "author": "piotr_szpetkowski", 
            "created_utc": 1507319869.0, 
            "domain": "github.com", 
            "id": "74q4vd", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74q4vd/yet_another_package_to_handle_templated_emails/", 
            "score": 7, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Yet another package to handle templated emails - hopefully done right this time", 
            "url": "https://github.com/sunscrapers/django-templated-mail/"
        }, 
        {
            "author": "paltman", 
            "created_utc": 1507317295.0, 
            "domain": "eldarion.com", 
            "id": "74pupy", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74pupy/an_ajax_ux_pattern_for_creating_updating_and/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "An Ajax UX Pattern for Creating, Updating, and Ordering Items", 
            "url": "http://eldarion.com/blog/2017/10/06/ux-pattern-creating-updating-and-ordering-items/"
        }, 
        {
            "author": "Valachio", 
            "created_utc": 1507312857.0, 
            "domain": "self.django", 
            "id": "74pdae", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74pdae/special_email_for_verification_when_signing_up/", 
            "score": 1, 
            "selftext": "In order to sign up for our website, the registrant must have an Email with a special domain, something like @specialdomain.com (e.g. john@specialdomain.com)\n\nThis Email is only needed at registration so that I can send them a verification Email.  How would I go about implementing this?", 
            "subreddit": "django", 
            "title": "Special Email for verification when signing up", 
            "url": "https://www.reddit.com/r/django/comments/74pdae/special_email_for_verification_when_signing_up/"
        }, 
        {
            "author": "ludee0", 
            "created_utc": 1507312824.0, 
            "domain": "self.django", 
            "id": "74pd52", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74pd52/implement_a_reward_badge_system/", 
            "score": 0, 
            "selftext": "The concept of the system would be that there are badges availables and a person would win that badge if they scan the proper QR code, like a treasure hunt. How should one implement this?\nMy idea is to the QR code redirect the scanning to a the system in the web to the url like /badges/1 and the user that is logged in would unlock that specific badge. Is this a good way? How can i prevent that the people simply share the link to others and they log in and win the badge too ?", 
            "subreddit": "django", 
            "title": "Implement a \"reward badge\" system", 
            "url": "https://www.reddit.com/r/django/comments/74pd52/implement_a_reward_badge_system/"
        }, 
        {
            "author": "ccb621", 
            "created_utc": 1507306707.0, 
            "domain": "medium.com", 
            "id": "74oohg", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74oohg/counting_calls_to_django_queryset_methods/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Counting calls to Django QuerySet methods", 
            "url": "https://medium.com/@clinton.blackburn/counting-calls-to-django-queryset-methods-754c785382a2"
        }, 
        {
            "author": "be_haki", 
            "created_utc": 1507300954.0, 
            "domain": "medium.com", 
            "id": "74o1ig", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74o1ig/scaling_django_admin_date_hierarchy_django_admin/", 
            "score": 7, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Scaling Django Admin Date Hierarchy (Django Admin performance)", 
            "url": "https://medium.com/@hakibenita/scaling-django-admin-date-hierarchy-85c8e441dd4c"
        }, 
        {
            "author": "iKenshu", 
            "created_utc": 1507294469.0, 
            "domain": "youtube.com", 
            "id": "74nf0m", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "CodingEntrepreneurs", 
                    "author_url": "https://www.youtube.com/user/CodingEntrepreneurs", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/3CulnhLoO7Y?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/3CulnhLoO7Y/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Bootstrap v4 // Intro & Django Integration", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74nf0m/bootstrap_v4_intro_django_integration/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Bootstrap v4 // Intro & Django Integration", 
            "url": "https://www.youtube.com/watch?v=3CulnhLoO7Y"
        }, 
        {
            "author": "tomchristie", 
            "created_utc": 1507292688.0, 
            "domain": "django-rest-framework.org", 
            "id": "74n9gp", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74n9gp/django_rest_framework_37_released/", 
            "score": 90, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Django REST framework 3.7 released.", 
            "url": "http://www.django-rest-framework.org/topics/3.7-announcement/"
        }, 
        {
            "author": "byteblaster", 
            "created_utc": 1507269633.0, 
            "domain": "self.django", 
            "id": "74ls0w", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74ls0w/working_with_datetimerangefield_in_django_111_and/", 
            "score": 2, 
            "selftext": "Does anyone have experience with the DateTimeRangeField in Django / Postgres. I am having issues with enforcing a unique rules on that that type of field.\n\n**Model**\n\n    from django.db import models\n    from django.contrib.postgres.fields import DateTimeRangeField\n    from .tool import tool\n    import uuid\n\n    class schedule(models.Model):\n        id = models.UUIDField(primary_key=True,\n                              default=uuid.uuid4,\n                              editable=False)\n        name = models.CharField(max_length=50)\n        tool = models.ForeignKey(tool)\n        timeslot = DateTimeRangeField(unique= True )\n\n        def __str__(self):\n            return \"{}<{}>\".format(self.name, self.timeslot)\n\n\n**Test**\n\n    import datetime\n    from django.utils import timezone\n    from psycopg2.extras import DateRange, DateTimeTZRange\n    from narvi_server_core.models.schedule import schedule\n    from narvi_server_core.models.tool import tool\n    now = timezone.now()\n    hourOld= now - datetime.timedelta(hours=1)\n    hourNew= now + datetime.timedelta(hours=1)\n    minOld = now - datetime.timedelta(seconds=300)\n    minNew = now + datetime.timedelta(seconds=300)\n    z = tool.objects.all()[0]\n    a = schedule(name='hour', tool=z, timeslot=DateTimeTZRange(hourOld,hourNew,\"[]\"))\n    a.save()\n    b = schedule(name='min', tool=z, timeslot=DateTimeTZRange(minOld,minNew,\"[]\") )\n    b.save()\n\nI feel that i am missing something as *b* is supposed to fail on the save, but it works just fine.", 
            "subreddit": "django", 
            "title": "Working with DateTimeRangeField in Django 1.11 and PostgreSQL", 
            "url": "https://www.reddit.com/r/django/comments/74ls0w/working_with_datetimerangefield_in_django_111_and/"
        }, 
        {
            "author": "callius", 
            "created_utc": 1507247997.0, 
            "domain": "self.django", 
            "id": "74k0fu", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74k0fu/weirdness_with_django_rest_framework_routers/", 
            "score": 2, 
            "selftext": "I am using Django Rest Framework and have custom `get_queryset` functions in my API views to filter by url pattern. However, when I try to add the viewset using `router.register` with a `base_name` Django will give assertion errors:\n\n>AssertionError: `base_name` argument not specified, and could not automatically determine the name from the viewset, as it does not have a `.queryset` attribute.\nPerforming system checks...\n\nThis doesn't happen every time, only on some of my views.\n\nFor example, this view works just fine:\n\n\n     class CasePeopleLandViewSet(SerializerExtensionsAPIViewMixin, viewsets.ModelViewSet):\n    \n         serializer_class = serializers.CasePeopleLandSerializer\n    \n         def get_queryset(self):\n            queryset = models.CasePeopleLand.objects.all().order_by('case__session__village__name', 'case__session__date',\n                                                                'person__last_name', 'person__first_name')\n    \n            person = self.request.query_params.get('person', None)\n            if person is not None:\n                queryset = queryset.filter(person=person)\n    \n            land = self.request.query_params.get('land', None)\n            if land is not None:\n                queryset = queryset.filter(land=land)\n    \n            case = self.request.query_params.get('case', None)\n            if case is not None:\n                queryset = queryset.filter(case=case)\n    \n            return queryset\n\nthe `router.register` for this view is:\n\n`router.register(r'lands', api_views.CasePeopleLandViewSet, base_name = 'land_list')`\n\nThe following view doesn't work, however:\n\n    class CaseViewSet(SerializerExtensionsAPIViewMixin, viewsets.ModelViewSet):\n        serializer_class = serializers.CaseSerializer\n    \n        def get_queryset(self):\n            queryset = models.Case.objects.all().prefetch_related('case_to_person').order_by('session__village__name',\n                                                                                         'session__date', 'court_type')\n            case = self.request.query_params.get('case', None)\n            if case is not None:\n                queryset = queryset.filter(case_id=case)\n            return queryset\n\nThe `router.register` for this view is:\n\n`router.register(r'cases', api_views.CaseViewSet, base_name='case_list')`\n\nIs there something I'm doing wrong that I'm not catching? Is the fact that `CasePeopleLand` is the junction table in a `many-to-many` relationship, while `Case` is not important here?\n\nThank you in advance.", 
            "subreddit": "django", 
            "title": "Weirdness with Django Rest Framework routers", 
            "url": "https://www.reddit.com/r/django/comments/74k0fu/weirdness_with_django_rest_framework_routers/"
        }, 
        {
            "author": "iKenshu", 
            "created_utc": 1507244577.0, 
            "domain": "self.django", 
            "id": "74jop2", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74jop2/what_are_good_django_books/", 
            "score": 10, 
            "selftext": "I know there is Two Scoops of Django and I'll try to read this. But I want to know if is there another good book about the framework.\n\nAlso, should I read first about Python and then one about Django or doesn't matter that much? \n\nThanks for your answers!", 
            "subreddit": "django", 
            "title": "What are good django books?", 
            "url": "https://www.reddit.com/r/django/comments/74jop2/what_are_good_django_books/"
        }, 
        {
            "author": "AspiringSlacker", 
            "created_utc": 1507239737.0, 
            "domain": "self.django", 
            "id": "74j77o", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74j77o/how_can_i_give_customers_a_limited_amount_of_time/", 
            "score": 8, 
            "selftext": "I need to do something similar to amazon's flash sales where the item is reserved for the customer for 5 minutes. If they don't pay by then, the item is up for purchase by anyone again.   \n\nI'm using Django 1.11 and React in the front-end.  \n\nAny help or direction is much appreciated!", 
            "subreddit": "django", 
            "title": "How can I give customers a limited amount of time to pay for something?", 
            "url": "https://www.reddit.com/r/django/comments/74j77o/how_can_i_give_customers_a_limited_amount_of_time/"
        }, 
        {
            "author": "dwaxe", 
            "created_utc": 1507239306.0, 
            "domain": "djangoproject.com", 
            "id": "74j5mi", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74j5mi/django_bugfix_release_1116/", 
            "score": 14, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Django bugfix release: 1.11.6", 
            "url": "https://www.djangoproject.com/weblog/2017/oct/05/bugfix-release/"
        }, 
        {
            "author": "codeinthehole", 
            "created_utc": 1507235966.0, 
            "domain": "codeinthehole.com", 
            "id": "74isk1", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74isk1/why_your_django_models_are_fat_a_tongueincheek/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Why your Django models are fat (a tongue-in-cheek list)", 
            "url": "http://codeinthehole.com/lists/why-your-models-are-fat/"
        }, 
        {
            "author": "thepercept", 
            "created_utc": 1507229708.0, 
            "domain": "self.django", 
            "id": "74i3f6", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74i3f6/how_can_i_not_expose_a_app_in_a_django_project/", 
            "score": 0, 
            "selftext": "Hello djangonauts \n\n\nI am working on a Django project which will help to advertise a library's products and offering.\n\nI am a newbie in python/django and working for most of my time to get this project up and running. I have been able to understand python and django more by doing this project form past 2 months. Now i have certain questions regarding and to asses if i am doing this in a correct way or not.\n\nThe project has 5 apps named:   library,bookvendors,readers,analytics,api\n\nI will try to explain what its all app by app:\n\n**library :** It is a admin portal which adds book vendors details manually and their user id is generated for the system.(Using Django's default User class ) and mailed to them simultaneously. This app is meant to be used by the organisation only\n\n**bookvendors :** It is a portal for Book vendors to enlist their books/shops and provide their shop's lat/lon\n\n**readers :** This app is basically a website meant for people(open for worldwide use). Anyone can browse the books enlisted by these vendors and make a purchase.\n\n\n**api :**  \n\n*Android devices are used by the organisation to play videos and show ads on it. Whenever someone clicks on those ads then a POST request is made to these endpoints with the body as mentioned below *\n\n    **POST** request to  http://api.prestigiouslibrary.com/books\n    {\"requested_by\" : \"cab_id_5678HYR67\",\"lat\" : \"28.4461599\" , \"lon\" : \"77.0369576\"}\n\n\n\n\nThe server will check if that lat lon exist in that polygon and if it does then it should return JSON response of all the vendors with their ids from the db.<-- *(This part is not being solved yet. I am really trying to do this.)*\n\n    [ { \"vendor_name\" : \"Papyrus books\",\"vendor_id\" : \"vdr203511\" }, {...} , {...} ... ]\n   \n\n\n**analytics :** This will save the record of each request made by the android devices :\n\n\n    {\"requested_by\" : \"cab_id_5678HYR67\",\"lat\" : \"28.4461599\" , \"lon\" : \"77.0369576\"}\n\n*Now my main concerns are :*\n\n\n* When i host it on a VPS (digital ocean) then I don't want  anyone to randomly try and access the *library,bookvendors,api*  apps and get access.These are meant to be used internally by the organisation and it should be only visible to them (admin only) . Is it possible to limit these apps to very specific people? Like only these people should  be able to access , even the login page , of these apps\n\n* Since i only want to allow readers to access the website by a URL like http://www.prestigiouslibrary.com/ ,  I want to make sure that no one should be able to access http://library.prestigiouslibrary.com/ or http://api.prestigiouslibrary.com/ or http://vendors.prestigiouslibrary.com/\n\n\n**Please help me with this one. This seems the most difficult part to me.**\n\n\nThanks in Advance !! \n\n", 
            "subreddit": "django", 
            "title": "How can i not expose a app in a Django project?", 
            "url": "https://www.reddit.com/r/django/comments/74i3f6/how_can_i_not_expose_a_app_in_a_django_project/"
        }, 
        {
            "author": "chandlernotepad", 
            "created_utc": 1507222694.0, 
            "domain": "self.django", 
            "id": "74harm", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74harm/what_is_the_proper_way_to_modify_data_in_a_drf/", 
            "score": 5, 
            "selftext": "I've got some data coming in on a rest endpoint via POST.  Both the request data and the serializer data are immutable, so it appears that this is not the correct place to modify data.  Can someone point me in the right direction?  I want to apply a math operation to one of my fields on incoming data before the model instance gets saved.\n\nSimplified views.py:\n\n    @api_view(['POST'])\n    def endpoint(request):\n        if request.method == 'POST':\n            # AttributeError: This QueryDict instance is immutable\n            #request.data['object_value'] = int(request.data['object_value']) / 100.0\n            serializer = MySerializer(data=request.data)\n            if serializer.is_valid():\n                serializer.save()\n            return Response(serializer.data, status=status.HTTP_201_CREATED)\n\n\nSimplified serializers.py:\n\n    class MySerializer(serializers.ModelSerializer):\n        class Meta:\n            model = MyModel\n            fields = ('object_id', 'object_value')\n\n\nAs you can see, the model and the rest view are dead simple, I just want divide the object_value field of incoming requests by a certain pre-determined value.  I've tried overloading the save() and init() methods of the serializer as well as modifying the data within the request (as seen above).  What's the proper way to do this?  Google gives me lots of things that don't apply to my situation.", 
            "subreddit": "django", 
            "title": "What is the proper way to modify data in a DRF Serializer?", 
            "url": "https://www.reddit.com/r/django/comments/74harm/what_is_the_proper_way_to_modify_data_in_a_drf/"
        }, 
        {
            "author": "simonw", 
            "created_utc": 1507216832.0, 
            "domain": "simonwillison.net", 
            "id": "74gn15", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74gn15/implementing_faceted_search_with_django_and/", 
            "score": 25, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Implementing faceted search with Django and PostgreSQL", 
            "url": "https://simonwillison.net/2017/Oct/5/django-postgresql-faceted-search/"
        }, 
        {
            "author": "Valachio", 
            "created_utc": 1507209894.0, 
            "domain": "self.django", 
            "id": "74fx5r", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74fx5r/how_do_i_decide_what_components_to_build_first/", 
            "score": 2, 
            "selftext": "In the website I'm building, there are 2 types of users: special users and normal users.\n\nSpecial users...\n\n* can post information\n* can create a public profile visible to everyone, and manage his profile.\n\nNormal users...\n\n* can search up information posted by special users.  [Although you don't have to be registered to search up information]\n* cannot create a public profile\n* can leave reviews on special users' public profiles\n\n---\n\nThink of our system as the real estate MLS...\n\n1. Realtors [special users] list properties on the MLS system\n2. Home buyers [normal users] search properties listed by Realtors\n\n---\n\nNow my question is...  what components of the website should I build first?  Should I build the component where special users can add information into our database first?  Or should I build the component where normal users can search up information posted by special users?", 
            "subreddit": "django", 
            "title": "How do I decide what components to build first?", 
            "url": "https://www.reddit.com/r/django/comments/74fx5r/how_do_i_decide_what_components_to_build_first/"
        }, 
        {
            "author": "v1k45", 
            "created_utc": 1507185200.0, 
            "domain": "v1k45.com", 
            "id": "74e80g", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74e80g/modern_django_part_1_setting_up_django_and_react/", 
            "score": 51, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Modern Django: Part 1: Setting up Django and React", 
            "url": "http://v1k45.com/blog/modern-django-part-1-setting-up-django-and-react/"
        }, 
        {
            "author": "NewbieRPiGuy", 
            "created_utc": 1507181596.0, 
            "domain": "self.django", 
            "id": "74dzjk", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74dzjk/how_do_i_access_the_blog_sug_string_in_mezzanine/", 
            "score": 1, 
            "selftext": "[StackOverflow question](https://stackoverflow.com/questions/46578433/how-do-i-access-the-blog-sug-string).\n\nWhen I type `{{ setting }}` on a template and open it with Mezzanine, it shows me `{u'MEZZANINE_ADMIN_PREFIX': u'grappelli/'}`. I'm trying to access `settings.BLOG_SLUG`, but cannot get that setting to appear in the template. Here's a small snip of what my template looks like.\n\n    {% load mezzanine_tags keyword_tags i18n %}\n    {% block main %}\n      {{ settings }}\n    {% endblock %}\n\nHow do I get my template to display the string stored in `setting.BLOG_SLUG`?", 
            "subreddit": "django", 
            "title": "How do I access the `BLOG_SUG` string in Mezzanine?", 
            "url": "https://www.reddit.com/r/django/comments/74dzjk/how_do_i_access_the_blog_sug_string_in_mezzanine/"
        }, 
        {
            "author": "violetras", 
            "created_utc": 1507172729.0, 
            "domain": "self.django", 
            "id": "74datf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74datf/need_help_about_a_form_element/", 
            "score": 3, 
            "selftext": "I was reading an article about the use of Django and I saw something that I want to do, the thing is that I don't know how it's called, so I can't even search information about it. In this [image](https://cdn-images-1.medium.com/max/800/1*DKFulw7Mni0jS9BmumMk5A.png) you can see what I'm talking about, it's the element with \"Mordor\" written in it. Can someone please help me?\n\nSorry if it's the wrong sub, but I'm really stumped.", 
            "subreddit": "django", 
            "title": "Need help about a form element", 
            "url": "https://www.reddit.com/r/django/comments/74datf/need_help_about_a_form_element/"
        }, 
        {
            "author": "bellamira", 
            "created_utc": 1507146991.0, 
            "domain": "self.django", 
            "id": "74aq33", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74aq33/question_about_getting_ready_for_heroku_deployment/", 
            "score": 2, 
            "selftext": "I am reading through Heroku documentation, [this page specifically](https://devcenter.heroku.com/articles/deploying-python). I just have some questions about why it's telling me to do the things it's telling me to do. Hoping someone has some guidance:\n\n&nbsp; \n\n1. **Setup a virtual environment.** *OK, makes sense. You should develop inside of a virtual environment so the files and modules/packages needed for this project are all contained in a nice little package that wont interfere with any other projects.* \n2. **Declare dependencies** *Roger that. After I create the venv folder, I install Django and whatever else I need for my project into it. Hm, looks like they want the venv folder INSIDE the project main dir, as opposed to the project files inside the venv... seems counter to what I learned in another tutorial but I'll figure that out later*\n3. **Procfile** *Don't really get it. I'll just use the file from starter template or figure out how to create it from another tutorial*\n4. **Build app and run locally** *Wait... why am I reinstalling dependencies locally? I thought i was supposed to be working in the venv? or at least the dependencies should be in venv? And anyway, why can't I just run it with the django command? Why do I have to go through the trouble of changing my Profcfile and running it with heroku commands?*\n5. **something-something make .gitignore** *Easy, I already have this done, thanks to github! Although, they have venv on here. So I guess that means venv needs to be inside my project, not my projet inside venv. WTF crappy tutorial was I watching before...*\n6. **Deploy to Heroku** *Looks easy enough - but can I do it from the virtual env or should it be done locally? And if I have to do it locally, what's the point of bothering with the virtual env to begin with?!*\n\n&nbsp; \n\nPS - I did do the \"Getting Started\" mini tutorial but honestly it wasn't super helpful at my knowledge-level. Maybe I will try it again if you think it will help.", 
            "subreddit": "django", 
            "title": "Question about getting ready for Heroku Deployment", 
            "url": "https://www.reddit.com/r/django/comments/74aq33/question_about_getting_ready_for_heroku_deployment/"
        }, 
        {
            "author": "thirteenofthirty7", 
            "created_utc": 1507136919.0, 
            "domain": "self.django", 
            "id": "749kar", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/749kar/autocomplete_help/", 
            "score": 3, 
            "selftext": "I am new to django/python and I am tasked with building a form that contains a field that requires users to choose from ~4000 objects in our ever changing database. These objects are not static and come from a RESTful api. Obviously autocomplete is needed and I tried django-autocomplete-light but it doesn't feel like the right tool for this job so I'm posting to get some help.\n\nCalling ~4000 objects takes forever even in Postman so I want an autocomplete package that will only make the call after the user has entered 3 or 4 characters so that the query will only return a filtered down subset of the ~4000 objects. It seems to me that django-autocomplete-light is not capable of this, but I'm very new so please tell me if I'm wrong. If there is a better autocomplete tool to use, suggestions would be very welcome.", 
            "subreddit": "django", 
            "title": "Autocomplete help", 
            "url": "https://www.reddit.com/r/django/comments/749kar/autocomplete_help/"
        }, 
        {
            "author": "m4punk", 
            "created_utc": 1507130815.0, 
            "domain": "self.django", 
            "id": "748va6", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/748va6/django_app_planning/", 
            "score": 0, 
            "selftext": "I am in the process of planning out a app that is going to check a IMAP mailbox and display the contents as a heat map based on a couple parameters. Right now I am planning on having a supporting script that checks the mailbox continuously and updates the database, then have Django read the database and display it all nice and pretty. Would that be the best way to do it? Could I have Django check the mailbox and update the database?", 
            "subreddit": "django", 
            "title": "Django App Planning", 
            "url": "https://www.reddit.com/r/django/comments/748va6/django_app_planning/"
        }, 
        {
            "author": "gosh_djang_it", 
            "created_utc": 1507121192.0, 
            "domain": "self.django", 
            "id": "747whr", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 22, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/747whr/how_to_use_template_filters_to_display_datetime/", 
            "score": 8, 
            "selftext": "I have started to show my app and people were like these times are wrong. Oops. \n\nSimplest method (as shown at [django tutorial](https://tutorial.djangogirls.org/en/django_start_project/) and [djangogirls](https://docs.djangoproject.com/en/1.11/intro/tutorial02/)) is just to hard-code the time zone in your settings, so for instance if you are in Eastern US:\n\n    TIME_ZONE = ''US/Eastern'\n    USE_TZ = True\n\nThis works fine, but is not scalable. Hence, I want to store in the \"common\" time zone in my database (UTC), and then just display in the user's local time zone, which I would control in my template. This is discussed in the docs:    \nhttps://docs.djangoproject.com/en/1.11/topics/i18n/timezones/    \nAnd at stack overflow:    \nhttps://stackoverflow.com/questions/24448685/how-to-display-localized-time-from-datetime-in-django-template   \nThey both suggest to handle it in the template using filters:\n\n    {% load tz %}\n    {{ value|localtime }}\n\nI've done this, but am doing something wrong. Here is my code:\n\n    {% load tz %}\n    {{ entry.date_added|localtime|date:'M d, Y H:i' }}\n\nWhere as you can guess, `entry.date_added` is just a model instance with a `DateTimeField` that I've called `date_added`. Unfortunately, it is still just displaying in UTC, not local time. \n\nI also tried setting `USE_TZ = False` to see if that was the problem (because of a suggestion at Stack Overflow) but this didn't have any effect that I noticed.\n\n**EDIT/UPDATE**    \nLord have mercy: simple goal, but complicated solution (if I were to just restrict myself to Django: a couple of posters said if I juse some javascript it would be pretty easy). The problem , as /u/pemboa said:    \n> there's nothing that tells the server what the user's computer time is.   \n\nFor a relatively in-depth discussion of how to handle time zones in python and django, the following blog post is excellent and made me realize the world of hurt I was entering:   \nhttps://tommikaikkonen.github.io/timezones/\n\nSo, because this frankly is just a practice project, I just ended up doing what I started with, of hand-coding my TZ into the settings.\n\nRegarding my confusion about `localtime`: that is the time you set in settings. not your local machine time. If you actually want to dynamically convert to the time of the user's local machine, a lot more work is needed. You can use the `django-easy-timezones` package to do it, which people seem to like:    \nhttps://github.com/Miserlou/django-easy-timezones    \n\nI still would hope this is functionality that could be built into Django at some point, and just be a template filter, because it is clearly something very important (i.e., end users don't care about UTC time). But I may be being naive here, and the best solution could always end up being either just use Javascript, or have the user hand-select a time zone.\n\n\n\n", 
            "subreddit": "django", 
            "title": "How to use template filters to display datetime in local time rather than UTC?", 
            "url": "https://www.reddit.com/r/django/comments/747whr/how_to_use_template_filters_to_display_datetime/"
        }, 
        {
            "author": "open_space_concept", 
            "created_utc": 1507109052.0, 
            "domain": "self.django", 
            "id": "74711y", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74711y/realtime_data_with_django/", 
            "score": 2, 
            "selftext": "I wanted to try and make a web app which would display data in real time on various charts using one of the existing chart libraries that support on-the-fly updating of charts. Basically another application in Python on a completely different machine will provide calculations and I should take that data and visualise it in real-time.\n\nWhat's the best way to approach doing this with Django? I thought about setting up an API endpoint but I'm not sure how fast that would be if the amount of data is huge.\n\nIs Django Channels the way to go? If so, do you have any good resources to get a grip of it?\n\nAlso should I store data in a relational database or should I use a NoSQL database?\n\nBasically, any advice is good :)", 
            "subreddit": "django", 
            "title": "Real-time data with Django", 
            "url": "https://www.reddit.com/r/django/comments/74711y/realtime_data_with_django/"
        }, 
        {
            "author": "levnikmyskin", 
            "created_utc": 1507106753.0, 
            "domain": "self.django", 
            "id": "746w87", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/746w87/deploying_django_in_a_noroot_environment/", 
            "score": 0, 
            "selftext": "Hi everyone,\nI'm working on a django project and I would like to have your opinions on what could be the best way to deploy django in a no-root environment (but also, this post could be helpful to someone in the same situation).\n\nI'll host my django app on a linux (debian) server on which I have no root permissions. The sysadmins installed apache and WSGI, so I can use WSGI. \n\nHowever, WSGI is compiled against python 2.6 so I'm stucked with that.\nNow, since I don't have root permissions and since the sysadmins won't install me anything else (I have virtualenvironment though) I decided to go with anaconda (the anaconda env is using python 2.6 as well):\nto keep using WSGI I'm forced to use the system python installation, so what I did is basically adding the anaconda env python modules to the PYTHONPATH environment variable and tried to import them in the system python. I wasn't really expecting this to work, but it actually did (I don't know to what extent, but I guess that as long as I compile the conda modules for the same python version it should keep working).\n\nNow the thing is: does anybody know the best way to work in such an environment? Could there be a way to host the project in a \"self-contained\" environment on this server? I looked around and found some posts regarding cherrypy or similar, but most of the tutorials suggest using nginx and of course I can't do that.\nI would really like to use python 3 and have more freedom, but changing server and hosting providers is not an option.\nHave a good day everyone :)\n\nEDIT: sorry, I misspelled the python version. I'm on 2.7.9 ", 
            "subreddit": "django", 
            "title": "Deploying django in a \"no-root\" environment?", 
            "url": "https://www.reddit.com/r/django/comments/746w87/deploying_django_in_a_noroot_environment/"
        }, 
        {
            "author": "nudebaba", 
            "created_utc": 1507098805.0, 
            "domain": "self.django", 
            "id": "746f1o", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/746f1o/integrating_firebase_with_a_django_project_with/", 
            "score": 1, 
            "selftext": "I am creating a android and webapp with expo react native and react respectively. Using django rest framework for the rest api and following basic tutorials on setting up auth. I want to setup push notifications, firebase has the push notification feature that I'd like to integrate in my app.\n\nHow should I go about doing this, any alternatives? also, the during user registration in addition to email and password, user needs to put another **secret-key** that I give to the user offline, for an event. What should the approach be about the auth, should I be using postgresql for the db and auth or should I use firebase or there's a in between?", 
            "subreddit": "django", 
            "title": "Integrating Firebase with a Django project with react native android client?", 
            "url": "https://www.reddit.com/r/django/comments/746f1o/integrating_firebase_with_a_django_project_with/"
        }, 
        {
            "author": "Squidat", 
            "created_utc": 1507054784.0, 
            "domain": "self.django", 
            "id": "742aed", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/742aed/django_rest_database_system/", 
            "score": 0, 
            "selftext": "Hello!\nI have been testing out Django's rest framework doing their quick tutorial, my goal is to make a rest API for a class project.\nOne of the requirements of the project is that i make a database (Postgres) but i have seen that Django handles it by itself.\nHow can i implement my own database onto my Django_rest project?\n", 
            "subreddit": "django", 
            "title": "django_rest database system", 
            "url": "https://www.reddit.com/r/django/comments/742aed/django_rest_database_system/"
        }, 
        {
            "author": "will_r3ddit_4_food", 
            "created_utc": 1506979104.0, 
            "domain": "self.django", 
            "id": "73vtac", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/73vtac/slug_urls_vs_pk_urls/", 
            "score": 1, 
            "selftext": "This is my first Django project so I'm still learning. I just started using slug based urls instead of pk based urls. Are slug based ones slower since they aren't querying by primary key?", 
            "subreddit": "django", 
            "title": "Slug urls vs PK urls", 
            "url": "https://www.reddit.com/r/django/comments/73vtac/slug_urls_vs_pk_urls/"
        }, 
        {
            "author": "vimalrughani", 
            "created_utc": 1506968615.0, 
            "domain": "aumfor.com", 
            "id": "73um9h", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/73um9h/django_based_open_source_tool_for_automated/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Django based Open Source Tool for Automated Memory Forensic", 
            "url": "http://aumfor.com/"
        }, 
        {
            "author": "Pipiyedu", 
            "created_utc": 1506960059.0, 
            "domain": "self.django", 
            "id": "73toh9", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 15, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/73toh9/numpy_array_in_django_session/", 
            "score": 2, 
            "selftext": "I'm trying to store in session several numpy arrays. I get the \"numpy array is not JSON serializable\" error. For example:\n\n    request.session['array'] = np.array([1, 2, 3])\n\nConvertig the arrays to python list works fine, but I have to iterate over nested dictionaries to convert all numpy arrays to list.\n\nThere is another way to store these arrays in session?\n\nThanks!", 
            "subreddit": "django", 
            "title": "Numpy array in Django session", 
            "url": "https://www.reddit.com/r/django/comments/73toh9/numpy_array_in_django_session/"
        }, 
        {
            "author": "lancevo3", 
            "created_utc": 1506948446.0, 
            "domain": "self.django", 
            "id": "73sjnw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/73sjnw/import_users_from_a_different_system/", 
            "score": 6, 
            "selftext": "Hi,\n\nI am working with a client on setting up a new Django powered site for them. They have asked to have all their existing users moved into the new application. Their application hosting the current user table is a phpbb application. The main question I have is what do I need to do to ensure passwords from that users table come over correctly into the django User model? Having a big of a struggle on finding resources/understanding what method I should use so I would love any advice. I'm feeling like I may be over thinking this in my mind so any clarity would be great. Thank you!", 
            "subreddit": "django", 
            "title": "Import users from a different system", 
            "url": "https://www.reddit.com/r/django/comments/73sjnw/import_users_from_a_different_system/"
        }, 
        {
            "author": "iKenshu", 
            "created_utc": 1506938638.0, 
            "domain": "simpleisbetterthancomplex.com", 
            "id": "73rvlb", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/73rvlb/a_complete_beginners_guide_to_django_part_5/", 
            "score": 33, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "A Complete Beginner's Guide to Django - Part 5", 
            "url": "https://simpleisbetterthancomplex.com/series/2017/10/02/a-complete-beginners-guide-to-django-part-5.html"
        }, 
        {
            "author": "PyBet", 
            "created_utc": 1506913913.0, 
            "domain": "self.django", 
            "id": "73qbti", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/73qbti/should_i_rewrite_my_app_using_django_rest/", 
            "score": 1, 
            "selftext": "I have been learning Django for the past 3 months and I am currently writing my first more serious project.\n\n I have gone from function views to class views. Added some forms to add and edit data. All in all I am in the more advanced topics now.\n\nA few days ago, I read up on Django Rest Framework and watched a few video tutorials. I understand the premise of using it.\n\nMy app has total 12 views and models. It allows users to add, edit and delete records from the database. There is a section with general info and another with statistics and plots.\n\nI am thinking about it now, because I have completed 50% of my app and I don't want to add more features and then decide to rewrite it.\n\nWhat do you think ?", 
            "subreddit": "django", 
            "title": "Should I rewrite my app using Django Rest Framework ?", 
            "url": "https://www.reddit.com/r/django/comments/73qbti/should_i_rewrite_my_app_using_django_rest/"
        }, 
        {
            "author": "Zyxeos", 
            "created_utc": 1506896559.0, 
            "domain": "self.django", 
            "id": "73orts", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/73orts/best_practices_to_modifying_user_model/", 
            "score": 6, 
            "selftext": "Hi, I'm developing a large scale social media web app on the latest Django build (1.11.5) and Python 3.6\n\nHaving created a simple dashboard application in the past for my company, I had no need to customize Django's built in User model. However now I will have to, as I will need to store a plethora of user data.\n\nWhat are ways, resources where I can learn to modify the built in User model for this purpose? \n\nI'd like to keep Django's already built in features for the auth system", 
            "subreddit": "django", 
            "title": "Best practices to modifying User model", 
            "url": "https://www.reddit.com/r/django/comments/73orts/best_practices_to_modifying_user_model/"
        }, 
        {
            "author": "gosh_djang_it", 
            "created_utc": 1506881065.0, 
            "domain": "self.django", 
            "id": "73n71f", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 16, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/73n71f/best_practices_for_letting_user_delete_entries_in/", 
            "score": 4, 
            "selftext": "I have a simple project working well [(it is the learning log app from Python Crash Course)](https://github.com/ehmatthes/pcc/tree/master/chapter_20). On one page it shows a list of editable entries the user has written about a topic, basically a minor variant on your standard blog starter project. This page listing all the entries of a topic is `topic.html`. I want to give the user the ability to delete the individual entries associated with a topic.\n\nCurrently the view for the topic looks like this: \n\n    @login_required    \n    def topic(request, topic_id):    \n        \"\"\"Show a single topic and all its entries\"\"\"    \n        topic = get_object_or_404(Topic, id = topic_id)    \n        #Make sure the topic belongs to the current user    \n        check_topic_owner(request, topic)    \n        entries = topic.entry_set.order_by('-date_added')    \n        context = {'topic': topic, 'entries': entries}    \n        return render(request, 'learning_logs/topic.html', context)    \n\nNote that `learning_logs/topic.html` is a pretty standard template that displays all the entries associated with the given topic.\n\nI want to add the ability of the user to delete an entry for the topic. Is the right way to do that to just make a new view (something like 'delete_entry') that takes in the entry_id as an input, and then just runs `delete()` before redirecting back to `topic.html`?\n\nI like this idea because it would be very simple and relatively easy, but OTOH I want to follow best practice. E.g., should I be using the `DeleteView` class? I haven't found much on this topic online, unfortunately, in any of the tutorials I've been using. The two things I've found that frankly I don't really understand:    \n -  https://stackoverflow.com/questions/5531258/example-of-django-class-based-deleteview    \n -  https://www.reddit.com/r/django/comments/38p683/how_are_delete_buttons_along_with_saveedit/    \n \nI have never used class-based views or generic views. Should I go back to the drawing board with generic/class-based views and learn about that, and implement the DeleteView class to handle this? \n ", 
            "subreddit": "django", 
            "title": "Best practices for letting user delete entries in blog-like page?", 
            "url": "https://www.reddit.com/r/django/comments/73n71f/best_practices_for_letting_user_delete_entries_in/"
        }, 
        {
            "author": "Valachio", 
            "created_utc": 1506870402.0, 
            "domain": "self.django", 
            "id": "73m4c5", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/73m4c5/best_learning_resource_for_beginner/", 
            "score": 6, 
            "selftext": "I'm currently going through the Django tutorial on Mozilla Developers Network.  I'm completely stuck on part 8 and they don't have a 'help' section.  I'm not too sure if MDN's Django tutorial is the best.\n\nWho has the best Django learning tutorial/resources for a complete beginner?  Where should I start?\n\nThanks.", 
            "subreddit": "django", 
            "title": "Best learning resource for beginner?", 
            "url": "https://www.reddit.com/r/django/comments/73m4c5/best_learning_resource_for_beginner/"
        }
    ], 
    "subreddit_creation_utc": 1201274184.0, 
    "subscribers": 21778, 
    "title": "Django", 
    "title_word_count_occurrences": {
        "android": 1, 
        "sql": 2
    }, 
    "top_score_submissions": [
        {
            "author": "tomchristie", 
            "created_utc": 1507292688.0, 
            "domain": "django-rest-framework.org", 
            "id": "74n9gp", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74n9gp/django_rest_framework_37_released/", 
            "score": 90, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Django REST framework 3.7 released.", 
            "url": "http://www.django-rest-framework.org/topics/3.7-announcement/"
        }, 
        {
            "author": "v1k45", 
            "created_utc": 1507185200.0, 
            "domain": "v1k45.com", 
            "id": "74e80g", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74e80g/modern_django_part_1_setting_up_django_and_react/", 
            "score": 51, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Modern Django: Part 1: Setting up Django and React", 
            "url": "http://v1k45.com/blog/modern-django-part-1-setting-up-django-and-react/"
        }, 
        {
            "author": "iKenshu", 
            "created_utc": 1506938638.0, 
            "domain": "simpleisbetterthancomplex.com", 
            "id": "73rvlb", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/73rvlb/a_complete_beginners_guide_to_django_part_5/", 
            "score": 33, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "A Complete Beginner's Guide to Django - Part 5", 
            "url": "https://simpleisbetterthancomplex.com/series/2017/10/02/a-complete-beginners-guide-to-django-part-5.html"
        }, 
        {
            "author": "simonw", 
            "created_utc": 1507216832.0, 
            "domain": "simonwillison.net", 
            "id": "74gn15", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74gn15/implementing_faceted_search_with_django_and/", 
            "score": 25, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Implementing faceted search with Django and PostgreSQL", 
            "url": "https://simonwillison.net/2017/Oct/5/django-postgresql-faceted-search/"
        }, 
        {
            "author": "dwaxe", 
            "created_utc": 1507239306.0, 
            "domain": "djangoproject.com", 
            "id": "74j5mi", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/django/comments/74j5mi/django_bugfix_release_1116/", 
            "score": 14, 
            "selftext": "", 
            "subreddit": "django", 
            "title": "Django bugfix release: 1.11.6", 
            "url": "https://www.djangoproject.com/weblog/2017/oct/05/bugfix-release/"
        }
    ], 
    "total_submissions": 46, 
    "utc_of_data_collection_start": "2017-10-16 18:37:36"
}