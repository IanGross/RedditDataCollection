{
    "active_user_count": 26, 
    "advertiser_category": null, 
    "audience_target": "", 
    "avg_comment_num_per_submission": 6, 
    "avg_submission_score": 6, 
    "collection_range_end_unix_timestamp": 1507420800, 
    "collection_range_end_utc": "2017-10-08 00:00:00", 
    "collection_range_start_unix_timestamp": 1506816000, 
    "collection_range_start_utc": "2017-10-01 00:00:00", 
    "description": "Computer Science for Computer Scientists\n\n#### Note: this subreddit is not for homework advice. Requests for assistance with coursework may be removed.\n\nOther subreddits you may like:\n\n* /r/compsci  \n* /r/programming  \n* /r/coding  \n* /r/tinycode  \n* /r/programmingchallenges  \n* /r/dailyprogrammer\n* /r/ProgrammingLanguages  \n* /r/compilers  \n* /r/kernel  \n* /r/osdev  \n* /r/systems  \n* /r/softwarearchitecture  \n* /r/softwaredevelopment  \n* /r/learnprogramming  \n* /r/AskComputerScience  \n* /r/csbooks  \n* /r/math  \n* /r/logic  \n* /r/crypto  \n* /r/cryptography  \n* /r/complexsystems  \n* /r/MachineLearning\n* /r/datamining  \n* /r/quant  \n* /r/sysor  \n* /r/CScareerquestions  \n\n*^^Does ^^this ^^sidebar ^^need ^^an ^^addition ^^or ^^correction? ^^Tell ^^me ^^[here](http://www.reddit.com/message/compose/?to=Pi31415926&subject=sidebar+tweaks+-+algorithms)*", 
    "display_name": "algorithms", 
    "domain_occurrences": {
        "gitsuggest.com": 1, 
        "self.algorithms": 5, 
        "sudeepraja.github.io": 1
    }, 
    "id": "2qj1c", 
    "num_external_website_posts": 2, 
    "num_text_posts": 5, 
    "public_description": "Computer Science for Computer Scientists", 
    "submissions": [
        {
            "author": "morces619", 
            "created_utc": 1507231191.0, 
            "domain": "self.algorithms", 
            "id": "74i9if", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 20, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/74i9if/matching_2_sets_of_items_by_price/", 
            "score": 3, 
            "selftext": "## \n\nI'm trying to solve the following problem in the most efficient way I can find.\n\nI want to trade my items for someone elses items, every item have a price and a value.\n\nI want to maximize the value of the items I trade, so for example:  \nMy items:  \nBanana, P: 10, V: 5  \nPen, P:3, V:1  \nPaper, P: 1, V: 1\n\nTheir Items:  \nPhone, P: 10, V: 8  \nKey, P: 1, V: 2  \nWallet, P: 30, V: 100\n\nYou can see that I can trade my Banana and Paper (with value of 6) with Phone and Key (with value of 10)\n\nI can overpay but can not pay less and the amount I overpay is lost.  \nCurrently my solution is to use generate all the possible combinations of my items and try to match the price with knapsack algorithm and check each result.\n\nThis is however very not efficient because I can have over 1000 items (both mine and the other person).\n\nDoes anyone have a possible solution to this problem? I need it to be efficient but also give me the best solution (best value)\n\n- The items are not infinite and they have a limit.", 
            "subreddit": "algorithms", 
            "title": "Matching 2 sets of items by price", 
            "url": "https://www.reddit.com/r/algorithms/comments/74i9if/matching_2_sets_of_items_by_price/"
        }, 
        {
            "author": "sudeepraja", 
            "created_utc": 1507179176.0, 
            "domain": "sudeepraja.github.io", 
            "id": "74dtf0", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/74dtf0/solving_a_nonconvex_problem_by_solving_many/", 
            "score": 12, 
            "selftext": "", 
            "subreddit": "algorithms", 
            "title": "Solving a Non-Convex problem by solving many Convex problems", 
            "url": "https://sudeepraja.github.io/Babylon/"
        }, 
        {
            "author": "mguzmann", 
            "created_utc": 1507136196.0, 
            "domain": "self.algorithms", 
            "id": "749hb2", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/749hb2/find_optimal_combination_of_elements_from/", 
            "score": 4, 
            "selftext": "I have several sets of pairs like:\n\na: ([1, 2], [4,5])\n\nb: ([1, 3])\n\nc: ([4, 7], [1, 8])\n\nd: ([9, 7], [1, 5])\n\n...\n\n\nWhere no two pairs are identical, and the elements of no pair are identical. Each set can contain many pairs. There is a smallish number of elements (around 200).\n\nFrom each set I take one pair. Now, I want to take pairs in such a way, that the number of elements is the smallest possible.\n\nThe problem is too large to try every combination, is there any algorithm or heuristic that might help me find the optimal (or a close guess)?\n", 
            "subreddit": "algorithms", 
            "title": "Find optimal combination of elements from multiple sets", 
            "url": "https://www.reddit.com/r/algorithms/comments/749hb2/find_optimal_combination_of_elements_from/"
        }, 
        {
            "author": "deftware", 
            "created_utc": 1507096808.0, 
            "domain": "self.algorithms", 
            "id": "746a6e", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/746a6e/generating_a_labyrinths_walls_as_a_single/", 
            "score": 1, 
            "selftext": " I'm trying to find any kind of resources discussing algorithms for generating labyrinths of as many kinds as possible. These labyrinths only have the requirement that their walls (or path, either-or) does not self-intersect or branch. i.e. such a maze could be drawn with one continuous line without lifting the pen or crossing itself. I'm trying to generate space-filling curves with a labyrinthian appearance.\n\n\nFor example: \n\nhttp://meatfighter.com/labyrinth/\n\n\nThis one the start/end are right next to eachother, but the path is one continuous space-filling curve:\n\nhttps://i.pinimg.com/736x/53/a9/71/53a971ce82d59ab1458e54bda5f3f14b--pula-croatia-photo-library.jpg\n\n\nThe paths on the first few of these:\n\nhttps://blogmymaze.wordpress.com/2012/10/23/the-hexagonal-classical-3-circuit-labyrinth/\n\n\nI'd like to be able to do any kinds of patterns I want: concentric circles, squares, hexagons, triangles, etc... Including other symmetrical shapes. It seems like there's some kind of base theory involved but whenever I search for anything like \"labyrinth generation algorithm\" I just find a bunch of maze-generation stuff - where mazes are full of branches and dead-ends, which is not what I'm interested in.\n\nThanks!\n\nUPDATE: I found this niftyness, http://orden-y-concierto.blogspot.com/2014/12/unicursal-mazes-and-cavern-mazes.html\n\nbut if anybody has any ideas/feedback/suggestions I'd love to hear it.", 
            "subreddit": "algorithms", 
            "title": "Generating a Labyrinth's walls as a single line/space-filling curve that does not self-intersect or branch?", 
            "url": "https://www.reddit.com/r/algorithms/comments/746a6e/generating_a_labyrinths_walls_as_a_single/"
        }, 
        {
            "author": "simkessy", 
            "created_utc": 1507041355.0, 
            "domain": "self.algorithms", 
            "id": "740sha", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/740sha/interested_in_email_classification_not_sure_how/", 
            "score": 7, 
            "selftext": "I'm working with some friends on an idea for email classification and we're wondering what would be the best way to approach the problem. Essentially we're looking to create an application/Outlook extension that would classify emails into various categories  like \"Important/Not Important\" or \"Project email, Contract talks, Trash\", we're not totally sure on categories at the moment, if it could be user defined it would be more useful I guess. But yea that's the general idea. \n\nHow could one approach such a problem, is text-mining the right approach or should be we looking into AI/Machine Learning techniques or a combination of the two? I read a bit about Bayesian Probabilities and how using previous results sets you get a matrix table of probabilities and that's used to determine where new data would be categories. Is this the best approach or are there alternatives we should be looking at? How do we even get the first set of probabilities if that's the way we went, would we have to go through a bunch of emails and classify them manually to get an initial result set? \n\nAnything you think might be useful to learn or look at would be great, thank you. ", 
            "subreddit": "algorithms", 
            "title": "Interested in email classification, not sure how to approach", 
            "url": "https://www.reddit.com/r/algorithms/comments/740sha/interested_in_email_classification_not_sure_how/"
        }, 
        {
            "author": "Yeahjustnah", 
            "created_utc": 1507014334.0, 
            "domain": "self.algorithms", 
            "id": "73ytjy", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/73ytjy/what_are_the_most_suitable_abm_simulation/", 
            "score": 9, 
            "selftext": "More precisely agent-based simulation software for vehicle routing problems with time windows", 
            "subreddit": "algorithms", 
            "title": "What are the most suitable ABM simulation software options for vehicle routing problems?", 
            "url": "https://www.reddit.com/r/algorithms/comments/73ytjy/what_are_the_most_suitable_abm_simulation/"
        }, 
        {
            "author": "c5urf3r", 
            "created_utc": 1506918418.0, 
            "domain": "gitsuggest.com", 
            "id": "73qomd", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/73qomd/flask_app_using_lda_to_suggest_github/", 
            "score": 11, 
            "selftext": "", 
            "subreddit": "algorithms", 
            "title": "Flask app using LDA to suggest GitHub repositories based on what you have starred.", 
            "url": "http://www.gitsuggest.com"
        }
    ], 
    "subreddit_creation_utc": 1213878533.0, 
    "subscribers": 32552, 
    "title": "Computer Science for Computer Scientists", 
    "title_word_count_occurrences": {
        "flask": 1, 
        "github": 1
    }, 
    "top_score_submissions": [
        {
            "author": "sudeepraja", 
            "created_utc": 1507179176.0, 
            "domain": "sudeepraja.github.io", 
            "id": "74dtf0", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/74dtf0/solving_a_nonconvex_problem_by_solving_many/", 
            "score": 12, 
            "selftext": "", 
            "subreddit": "algorithms", 
            "title": "Solving a Non-Convex problem by solving many Convex problems", 
            "url": "https://sudeepraja.github.io/Babylon/"
        }, 
        {
            "author": "c5urf3r", 
            "created_utc": 1506918418.0, 
            "domain": "gitsuggest.com", 
            "id": "73qomd", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/73qomd/flask_app_using_lda_to_suggest_github/", 
            "score": 11, 
            "selftext": "", 
            "subreddit": "algorithms", 
            "title": "Flask app using LDA to suggest GitHub repositories based on what you have starred.", 
            "url": "http://www.gitsuggest.com"
        }, 
        {
            "author": "Yeahjustnah", 
            "created_utc": 1507014334.0, 
            "domain": "self.algorithms", 
            "id": "73ytjy", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/73ytjy/what_are_the_most_suitable_abm_simulation/", 
            "score": 9, 
            "selftext": "More precisely agent-based simulation software for vehicle routing problems with time windows", 
            "subreddit": "algorithms", 
            "title": "What are the most suitable ABM simulation software options for vehicle routing problems?", 
            "url": "https://www.reddit.com/r/algorithms/comments/73ytjy/what_are_the_most_suitable_abm_simulation/"
        }, 
        {
            "author": "simkessy", 
            "created_utc": 1507041355.0, 
            "domain": "self.algorithms", 
            "id": "740sha", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/740sha/interested_in_email_classification_not_sure_how/", 
            "score": 7, 
            "selftext": "I'm working with some friends on an idea for email classification and we're wondering what would be the best way to approach the problem. Essentially we're looking to create an application/Outlook extension that would classify emails into various categories  like \"Important/Not Important\" or \"Project email, Contract talks, Trash\", we're not totally sure on categories at the moment, if it could be user defined it would be more useful I guess. But yea that's the general idea. \n\nHow could one approach such a problem, is text-mining the right approach or should be we looking into AI/Machine Learning techniques or a combination of the two? I read a bit about Bayesian Probabilities and how using previous results sets you get a matrix table of probabilities and that's used to determine where new data would be categories. Is this the best approach or are there alternatives we should be looking at? How do we even get the first set of probabilities if that's the way we went, would we have to go through a bunch of emails and classify them manually to get an initial result set? \n\nAnything you think might be useful to learn or look at would be great, thank you. ", 
            "subreddit": "algorithms", 
            "title": "Interested in email classification, not sure how to approach", 
            "url": "https://www.reddit.com/r/algorithms/comments/740sha/interested_in_email_classification_not_sure_how/"
        }, 
        {
            "author": "mguzmann", 
            "created_utc": 1507136196.0, 
            "domain": "self.algorithms", 
            "id": "749hb2", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/algorithms/comments/749hb2/find_optimal_combination_of_elements_from/", 
            "score": 4, 
            "selftext": "I have several sets of pairs like:\n\na: ([1, 2], [4,5])\n\nb: ([1, 3])\n\nc: ([4, 7], [1, 8])\n\nd: ([9, 7], [1, 5])\n\n...\n\n\nWhere no two pairs are identical, and the elements of no pair are identical. Each set can contain many pairs. There is a smallish number of elements (around 200).\n\nFrom each set I take one pair. Now, I want to take pairs in such a way, that the number of elements is the smallest possible.\n\nThe problem is too large to try every combination, is there any algorithm or heuristic that might help me find the optimal (or a close guess)?\n", 
            "subreddit": "algorithms", 
            "title": "Find optimal combination of elements from multiple sets", 
            "url": "https://www.reddit.com/r/algorithms/comments/749hb2/find_optimal_combination_of_elements_from/"
        }
    ], 
    "total_submissions": 7, 
    "utc_of_data_collection_start": "2017-10-16 18:37:09"
}