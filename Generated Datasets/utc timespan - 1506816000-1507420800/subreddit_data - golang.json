{
    "active_user_count": 267, 
    "advertiser_category": null, 
    "audience_target": "programming,technology", 
    "avg_comment_num_per_submission": 9, 
    "avg_submission_score": 15, 
    "collection_range_end_unix_timestamp": 1507420800, 
    "collection_range_end_utc": "2017-10-08 00:00:00", 
    "collection_range_start_unix_timestamp": 1506816000, 
    "collection_range_start_utc": "2017-10-01 00:00:00", 
    "description": "Please follow the [Go Community Code of Conduct](https://golang.org/conduct) while posting here. In short:\n\n* Treat everyone with respect and kindness.\n* Be thoughtful in how you communicate.\n* Don\u2019t be destructive or inflammatory.\n* If you encounter an issue, please contact the moderators.\n\n**Documentation**\n\n* [Official Go Documentation](http://golang.org/doc/)\n* [Standard Library Docs](http://golang.org/pkg/)\n* [Other Package Docs](http://godoc.org/)\n\n**Community**\n\n* [Go Nuts Mailing List](http://groups.google.com/group/golang-nuts)\n* [Go questions in Stackoverflow](http://stackoverflow.com/questions/tagged/go)\n* [Go in Google+](https://plus.google.com/101406623878176903605)\n* #go-nuts in irc.freenode.org\n* [Resources for new Go programmers](http://dave.cheney.net/resources-for-new-go-programmers)\n\n**Other Resources**\n\n* [Go for App Engine](https://developers.google.com/appengine/docs/go/)!", 
    "display_name": "golang", 
    "domain_occurrences": {
        "aahframework.org": 1, 
        "agniva.me": 1, 
        "akutz.wordpress.com": 1, 
        "bionics.it": 1, 
        "blog.alexellis.io": 1, 
        "blog.learngoprogramming.com": 2, 
        "blog.thecodeteam.com": 1, 
        "codereview.stackexchange.com": 1, 
        "dangerontheranger.blogspot.com": 1, 
        "developers.redhat.com": 1, 
        "dmitryfrank.com": 1, 
        "dunglas.fr": 1, 
        "getstream.io": 1, 
        "github.com": 22, 
        "golangbot.com": 1, 
        "gomatcha.io": 1, 
        "groups.google.com": 1, 
        "hackernoon.com": 2, 
        "herman.asia": 1, 
        "medium.com": 3, 
        "nivenly.com": 1, 
        "outcrawl.com": 1, 
        "pilosa.com": 1, 
        "povilasv.me": 1, 
        "scene-si.org": 1, 
        "self.golang": 32, 
        "syslog.ravelin.com": 1, 
        "twitter.com": 1, 
        "twurst.com": 1, 
        "writeingo.com": 1, 
        "youtu.be": 1, 
        "youtube.com": 2
    }, 
    "id": "2rc7j", 
    "num_external_website_posts": 57, 
    "num_text_posts": 32, 
    "public_description": "Gophers of the world unite!", 
    "submissions": [
        {
            "author": "igknighted", 
            "created_utc": 1507418023.0, 
            "domain": "self.golang", 
            "id": "74y7sn", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74y7sn/the_go_get_vulnerability_could_we_leverage_it_to/", 
            "score": 4, 
            "selftext": "My goal is to add a notice at the console that will tell the user about the vulnerability when they go get my code that requires the user to acknowledge they need an update before go get continues. Would that be possible or even considered reasonable?  \n  \nEssentially I'm thinking to actually use the vulnerability to supply the notice.", 
            "subreddit": "golang", 
            "title": "The go get vulnerability, could we leverage it to notify users of the problem?", 
            "url": "https://www.reddit.com/r/golang/comments/74y7sn/the_go_get_vulnerability_could_we_leverage_it_to/"
        }, 
        {
            "author": "OnlyOneCannolo", 
            "created_utc": 1507411813.0, 
            "domain": "self.golang", 
            "id": "74xmbc", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74xmbc/is_len_evaluated_each_iteration_in_for_i_0_i_lenx/", 
            "score": 5, 
            "selftext": "Given the following for-loop:\n\nfor i :=0; i < len(x); i ++ { ... }\n\nIs len(x) evaluated every iteration, or just once? Does it depend on whether \"x\" is modified in the loop?", 
            "subreddit": "golang", 
            "title": "Is \"len\" evaluated each iteration in for i :=0; i < len(x); i ++ { ... } ?", 
            "url": "https://www.reddit.com/r/golang/comments/74xmbc/is_len_evaluated_each_iteration_in_for_i_0_i_lenx/"
        }, 
        {
            "author": "0xjnml", 
            "created_utc": 1507406513.0, 
            "domain": "github.com", 
            "id": "74x41o", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74x41o/ann_99c_is_a_c99_compiler_targeting_a_virtual/", 
            "score": 21, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "[ANN] 99c is a c99 compiler targeting a virtual machine", 
            "url": "https://github.com/cznic/99c"
        }, 
        {
            "author": "darxkies", 
            "created_utc": 1507399688.0, 
            "domain": "writeingo.com", 
            "id": "74wffn", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74wffn/important_go_interfaces/", 
            "score": 67, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Important Go Interfaces", 
            "url": "https://www.writeingo.com/blog/important-go-interfaces/"
        }, 
        {
            "author": "jacksonnic", 
            "created_utc": 1507389665.0, 
            "domain": "blog.alexellis.io", 
            "id": "74vfwt", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74vfwt/build_a_serverless_golang_function_with_openfaas/", 
            "score": 26, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Build a Serverless Golang Function with OpenFaaS", 
            "url": "https://blog.alexellis.io/serverless-golang-with-openfaas/"
        }, 
        {
            "author": "go-li", 
            "created_utc": 1507354677.0, 
            "domain": "self.golang", 
            "id": "74t5q0", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74t5q0/generics_playground/", 
            "score": 2, 
            "selftext": "http://go-li.github.io/test.html\n\ndemo programs\n\nhttps://github.com/go-li/demo", 
            "subreddit": "golang", 
            "title": "Generics playground", 
            "url": "https://www.reddit.com/r/golang/comments/74t5q0/generics_playground/"
        }, 
        {
            "author": "juniorsysadmin1", 
            "created_utc": 1507332249.0, 
            "domain": "self.golang", 
            "id": "74rea0", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74rea0/newbie_packaging_and_including/", 
            "score": 1, 
            "selftext": "I am following [this guide](https://thenewstack.io/make-a-restful-json-api-go/). \n\nSo at my current working directory I have five files. handles.go, logger.go, routes.go routes.go and main.go. \n\nMy main.go looks like the following: \n\n    package main\n\n    import (\n        \"log\"\n        \"net/http\"\n    )\n\n    func main() {\n\n        router := NewRouter()\n\n        log.Fatal(http.ListenAndServe(\":8080\", router))\n    }\n\n`NewRouter` is a function defined in `routes.go`. Several other functions are also being called among those `.go`. In the tutorial, I see no include/import statement for those `.go` files; My guess is there must be some parameters that's being passed in `go build` or `go run` that will incorporate all the files? if so what is it? \n", 
            "subreddit": "golang", 
            "title": "[newbie] packaging and including.", 
            "url": "https://www.reddit.com/r/golang/comments/74rea0/newbie_packaging_and_including/"
        }, 
        {
            "author": "willwalexander", 
            "created_utc": 1507326789.0, 
            "domain": "self.golang", 
            "id": "74qvgr", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74qvgr/gobencode_implements_decoding_of_bencoded_values/", 
            "score": 3, 
            "selftext": "There are already a few Go packages that implement [bencoding](http://www.bittorrent.org/beps/bep_0003.html#bencoding), but I haven't found any that work similarly to encoding/json (where you pass a value to be encoded/decoded and don't have to think about interfaces or type checks at all). This one isn't super advanced (it only supports byte slices, ints, slices, and structs with tags); I tried to keep it minimal as I feel encoding/json goes a bit too far and presents an overwhelming interface. I hope somebody finds it useful. Criticism welcome.\n\n[GitHub](https://github.com/wwalexander/gobencode)\n\n[GoDoc](https://godoc.org/github.com/wwalexander/gobencode)", 
            "subreddit": "golang", 
            "title": "gobencode: implements decoding of bencoded values", 
            "url": "https://www.reddit.com/r/golang/comments/74qvgr/gobencode_implements_decoding_of_bencoded_values/"
        }, 
        {
            "author": "srxf", 
            "created_utc": 1507320510.0, 
            "domain": "codereview.stackexchange.com", 
            "id": "74q7ex", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74q7ex/databaseagnostic_user_model_in_golang/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Database-agnostic user model in Golang", 
            "url": "https://codereview.stackexchange.com/questions/177338/database-agnostic-user-model-in-golang"
        }, 
        {
            "author": "MARTEX8000", 
            "created_utc": 1507317445.0, 
            "domain": "self.golang", 
            "id": "74pvc9", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 55, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74pvc9/go_and_ides/", 
            "score": 9, 
            "selftext": "Just wondering how many here are using an IDE to work with Go, and what the preferred product is.\nI'm using Webstorm but I also have the Gogland beta ide (which honestly I never use, not sure why)\nOr are most folks just running things from the favorite editor?", 
            "subreddit": "golang", 
            "title": "Go and IDE's", 
            "url": "https://www.reddit.com/r/golang/comments/74pvc9/go_and_ides/"
        }, 
        {
            "author": "computersmusiclife", 
            "created_utc": 1507312359.0, 
            "domain": "medium.com", 
            "id": "74pbd8", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74pbd8/beauty_of_the_go_programming_language/", 
            "score": 87, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Beauty of the Go Programming Language", 
            "url": "https://medium.com/@kanishkdudeja/the-beauty-of-go-98057e3f0a7d"
        }, 
        {
            "author": "whitesoapchicken", 
            "created_utc": 1507310057.0, 
            "domain": "self.golang", 
            "id": "74p1zf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74p1zf/gothic_what_to_do_in_authentication_callback/", 
            "score": 0, 
            "selftext": "I read that I should create a session and store useful data from the user info. My question is should I create a separate session store to store the session ID and user ID? It seems to be duplicate with the provider_gothic_session store in gothic that I have to store the session ID two times in different way. Do I misunderstand the usage of provider_gothic_session? Is provider_gothic_session only used for the authentication process? Afterwards I should create another session ID to keep track of who logged in? I noticed gothic is using the session store in a very strange way.", 
            "subreddit": "golang", 
            "title": "Gothic: what to do in authentication callback", 
            "url": "https://www.reddit.com/r/golang/comments/74p1zf/gothic_what_to_do_in_authentication_callback/"
        }, 
        {
            "author": "goldfinch213", 
            "created_utc": 1507309692.0, 
            "domain": "github.com", 
            "id": "74p0ge", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74p0ge/a_golang_package_to_interact_with_a_process/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A golang package to interact with a process running in background", 
            "url": "https://github.com/adlane/exec"
        }, 
        {
            "author": "natefinch", 
            "created_utc": 1507308247.0, 
            "domain": "github.com", 
            "id": "74ouii", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74ouii/skyhook_a_pluginwrapper_for_googles_skylark/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Skyhook, a plugin-wrapper for google's skylark language", 
            "url": "https://github.com/natefinch/skyhook"
        }, 
        {
            "author": "samuellampa", 
            "created_utc": 1507291011.0, 
            "domain": "bionics.it", 
            "id": "74n4ka", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74n4ka/almost_ranging_over_multiple_go_channels/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "(Almost) ranging over multiple Go channels simultaneously", 
            "url": "http://bionics.it/posts/range-over-multiple-go-channels"
        }, 
        {
            "author": "supersarkar", 
            "created_utc": 1507284580.0, 
            "domain": "self.golang", 
            "id": "74mowi", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 88, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74mowi/which_languages_you_knew_before_learning_go/", 
            "score": 14, 
            "selftext": "I am a frontend web developer, my skills are HTML, CSS, JS. Currently, I am learning Go. I am curious about what other developers are learning Go. Especially if anyone is learning Go as their first programming language?", 
            "subreddit": "golang", 
            "title": "Which language/s you knew before learning Go?", 
            "url": "https://www.reddit.com/r/golang/comments/74mowi/which_languages_you_knew_before_learning_go/"
        }, 
        {
            "author": "ZetaHunter", 
            "created_utc": 1507278303.0, 
            "domain": "github.com", 
            "id": "74mbf2", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74mbf2/colly_fast_and_elegant_scraping_framework/", 
            "score": 36, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Colly: Fast and Elegant Scraping Framework", 
            "url": "https://github.com/asciimoo/colly"
        }, 
        {
            "author": "GoblinFruitSeed", 
            "created_utc": 1507275705.0, 
            "domain": "self.golang", 
            "id": "74m62w", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 22, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74m62w/will_switching_from_nodejssocketio_to/", 
            "score": 5, 
            "selftext": "I have an app that I made using Node.js and Socket.io. The communication between the clients and the server goes very well until more and more clients start joining the room. Basically what happens is that the server has to update every connected client every 30ms with a message that is ~15Kb on average. When the number of connected users increases to about 300, a server with this CPU [Intel Xeon D-1520 - 4c/8t - 2.4GHz /2.7GHz] will start failing because it's usage cranks up to about 120% and beyond. And after testing, I gathered that the increase in CPU usage was coming from the 'emit' statement from the server (which makes sense since it sends to more and more clients).\n\nIt is also attributed to the fact that Nodejs only uses 1 core by default, theoretically. Therefore, it's not really exploiting the multicore advantage of the CPU. I would like to prevent the 'emission' from blocking the rest of the app from running correctly; which is that I'd like the logic of the app to still run seamlessly even when there's a lot of messages to be sent, and even then, the multiple cores would share the load of emission to be performed.\n\nUsing clustering wasn't really helpful as it runs one version of the app for each child process (which is just ridiculous). And even if I could arrange to run the logic of the app on one core and have the remaining cores take care of dispatching the messages, I would still need the 'app-logic' core to communicate its state to the dispatchers which would then update the corresponding clients; but I'd encounter the same bottleneck that I'm running from in the first part of this last approach, with an increasing population. And Redis turned out to more complicated than it should, with outdated documentation.\n\nI wanted to turn to Golang since I heard of its multithreading capability. But I'm wondering if that aspect is actually going to be useful to my case. So my question is to know if Golang would allow me to have relatively heavy messages to send that wouldn't necessarily impact the overall performance of the CPU. Can the work of emitting a message through Websockets be distributed to the available cores and not weight on just one core? Also is WebSockets the best choice for this?", 
            "subreddit": "golang", 
            "title": "Will switching from Nodejs-Socket.io to Golang-Websockets resolve the problem of performance issues on message emission from the server?", 
            "url": "https://www.reddit.com/r/golang/comments/74m62w/will_switching_from_nodejssocketio_to/"
        }, 
        {
            "author": "liv43", 
            "created_utc": 1507237247.0, 
            "domain": "hackernoon.com", 
            "id": "74ixnm", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74ixnm/how_to_display_existing_files_on_server_using/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "How to display existing files on server using DropzoneJS and Go", 
            "url": "https://hackernoon.com/how-to-display-existing-files-on-server-using-dropzonejs-and-go-53e24b57ba19"
        }, 
        {
            "author": "erdeicodrut", 
            "created_utc": 1507236978.0, 
            "domain": "self.golang", 
            "id": "74iwm2", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74iwm2/project_idea_bigginer/", 
            "score": 3, 
            "selftext": "I need an idea for a project and I'd like it to be a web based app (like a Twitter client or a smart backup system). It doesn't need to be original. It just should not include a GUI I'm new to go and web development. I just want a project that could make me understand better what it takes to be a web developer (not front-end)\n", 
            "subreddit": "golang", 
            "title": "Project idea Bigginer", 
            "url": "https://www.reddit.com/r/golang/comments/74iwm2/project_idea_bigginer/"
        }, 
        {
            "author": "liv43", 
            "created_utc": 1507236414.0, 
            "domain": "hackernoon.com", 
            "id": "74iub2", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74iub2/how_to_build_a_file_upload_form_using_dropzonejs/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "How to build a file upload form using DropzoneJS and Go", 
            "url": "https://hackernoon.com/how-to-build-a-file-upload-form-using-dropzonejs-and-go-8fb9f258a991"
        }, 
        {
            "author": "dmanog", 
            "created_utc": 1507227843.0, 
            "domain": "self.golang", 
            "id": "74hvxu", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74hvxu/dumb_question_how_does_go_runtime_differentiate/", 
            "score": 1, 
            "selftext": "I am looking at this code\n\n    type StructWrapper struct {\n        myField InnerWrapper\n    }\n\n    type InnerWrapper struct {\n        myField int\n    }\n\n    a := InnerWrapper{1}\n    b := StructWrapper{a}\n\nIt seems that \n\n    a.myField\n    a\n    b\n    \nall have the same address.\n\nUpon further research it seems that struct is just an alias to the its underlying field, so I am wondering where is this meta data stored to differentiate the underlying field and the struct itself, and how does golang know that the struct satisfies some interface and not the field satisfy the interface?\n\n\n\n", 
            "subreddit": "golang", 
            "title": "[Dumb Question] How does go runtime differentiate between a struct and its field if a struct is just a alias of the field?", 
            "url": "https://www.reddit.com/r/golang/comments/74hvxu/dumb_question_how_does_go_runtime_differentiate/"
        }, 
        {
            "author": "travislturner", 
            "created_utc": 1507227707.0, 
            "domain": "pilosa.com", 
            "id": "74hver", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74hver/range_queries_using_bitmaps_in_pilosa/", 
            "score": 8, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Range Queries using Bitmaps in Pilosa", 
            "url": "https://www.pilosa.com/blog/range-encoded-bitmaps/"
        }, 
        {
            "author": "sakutz", 
            "created_utc": 1507226449.0, 
            "domain": "blog.thecodeteam.com", 
            "id": "74hq6w", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74hq6w/why_global_exit_handlers_are_missing_from_go_how/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Why global exit handlers are missing from Go & how to add them", 
            "url": "https://blog.thecodeteam.com/2017/10/02/say-hello-goodbye/"
        }, 
        {
            "author": "sakutz", 
            "created_utc": 1507218850.0, 
            "domain": "akutz.wordpress.com", 
            "id": "74guz1", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74guz1/why_trapping_sigabrt_in_a_go_program_is_a_bad_idea/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Why trapping SIGABRT in a Go program is a bad idea", 
            "url": "https://akutz.wordpress.com/2017/10/02/golang-and-sigabrt/"
        }, 
        {
            "author": "the_guitar_licked_me", 
            "created_utc": 1507217146.0, 
            "domain": "self.golang", 
            "id": "74gobc", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74gobc/validate_http_request_response_against_swagger/", 
            "score": 5, 
            "selftext": "Hi,\n\nI'm developing some services in go and need to provide API documentation.\n\nI've written documentation in swagger which I believe is complete...  but its probably not and is likely to go out of date...\n\nI have a full suite of integration gets that tests my service / behaviors and makes sure its doing what its meant to do.\n\nWhat seems natural is in my integration tests to validate my requests / reponses and warn / fail, but I cant see anything that does that.\n\nIt seems most of the swagger stuff is about generating server code which I dont want to do.\n\nAnyone know of anything that could be useful?  This [Go proxy](https://github.com/gchaincl/swagger-proxy) comes close but with the vendor folder I get type conflicts if I try and use it and it doesnt really give me any granularity, although, just a log at the integration tests would be a big step forward to syncing up my API doc and what actually goes on and I can script / hack around with that, but not so nice.\n\nAny help would be great thanks!", 
            "subreddit": "golang", 
            "title": "Validate http request / response against swagger?", 
            "url": "https://www.reddit.com/r/golang/comments/74gobc/validate_http_request_response_against_swagger/"
        }, 
        {
            "author": "msgtonaveen", 
            "created_utc": 1507216493.0, 
            "domain": "golangbot.com", 
            "id": "74glnc", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74glnc/go_defer_tutorial/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go defer tutorial", 
            "url": "https://golangbot.com/defer/"
        }, 
        {
            "author": "blackflicker", 
            "created_utc": 1507213130.0, 
            "domain": "blog.learngoprogramming.com", 
            "id": "74g8ur", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74g8ur/mini_rulebook_for_short_variables_declarations/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Mini Rulebook for short variables declarations", 
            "url": "https://blog.learngoprogramming.com/golang-short-variable-declaration-rules-6df88c881ee"
        }, 
        {
            "author": "udevNull", 
            "created_utc": 1507209256.0, 
            "domain": "self.golang", 
            "id": "74fuwk", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74fuwk/any_reference_implementations_of_sp80090arev1/", 
            "score": 2, 
            "selftext": "Any golang implementations of the final revision of HMAC-DRBG for reference purposes?\n\nhttps://csrc.nist.gov/publications/detail/sp/800-90a/rev-1/final", 
            "subreddit": "golang", 
            "title": "Any Reference Implementations of SP800-90a-rev1? HMAC-DRBG", 
            "url": "https://www.reddit.com/r/golang/comments/74fuwk/any_reference_implementations_of_sp80090arev1/"
        }, 
        {
            "author": "Bappedekkel", 
            "created_utc": 1507204778.0, 
            "domain": "github.com", 
            "id": "74fgog", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74fgog/subnet_an_encrypted_vpn_in_2k_loc_written_in_go/", 
            "score": 69, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Subnet: an encrypted VPN in 2k LOC, written in Go", 
            "url": "https://github.com/twitchyliquid64/subnet"
        }, 
        {
            "author": "kris-nova", 
            "created_utc": 1507204402.0, 
            "domain": "nivenly.com", 
            "id": "74ffn9", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 33, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74ffn9/i_genuinely_love_this_solution_to_generics_in_go/", 
            "score": 20, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "I genuinely love this solution to generics in Go", 
            "url": "https://www.nivenly.com/finally-an-elegant-solutions-to-generics-in-go/"
        }, 
        {
            "author": "rflurker", 
            "created_utc": 1507202091.0, 
            "domain": "dmitryfrank.com", 
            "id": "74f9mt", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 22, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74f9mt/i_love_go/", 
            "score": 39, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "I love Go", 
            "url": "https://dmitryfrank.com/articles/i_love_go"
        }, 
        {
            "author": "procipher", 
            "created_utc": 1507200217.0, 
            "domain": "self.golang", 
            "id": "74f4t6", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74f4t6/need_help_in_formatting/", 
            "score": 1, 
            "selftext": "I am starting to learn go and got into a problem(challenge). I have to format text.\n\nInput will be like: `api=<http://example.com/first/api:latest|example.com/first/api:latest>`\n\nAnd I want output like this:\n\n`api=example.com/first/api:latest`\n\n\ni.e. strip gt & lt signs, `http` OR text before `|` and `>` sign. \n\nContext: Slack bot. It interprets text with dot as link and sends it in `<..|..>` format. If you are not clear, please feel free to comment.\n\nI was seeing ` net/url` but I think that would be not of big help.\n\n\nAny help, comment, resource I should see will be highly appreciated. Thanks.", 
            "subreddit": "golang", 
            "title": "Need help in formatting", 
            "url": "https://www.reddit.com/r/golang/comments/74f4t6/need_help_in_formatting/"
        }, 
        {
            "author": "irregular_regular", 
            "created_utc": 1507169559.0, 
            "domain": "self.golang", 
            "id": "74d0l9", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74d0l9/nethttp_issue_setting_a_cookie_with_value_\u672c/", 
            "score": 8, 
            "selftext": "I get this error when trying to set that character to a value in the cookie\n\n    net/http: invalid byte '\u00e6' in Cookie.Value; dropping invalid bytes\n\nwith the code being \n\n\tcookieString := \"\u672c\"\n\tcookie := http.Cookie{Name: \"characters\", Value: cookieString}\n\thttp.SetCookie(w, &cookie)\n\n", 
            "subreddit": "golang", 
            "title": "net/http issue setting a cookie with value \u672c", 
            "url": "https://www.reddit.com/r/golang/comments/74d0l9/nethttp_issue_setting_a_cookie_with_value_\u672c/"
        }, 
        {
            "author": "philpearl", 
            "created_utc": 1507156913.0, 
            "domain": "syslog.ravelin.com", 
            "id": "74bt28", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74bt28/golangpoolparty_ravelin_tech/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "#GolangPoolParty! - Ravelin Tech", 
            "url": "https://syslog.ravelin.com/golangpoolparty-950723a042be"
        }, 
        {
            "author": "everdev", 
            "created_utc": 1507153905.0, 
            "domain": "github.com", 
            "id": "74bi7m", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74bi7m/spin_a_small_development_server_with_onthefly/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Spin: A small development server with on-the-fly string replacement", 
            "url": "https://github.com/everdev/spin"
        }, 
        {
            "author": "wemgl", 
            "created_utc": 1507149631.0, 
            "domain": "groups.google.com", 
            "id": "74b17q", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74b17q/go_184_and_191_released/", 
            "score": 21, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go 1.8.4 and 1.9.1 Released!", 
            "url": "https://groups.google.com/forum/m/#!topic/golang-nuts/sHfMg4gZNps"
        }, 
        {
            "author": "dlsniper", 
            "created_utc": 1507149561.0, 
            "domain": "twitter.com", 
            "id": "74b0wn", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74b0wn/go_191_and_go_184_are_released/", 
            "score": 101, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go 1.9.1 and Go 1.8.4 are released!", 
            "url": "https://twitter.com/golang/status/915677598457331712"
        }, 
        {
            "author": "Ainar-G", 
            "created_utc": 1507147906.0, 
            "domain": "developers.redhat.com", 
            "id": "74au35", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74au35/red_hat_adds_go_clangllvm_rust_updates_gcc_xpost/", 
            "score": 26, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Red Hat adds Go, Clang/LLVM, Rust; updates GCC (X-post /r/rust)", 
            "url": "https://developers.redhat.com/blog/2017/10/04/red-hat-adds-go-clangllvm-rust-compiler-toolsets-updates-gcc/"
        }, 
        {
            "author": "jeevatkm", 
            "created_utc": 1507144873.0, 
            "domain": "aahframework.org", 
            "id": "74ah75", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74ah75/ann_aah_web_framework_for_go_v09_released/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "ANN: aah web framework for Go v0.9 Released", 
            "url": "https://aahframework.org"
        }, 
        {
            "author": "blackflicker", 
            "created_utc": 1507123280.0, 
            "domain": "blog.learngoprogramming.com", 
            "id": "74838r", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74838r/a_visual_how_to_guide_to_go_variables/", 
            "score": 16, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A visual how to guide to Go variables", 
            "url": "https://blog.learngoprogramming.com/learn-go-lang-variables-visual-tutorial-and-ebook-9a061d29babe"
        }, 
        {
            "author": "titpetric", 
            "created_utc": 1507122532.0, 
            "domain": "scene-si.org", 
            "id": "7480pc", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7480pc/elegant_code_and_go_tit_petric/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Elegant code and Go - Tit Petric", 
            "url": "https://scene-si.org/2017/10/04/elegant-code-and-go/"
        }, 
        {
            "author": "sbinet", 
            "created_utc": 1507120388.0, 
            "domain": "self.golang", 
            "id": "747tzo", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/747tzo/introduction_to_statistics_with_gonum/", 
            "score": 36, 
            "selftext": "https://sbinet.github.io/posts/2017-10-04-intro-to-stats-with-gonum/\n\nthe first part to a multi-month series of blog posts.\n(I've just bought \"Data Science from Scratch: First Principles with Python\" and will also give a lecture about stats at my university)", 
            "subreddit": "golang", 
            "title": "Introduction to Statistics With Gonum", 
            "url": "https://www.reddit.com/r/golang/comments/747tzo/introduction_to_statistics_with_gonum/"
        }, 
        {
            "author": "fjl", 
            "created_utc": 1507119890.0, 
            "domain": "twurst.com", 
            "id": "747siz", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 15, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/747siz/linked_lists_as_map_keys_a_weird_go_trick/", 
            "score": 16, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Linked Lists As Map Keys - A Weird Go Trick", 
            "url": "https://twurst.com/articles/list-map-key.html"
        }, 
        {
            "author": "itachi_amaterasu", 
            "created_utc": 1507118342.0, 
            "domain": "agniva.me", 
            "id": "747nx8", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/747nx8/a_small_memory_optimization_for_logheavy/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A small memory optimization for log-heavy applications", 
            "url": "http://agniva.me/go/2017/10/03/improving-log-write.html"
        }, 
        {
            "author": "grkuntzmd", 
            "created_utc": 1507117427.0, 
            "domain": "self.golang", 
            "id": "747ldi", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/747ldi/using_go_19_type_aliases/", 
            "score": 0, 
            "selftext": "In a small project that I am writing, I have a package `models` that exposes a type `Transaction`. In another package `controllers`, I make frequent reference to `models.Transaction`.\n\nFrom a a purely software engineering perspective, what would be the advantages and disadvantages of using the new Go 1.9 type alias language feature to alias `models.Transaction` as `Transaction` in the `controllers` package (`type Transaction = models.Transaction`) so that I don't need to type `models.` at every reference, setting aside the arguments about how easy it is to type `models.Transaction` using a modern editor?\n\nI'm not saying that I am going to do this. I just thinking about the implications.", 
            "subreddit": "golang", 
            "title": "Using Go 1.9 type aliases", 
            "url": "https://www.reddit.com/r/golang/comments/747ldi/using_go_19_type_aliases/"
        }, 
        {
            "author": "absdevops", 
            "created_utc": 1507114488.0, 
            "domain": "self.golang", 
            "id": "747dlf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/747dlf/best_way_of_achieving_this_json_transformation/", 
            "score": 5, 
            "selftext": "[Link here!](https://gist.github.com/arehmandev/87a63bf5964ce4a8833294fb831c6373)\n\nHi I've managed to do this in hacky ways (done in Groovy, some horrendous looking code) - what would be the best way of achieving this transformation?\n\nEdit: Added a solution contributed by u/titpetric - big thanks", 
            "subreddit": "golang", 
            "title": "Best way of achieving this JSON transformation?", 
            "url": "https://www.reddit.com/r/golang/comments/747dlf/best_way_of_achieving_this_json_transformation/"
        }, 
        {
            "author": "vikramks", 
            "created_utc": 1507112177.0, 
            "domain": "self.golang", 
            "id": "74783x", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74783x/load_same_angular_app_on_subdomains/", 
            "score": 0, 
            "selftext": "Hi,\n\nI am working on a small project which is developed with angular, angular app uses REST api developed with golang. As per requirement there will be multiple merchants ( shops ) who can register and access their admin panel on different subdomains like shop1.examplestore.com and shop2.examplestore.com. I already have build API and app but not sure how to load diffferent admin panels on subdomains for different merchants. Is there a article or guidelines for this type of requirement ?\n\nAny help is appreciable.\nThanks", 
            "subreddit": "golang", 
            "title": "Load same angular app on subdomains.", 
            "url": "https://www.reddit.com/r/golang/comments/74783x/load_same_angular_app_on_subdomains/"
        }, 
        {
            "author": "jmswlms", 
            "created_utc": 1507110170.0, 
            "domain": "github.com", 
            "id": "7473hz", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7473hz/sop_multipurpose_metrics_storage_and_manipulation/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "sop - Multi-purpose metrics storage and manipulation tool", 
            "url": "https://github.com/rapidloop/sop"
        }, 
        {
            "author": "phonkee", 
            "created_utc": 1507106118.0, 
            "domain": "github.com", 
            "id": "746uye", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/746uye/simple_json_rest_client_for_go/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Simple json rest client for go.", 
            "url": "https://github.com/phonkee/go-rip"
        }, 
        {
            "author": "1ngv4r", 
            "created_utc": 1507105371.0, 
            "domain": "self.golang", 
            "id": "746tgj", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 89, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/746tgj/why_go_is_so_popular_for_webdevelopment/", 
            "score": 51, 
            "selftext": "Hello, guys. I've noticed a lot of people switch from traditional web stack to Go. What's the main purpose?\n\nThere are several advantages if you think of Go **as a reasonable replacement for C++ or Java.** But Go also seems to have a growing popularity **in web-development.**\n\nMost Go frameworks I've seen even can't came close to 3-years-ago-Rails or any other high-level webdev toolkit:\n\n* smaller ecosystem;\n* higher entry level;\n* web-frameworks in an early-stage, rising and dying everyday;\n* weak integration with modern webdev workflow.\n\nJust first things that came on mind. And despite this, a lot of people still are re-implementing the same things, which were written in other langs and work well.\n\nWhy people choose Go for webdev?\n\nNot a holy-war, please. Thank you in advance.", 
            "subreddit": "golang", 
            "title": "Why Go is so popular for web-development?", 
            "url": "https://www.reddit.com/r/golang/comments/746tgj/why_go_is_so_popular_for_webdevelopment/"
        }, 
        {
            "author": "vincentrabah", 
            "created_utc": 1507093861.0, 
            "domain": "github.com", 
            "id": "7462vn", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7462vn/an_example_of_docker_multistage_building_with/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "An example of Docker multi-stage building with Golang", 
            "url": "https://github.com/itwars/Docker-multi-stage-build#an-example-of-docker-multi-stage-building-with-golang"
        }, 
        {
            "author": "adamcolton", 
            "created_utc": 1507076709.0, 
            "domain": "github.com", 
            "id": "744m8x", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/744m8x/small_fswatch_testing_tool/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Small fswatch testing tool", 
            "url": "https://github.com/AdamColton/fixme"
        }, 
        {
            "author": "dericofilho", 
            "created_utc": 1507074308.0, 
            "domain": "youtube.com", 
            "id": "744dxj", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "The Go Programming Language", 
                    "author_url": "https://www.youtube.com/user/gocoding", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/LHe1Cb_Ud_M?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/LHe1Cb_Ud_M/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Ways To Do Things - Peter Bourgon - Release Party #GoSF", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/744dxj/ways_to_do_things_peter_bourgon_release_party_gosf/", 
            "score": 24, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Ways To Do Things - Peter Bourgon - Release Party #GoSF", 
            "url": "https://www.youtube.com/watch?v=LHe1Cb_Ud_M"
        }, 
        {
            "author": "dericofilho", 
            "created_utc": 1507074248.0, 
            "domain": "youtu.be", 
            "id": "744dr3", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "The Go Programming Language", 
                    "author_url": "https://www.youtube.com/user/gocoding", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/aAhNDgEZj_U?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/aAhNDgEZj_U/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Analyzing production using Flamegraphs - Prashant Varanasi - Release Party #GoSF", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/744dr3/analyzing_production_using_flamegraphs_prashant/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Analyzing production using Flamegraphs - Prashant Varanasi - Release Party #GoSF", 
            "url": "https://youtu.be/aAhNDgEZj_U"
        }, 
        {
            "author": "1Gijs", 
            "created_utc": 1507068024.0, 
            "domain": "self.golang", 
            "id": "743rr6", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/743rr6/ticket_for_sale_for_dotgo_paris_monday_nov_6/", 
            "score": 3, 
            "selftext": "I have an early ticket for the DotGo conference in Paris, Monday, Nov 6. \nBut unfortunately I cannot attend now, although I loved going to the past editions.\n\nSo I am offering it for sale, I payed Euro 93,-. Tickets currently start at Euro 225,- (incl fee and TVA). So if you consider going then please do us both a favor; I do not want to make a profit. I checked with the organization and its not a problem to sell a ticket.\n\nSee https://www.dotgo.eu/\n", 
            "subreddit": "golang", 
            "title": "Ticket for sale for DotGo, Paris, Monday Nov 6", 
            "url": "https://www.reddit.com/r/golang/comments/743rr6/ticket_for_sale_for_dotgo_paris_monday_nov_6/"
        }, 
        {
            "author": "moonheart08", 
            "created_utc": 1507065491.0, 
            "domain": "self.golang", 
            "id": "743i2o", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/743i2o/up_to_date_physics_library_wcollision_masks_for_go/", 
            "score": 1, 
            "selftext": "Are there any? The physics libraries that i can find (all chipmunk2d bindings) are several years out of date.", 
            "subreddit": "golang", 
            "title": "Up To Date physics library w/collision masks for Go", 
            "url": "https://www.reddit.com/r/golang/comments/743i2o/up_to_date_physics_library_wcollision_masks_for_go/"
        }, 
        {
            "author": "philpearl", 
            "created_utc": 1507062007.0, 
            "domain": "medium.com", 
            "id": "7433x4", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7433x4/goroutine_vs_c_thread/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Goroutine vs C thread", 
            "url": "https://medium.com/@philpearl/goroutine-shoot-out-e47585bebc1f"
        }, 
        {
            "author": "ukautz", 
            "created_utc": 1507060003.0, 
            "domain": "github.com", 
            "id": "742vmw", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/742vmw/template_processing_tool_for_build_pipeline/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Template processing tool for build pipeline written in Go", 
            "url": "https://github.com/ukautz/tmpl"
        }, 
        {
            "author": "Bappedekkel", 
            "created_utc": 1507057673.0, 
            "domain": "gomatcha.io", 
            "id": "742m8v", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/742m8v/matcha_ios_and_android_apps_in_go/", 
            "score": 8, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Matcha - iOS and Android apps in Go", 
            "url": "https://gomatcha.io/"
        }, 
        {
            "author": "gen2brain", 
            "created_utc": 1507056976.0, 
            "domain": "github.com", 
            "id": "742jdd", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/742jdd/cam2ip_10_turn_any_webcam_into_ip_camera/", 
            "score": 18, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "cam2ip 1.0 - Turn any webcam into ip camera", 
            "url": "https://github.com/gen2brain/cam2ip"
        }, 
        {
            "author": "sacrehubert", 
            "created_utc": 1507054789.0, 
            "domain": "github.com", 
            "id": "742af2", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/742af2/ctx_composable_utilities_for_go_contexts/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "ctx : composable utilities for Go contexts", 
            "url": "https://github.com/SentimensRG/ctx"
        }, 
        {
            "author": "kT_Madlife", 
            "created_utc": 1507051548.0, 
            "domain": "self.golang", 
            "id": "741xeb", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/741xeb/is_possible_to_do_conditional_unmarshalling_for/", 
            "score": 2, 
            "selftext": "Say I want to unmarshal a JSON list to a list of User structs, is there a way to only unmarshal objects with a field \"Age\" greater than \"18\"? Or I have to manually filter the User list?", 
            "subreddit": "golang", 
            "title": "Is possible to do conditional unmarshalling for json?", 
            "url": "https://www.reddit.com/r/golang/comments/741xeb/is_possible_to_do_conditional_unmarshalling_for/"
        }, 
        {
            "author": "richie_south", 
            "created_utc": 1507049133.0, 
            "domain": "self.golang", 
            "id": "741na3", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 15, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/741na3/struggling_with_file_structure_in_a_go_api/", 
            "score": 7, 
            "selftext": "Does anybody know about or have an open git repository of a go api? Im using the chi library but any repository with good file structure would be appreciated!", 
            "subreddit": "golang", 
            "title": "Struggling with file structure in a Go api", 
            "url": "https://www.reddit.com/r/golang/comments/741na3/struggling_with_file_structure_in_a_go_api/"
        }, 
        {
            "author": "farslan", 
            "created_utc": 1507044967.0, 
            "domain": "github.com", 
            "id": "74169y", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 21, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74169y/vimgo_v115/", 
            "score": 113, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "vim-go v1.15", 
            "url": "https://github.com/fatih/vim-go/releases/tag/v1.15"
        }, 
        {
            "author": "ZetaHunter", 
            "created_utc": 1507042633.0, 
            "domain": "github.com", 
            "id": "740x80", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 20, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/740x80/skylark_in_go_the_skylark_configuration_language/", 
            "score": 31, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Skylark in Go: the Skylark configuration language, implemented in Go", 
            "url": "https://github.com/google/skylark"
        }, 
        {
            "author": "yonatannn", 
            "created_utc": 1507016619.0, 
            "domain": "self.golang", 
            "id": "73yyep", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73yyep/jenkins_dockerized_testing_my_architecture_makes/", 
            "score": 1, 
            "selftext": "Hi, I'd be glad to get your validation and advice regarding the following Jenkins + scripted pipeline + docker + AWS ECS architecture:\n\n1. Pipeline runs testing step in a dockerized agent (delegated to ECS, see next) + \n2. Jenkins cloud plugin instantiate a new ECS task (slave image with Docker inside, mounted to /var/run/docker.sock) + \n3. The test/step invokes \"ssh 'docker-compose --exit-code-from my testing container' (need to isolate the network here so two compose can run at once, not sure how) + \n4. I copy back all the test artifacts XML to the workspace (how?) + \n5. Jenkins kills the cloud task +\n6. Pipeline is back to non-dockerized agent, using plugins it evaluates the test results and set the build status (if I perform the evaluation within docker than I need to install Jenkins there, not sure if this holds true)", 
            "subreddit": "golang", 
            "title": "Jenkins dockerized testing - my architecture makes sense?", 
            "url": "https://www.reddit.com/r/golang/comments/73yyep/jenkins_dockerized_testing_my_architecture_makes/"
        }, 
        {
            "author": "squiiid", 
            "created_utc": 1507015392.0, 
            "domain": "github.com", 
            "id": "73yvuq", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73yvuq/simple_api_for_image_captioning_using_microsofts/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Simple API for Image Captioning using Microsoft's CaptionBot", 
            "url": "https://github.com/nhatbui/captionbot"
        }, 
        {
            "author": "Bappedekkel", 
            "created_utc": 1506992450.0, 
            "domain": "github.com", 
            "id": "73x4iw", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73x4iw/lua_53_vm_and_compiler_written_in_go/", 
            "score": 41, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Lua 5.3 VM (and compiler) written in Go", 
            "url": "https://github.com/milochristiansen/lua"
        }, 
        {
            "author": "taion809", 
            "created_utc": 1506990215.0, 
            "domain": "youtube.com", 
            "id": "73wxae", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Strange Loop", 
                    "author_url": "https://www.youtube.com/channel/UC_QIfHvN9auy2CoOdSfMWDw", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/DJ4d_PZ6Gns?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/DJ4d_PZ6Gns/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "\"So You Wanna Go Fast?\" by Tyler Treat", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73wxae/so_you_wanna_go_fast_by_tyler_treat/", 
            "score": 27, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "\"So You Wanna Go Fast\" by Tyler Treat", 
            "url": "https://www.youtube.com/watch?v=DJ4d_PZ6Gns"
        }, 
        {
            "author": "computersmusiclife", 
            "created_utc": 1506973605.0, 
            "domain": "self.golang", 
            "id": "73v6jj", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73v6jj/review_needed_for_my_articles_draft_the_beauty_of/", 
            "score": 0, 
            "selftext": "Can someone quickly help me review my draft (The Beauty of Go) and provide constructive/critical comments for it?\n\nhttps://kanishkdudeja.in/?p=108&shareadraft=baba108_59cbbcb8b061b", 
            "subreddit": "golang", 
            "title": "Review needed for my article's draft - The beauty of Go", 
            "url": "https://www.reddit.com/r/golang/comments/73v6jj/review_needed_for_my_articles_draft_the_beauty_of/"
        }, 
        {
            "author": "tinrab", 
            "created_utc": 1506973101.0, 
            "domain": "outcrawl.com", 
            "id": "73v4j5", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73v4j5/create_a_graphql_server_with_go_and_google_app/", 
            "score": 24, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Create a GraphQL Server with Go and Google App Engine", 
            "url": "https://outcrawl.com/graphql-server-go-google-app-engine"
        }, 
        {
            "author": "thedevsaddam", 
            "created_utc": 1506967267.0, 
            "domain": "github.com", 
            "id": "73ugts", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73ugts/terminal_todo_task_list_in_go/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Terminal todo task list in Go", 
            "url": "https://github.com/thedevsaddam/task"
        }, 
        {
            "author": "iafan", 
            "created_utc": 1506966256.0, 
            "domain": "github.com", 
            "id": "73ucrt", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73ucrt/lightweight_yet_powerful_continuous_localization/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Lightweight yet powerful continuous localization solution for Go, based on Serge and Plurr", 
            "url": "https://github.com/iafan/go-l10n"
        }, 
        {
            "author": "anaseto", 
            "created_utc": 1506962310.0, 
            "domain": "github.com", 
            "id": "73txdt", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73txdt/boohu_coffeebreak_roguelike_game_using_termboxgo/", 
            "score": 28, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Boohu: coffee-break roguelike game using termbox-go", 
            "url": "https://github.com/anaseto/boohu"
        }, 
        {
            "author": "burnaftertweeting", 
            "created_utc": 1506958124.0, 
            "domain": "self.golang", 
            "id": "73tgtx", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73tgtx/what_is_your_api_testing_workflow_for_web_apps_in/", 
            "score": 10, 
            "selftext": "Recently discovered a long running bug in a project I work on. I'd like to set up some monitoring either at build time or on the live api, to verify that each route is doing what its supposed to do. I have limited experience with testing so I'm wondering what a good test workflow looks like. Unit testing code that touches the database / api routes  is kind of a nightmare so I'm thinking of using integration tests system wide. Any one here have experience / knowledge I can lean on?", 
            "subreddit": "golang", 
            "title": "What is your api testing workflow for web apps in Golang?", 
            "url": "https://www.reddit.com/r/golang/comments/73tgtx/what_is_your_api_testing_workflow_for_web_apps_in/"
        }, 
        {
            "author": "0ldur", 
            "created_utc": 1506957681.0, 
            "domain": "self.golang", 
            "id": "73tf5m", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73tf5m/what_are_some_good_2d_game_frameworks_for_go/", 
            "score": 9, 
            "selftext": "I've seen some but I want to know the latest and the greatest. Thanks!", 
            "subreddit": "golang", 
            "title": "What are some good 2d game frameworks for GO?", 
            "url": "https://www.reddit.com/r/golang/comments/73tf5m/what_are_some_good_2d_game_frameworks_for_go/"
        }, 
        {
            "author": "Hexodam", 
            "created_utc": 1506956369.0, 
            "domain": "self.golang", 
            "id": "73ta09", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73ta09/best_way_to_keep_a_long_running_process_running/", 
            "score": 2, 
            "selftext": "I have a golang application that needs to run every X days or at a specific day of the month every month. This application can take days or weeks to complete and after it has completed its process it should not start again until at its next scheduled time.\n\nThe problem I have is that sometimes the computers are restarted in the middle of the process. The application can resume correctly though.\n\nThe issue is, what is the best way to have a schedule and have the application resume if something happens to the process?\n\n----\nSolutions I have explored: \n\nUsed the Windows Task Scheduler in the past, but that requires me to run a second task that just starts the first task if it is stopped and has not completed. Works but is rather shitty and only works on Windows.\n\nUsed https://github.com/robfig/cron and https://github.com/kardianos/service to create a service that runs the application according to a cron schedule. Works very well to meet the schedule requirements and helps make the application cross platform. This does not solve the problem of resuming a failed task.", 
            "subreddit": "golang", 
            "title": "Best way to keep a long running process running until its next scheduled run time", 
            "url": "https://www.reddit.com/r/golang/comments/73ta09/best_way_to_keep_a_long_running_process_running/"
        }, 
        {
            "author": "tschellenbach", 
            "created_utc": 1506955724.0, 
            "domain": "getstream.io", 
            "id": "73t7oy", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73t7oy/go_testing_at_stream/", 
            "score": 31, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go testing at Stream", 
            "url": "https://getstream.io/blog/how-we-test-go-at-stream/"
        }, 
        {
            "author": "dunglas", 
            "created_utc": 1506945067.0, 
            "domain": "dunglas.fr", 
            "id": "73sagn", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73sagn/stack2slack_a_slack_bot_written_in_go_to_monitor/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Stack2Slack: a Slack bot written in Go to monitor StackOverflow tags", 
            "url": "https://dunglas.fr/2017/10/stack2slack-a-slack-bot-written-in-go-to-monitor-stackoverflow-tags/"
        }, 
        {
            "author": "irregular_regular", 
            "created_utc": 1506903209.0, 
            "domain": "self.golang", 
            "id": "73pe61", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73pe61/what_does_this_author_mean_by_golang_is_a_systems/", 
            "score": 0, 
            "selftext": "https://astaxie.gitbooks.io/build-web-application-with-golang/en/02.1.html", 
            "subreddit": "golang", 
            "title": "What does this author mean by golang is a \"systems\" language?", 
            "url": "https://www.reddit.com/r/golang/comments/73pe61/what_does_this_author_mean_by_golang_is_a_systems/"
        }, 
        {
            "author": "DangerOnTheRanger", 
            "created_utc": 1506896736.0, 
            "domain": "dangerontheranger.blogspot.com", 
            "id": "73osg5", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73osg5/creating_a_scheme_implementation_in_go_part_2/", 
            "score": 15, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Creating a Scheme implementation in Go - Part 2: Parsing", 
            "url": "http://dangerontheranger.blogspot.com/2017/10/schego-part-2-or-on-parsing-and-other.html"
        }, 
        {
            "author": "pynoise", 
            "created_utc": 1506886217.0, 
            "domain": "self.golang", 
            "id": "73nq1z", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 68, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73nq1z/is_there_any_library_you_guys_want_but_cant_find/", 
            "score": 39, 
            "selftext": "I'm looking to contribute to the open source community by writing a Go library that you guys need but doesn't exist. Feel free to throw some ideas my way.", 
            "subreddit": "golang", 
            "title": "Is there any library you guys want but can't find?", 
            "url": "https://www.reddit.com/r/golang/comments/73nq1z/is_there_any_library_you_guys_want_but_cant_find/"
        }, 
        {
            "author": "dericofilho", 
            "created_utc": 1506885801.0, 
            "domain": "self.golang", 
            "id": "73nolv", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73nolv/what_happened_to_httpgohackernews/", 
            "score": 1, 
            "selftext": "It used to be a news website, now it is a domain placeholder. Anyone has any idea?", 
            "subreddit": "golang", 
            "title": "What happened to http://gohacker.news/?", 
            "url": "https://www.reddit.com/r/golang/comments/73nolv/what_happened_to_httpgohackernews/"
        }, 
        {
            "author": "pablostarter", 
            "created_utc": 1506879720.0, 
            "domain": "github.com", 
            "id": "73n1zt", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73n1zt/adaline_neuron_implemented_in_go/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Adaline neuron implemented in Go", 
            "url": "https://github.com/Plorenzo/goAdaline"
        }, 
        {
            "author": "Disconnectlt", 
            "created_utc": 1506868696.0, 
            "domain": "povilasv.me", 
            "id": "73lyra", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73lyra/tracking_request_duration_with_prometheus/", 
            "score": 22, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Tracking request duration with Prometheus", 
            "url": "https://povilasv.me/prometheus-tracking-request-duration/"
        }, 
        {
            "author": "Bappedekkel", 
            "created_utc": 1506867364.0, 
            "domain": "github.com", 
            "id": "73lulk", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73lulk/atmanos_build_go_programs_that_run_directly_on/", 
            "score": 28, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Atmanos: Build Go programs that run directly on the Xen hypervisor", 
            "url": "https://github.com/atmanos/atmanos"
        }, 
        {
            "author": "hermanschaaf", 
            "created_utc": 1506866515.0, 
            "domain": "herman.asia", 
            "id": "73lrym", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 15, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73lrym/efficient_bit_manipulation_in_go_19/", 
            "score": 33, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Efficient Bit Manipulation in Go 1.9", 
            "url": "http://herman.asia/bit-manipulation-in-go-1-9"
        }, 
        {
            "author": "baijum", 
            "created_utc": 1506847411.0, 
            "domain": "medium.com", 
            "id": "73klzz", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73klzz/securing_api_end_points_using_negroni_gorilla_mux/", 
            "score": 40, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Securing API end points using Negroni, Gorilla Mux, and JWT Middleware", 
            "url": "https://medium.com/@baijum/api-end-points-with-authentication-using-negroni-gorilla-mux-and-jwt-middleware-63a6dd8275cf"
        }
    ], 
    "subreddit_creation_utc": 1257929668.0, 
    "subscribers": 34671, 
    "title": "The Go Programming Language", 
    "title_word_count_occurrences": {
        " c ": 1, 
        "android": 1, 
        "docker": 2, 
        "gcc": 1, 
        "golang": 8, 
        "google": 2, 
        "ios": 1, 
        "microsoft": 1, 
        "tex": 1, 
        "vim": 1
    }, 
    "top_score_submissions": [
        {
            "author": "farslan", 
            "created_utc": 1507044967.0, 
            "domain": "github.com", 
            "id": "74169y", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 21, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74169y/vimgo_v115/", 
            "score": 113, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "vim-go v1.15", 
            "url": "https://github.com/fatih/vim-go/releases/tag/v1.15"
        }, 
        {
            "author": "dlsniper", 
            "created_utc": 1507149561.0, 
            "domain": "twitter.com", 
            "id": "74b0wn", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74b0wn/go_191_and_go_184_are_released/", 
            "score": 101, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go 1.9.1 and Go 1.8.4 are released!", 
            "url": "https://twitter.com/golang/status/915677598457331712"
        }, 
        {
            "author": "computersmusiclife", 
            "created_utc": 1507312359.0, 
            "domain": "medium.com", 
            "id": "74pbd8", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74pbd8/beauty_of_the_go_programming_language/", 
            "score": 87, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Beauty of the Go Programming Language", 
            "url": "https://medium.com/@kanishkdudeja/the-beauty-of-go-98057e3f0a7d"
        }, 
        {
            "author": "Bappedekkel", 
            "created_utc": 1507204778.0, 
            "domain": "github.com", 
            "id": "74fgog", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74fgog/subnet_an_encrypted_vpn_in_2k_loc_written_in_go/", 
            "score": 69, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Subnet: an encrypted VPN in 2k LOC, written in Go", 
            "url": "https://github.com/twitchyliquid64/subnet"
        }, 
        {
            "author": "darxkies", 
            "created_utc": 1507399688.0, 
            "domain": "writeingo.com", 
            "id": "74wffn", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/74wffn/important_go_interfaces/", 
            "score": 67, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Important Go Interfaces", 
            "url": "https://www.writeingo.com/blog/important-go-interfaces/"
        }
    ], 
    "total_submissions": 89, 
    "utc_of_data_collection_completion": "2017-10-17 18:48:00", 
    "utc_of_data_collection_start": "2017-10-17 18:47:59"
}