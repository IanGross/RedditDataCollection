{
    "active_user_count": 21, 
    "advertiser_category": null, 
    "audience_target": "", 
    "avg_comment_num_per_submission": 11, 
    "avg_submission_score": 14, 
    "collection_range_end_unix_timestamp": 1506816000, 
    "collection_range_end_utc": "2017-10-01 00:00:00", 
    "collection_range_start_unix_timestamp": 1504224000, 
    "collection_range_start_utc": "2017-09-01 00:00:00", 
    "description": "#Welcome!\n\nThis subreddit is dedicated to discussion of programming languages, programming language theory, design, their syntax and compilers. Post your ideas and get constructive criticism.\n\nBe nice, contribute, and stay away from useless flame wars.\n\n#Please note!\n\nThis is about programming languages, **not programming per se.** If you want to ask \"what programming language should I learn\", \"what language would be best for X project\", or any question like that, please post to /r/AskProgramming or /r/LearnProgramming.\n\n#### [Check out the always-growing list of languages made by our community!](https://www.reddit.com/r/ProgrammingLanguages/wiki/languages)\n\n#### Related subreddits\n* /r/Compilers \n* /r/compsci\n* /r/programming \n* /r/coding \n* /r/AskProgramming \n* /r/learnprogramming \n\nFor language-specific discussion, take a look at the (rather old) [list of programming language subreddits](https://www.reddit.com/r/programming/comments/a6qgz/proggit_im_trying_to_compile_all_the_known/).\n\n#### Related online communities\n* [ProgLangDesign.net - the home of Freenode's #proglangdesign](http://www.proglangdesign.net/)\n* [Lambda the Ultimate: Programming Languages](http://lambda-the-ultimate.org/)  \n* [Programming languages tag on Computer Science Stack Exchange](http://cs.stackexchange.com/questions/tagged/programming-languages)  \n* [Programming languages tag on Theoretical Computer Science Stack Exchange](http://cstheory.stackexchange.com/questions/tagged/pl.programming-languages)", 
    "display_name": "ProgrammingLanguages", 
    "domain_occurrences": {
        "6guts.wordpress.com": 1, 
        "boxbase.org": 1, 
        "c9x.me": 1, 
        "cambridgeblog.org": 1, 
        "composition.al": 1, 
        "craftinginterpreters.com": 1, 
        "futhark-lang.org": 1, 
        "github.com": 5, 
        "goc.vivint.com": 1, 
        "hackernoon.com": 1, 
        "i.redd.it": 1, 
        "medium.com": 3, 
        "myrlang.org": 1, 
        "oilshell.org": 1, 
        "self.ProgrammingLanguages": 22, 
        "tomasp.net": 1, 
        "youtube.com": 1, 
        "ziglang.org": 1
    }, 
    "id": "2qi8m", 
    "num_external_website_posts": 23, 
    "num_text_posts": 22, 
    "public_description": "General programming languages and programming language theory discussion. News, articles, proposals. This is the place for it.", 
    "submissions": [
        {
            "author": "Kaeon-ACE", 
            "created_utc": 1506641283.0, 
            "domain": "github.com", 
            "id": "733yxr", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/733yxr/kaeon_fusion_massive_repository_update/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Kaeon FUSION - Massive Repository Update", 
            "url": "https://github.com/Gallery-of-Kaeon/Kaeon-FUSION/blob/master/README.md"
        }, 
        {
            "author": "smalltalkrenaissance", 
            "created_utc": 1506614757.0, 
            "domain": "medium.com", 
            "id": "7312sc", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/7312sc/lisp_smalltalk_and_the_power_of_symmetry/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Lisp, Smalltalk, and the Power of Symmetry", 
            "url": "https://medium.com/smalltalk-talk/lisp-smalltalk-and-the-power-of-symmetry-8bd96aaa0c0c"
        }, 
        {
            "author": "Athas", 
            "created_utc": 1506416217.0, 
            "domain": "futhark-lang.org", 
            "id": "72j430", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/72j430/calling_futhark_from_c_and_haskell/", 
            "score": 20, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Calling Futhark from C and Haskell", 
            "url": "https://futhark-lang.org/blog/2017-10-26-calling-futhark-from-c-and-haskell.html"
        }, 
        {
            "author": "macarthurpark431", 
            "created_utc": 1506388424.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "72h014", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/72h014/im_considering_building_a_tiny_programming/", 
            "score": 11, 
            "selftext": "As someone whose never looked into building a language before, do you think this is possible? How much work should I put in before hand, and are there any resources/ books you would recommend me to look over before attempting something like this?\n\nJust so you know, when I say \"tiny language\", I do mean tiny. I'd be happy if ended up with a slightly more verbose brainfuck by the end of the month.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "I'm considering building a tiny programming languages as part of a ~1 month long project. Is this a feasible idea?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/72h014/im_considering_building_a_tiny_programming/"
        }, 
        {
            "author": "blazingkin", 
            "created_utc": 1506364758.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "72ehec", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/72ehec/predictive_heap_sizing/", 
            "score": 6, 
            "selftext": "I've been thinking about memory allocation routines (such as C's malloc), and I think I have an idea that could be built into a language and would boost performance.\n\nThe change is simple:\n\n1. Collect statistical data about what kinds of objects are most often allocated for a specific program. (This can be done during development/debugging, as to not affect production performance).\n\n2. In the startup routine, change what kinds of blocks of memory are indexed for malloc. That is, currently most malloc implementations just index powers of 2 on the heap. Instead, you could index memory by the sizes that are most likely for that specific program.\n\nDo you think this would be practical? Are there any examples of things like this in the wild? Could it be improved?", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Predictive Heap Sizing", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/72ehec/predictive_heap_sizing/"
        }, 
        {
            "author": "bhauth", 
            "created_utc": 1506347942.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "72cl28", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 43, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/72cl28/is_c_still_the_best_target_for_new_languages/", 
            "score": 24, 
            "selftext": "LLVM IR was supposed to be a better target for compiled languages. But C is still more portable, more stable, and better documented.\n\nLLVM is used by big teams working on compilers for major languages. For example, Clang, which is over 2 million lines of code - about as much as LLVM itself. But it's quite an undertaking to use it, and OCaml developers have said that it's actually easier to target x86 assembly.\n\nLLVM is a huge C++ project that's annoying to compile, while C has small compilers that you can use if you want.\n\nThere are some alternatives to LLVM, like LibFIRM, but none of them are complete enough to be a viable alternative.\n\nIs C still the best target for new languages, 45 years later?", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Is C still the best target for new languages?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/72cl28/is_c_still_the_best_target_for_new_languages/"
        }, 
        {
            "author": "htuhola", 
            "created_utc": 1506324801.0, 
            "domain": "boxbase.org", 
            "id": "72ax87", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/72ax87/boxbaseorg_bugfree_programming_what_could_we_do/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "boxbase.org: Bug-free programming, what could we do for it?", 
            "url": "http://boxbase.org/entries/2017/sep/25/bug-free-programming/"
        }, 
        {
            "author": "quietsamurai98", 
            "created_utc": 1506309537.0, 
            "domain": "github.com", 
            "id": "729v0p", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/729v0p/i_just_released_the_first_version_of_an/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "I just released the first version of an interpreter for my toy language BrainCube!", 
            "url": "https://github.com/quietsamurai98/BrainCubeInterpreter"
        }, 
        {
            "author": "mamcx", 
            "created_utc": 1506302957.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "729bzn", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/729bzn/how_to_make_a_statement_based_language_into_a/", 
            "score": 4, 
            "selftext": "I'm exploring between using roslyn or make a normal interpreter for my language. Is one where \"everything is a expression\":\n\n    type ExprC = \n        | IntC of int\n        | BoolC of bool\n        | IfC of ExprC * ExprC * ExprC\n        | SumC of ExprC * ExprC\n\nNow, if using roslyn - meaning this become a transpiler-, I need to turn C# into a expression language, and wonder how do that?\n\nMy naive intuition is to have a global var to store the \"last results\", but don't think is nice.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "How to make a statement based language into a expression one? (like Lisp -> C#?)", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/729bzn/how_to_make_a_statement_based_language_into_a/"
        }, 
        {
            "author": "GNULinuxProgrammer", 
            "created_utc": 1506287781.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "727va7", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/727va7/a_comparison_of_lisps/", 
            "score": 14, 
            "selftext": "I'm working on a new project, and I want to expose myself to as much lisp code as possible, and as much lisp dialects as possible. My experience with lisp is minimal, I use scheme and emacs lisp casually for personal stuff (like customizing my emacs).\n\nSo, I want to *read* lisp code. I was thinking about going to Rosetta Code and reading bunch of different puzzles in lisp dialects. I'd be gald if someone point some key puzzles that show how differentlisps perform. What would this sub recommend to expose myself as much lisp dialects as possible. Which are some of your favorite lisp dialects?", 
            "subreddit": "ProgrammingLanguages", 
            "title": "A comparison of lisps?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/727va7/a_comparison_of_lisps/"
        }, 
        {
            "author": "PegasusAndAcorn", 
            "created_utc": 1506217980.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "722f99", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 24, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/722f99/pivoting_from_acorn_to_cone/", 
            "score": 25, 
            "selftext": "The 3D web is my driving passion. I have devoted years to Acorn, my \"scripting\" language, designed to handle 3D content better than HTML/Javascript. I am abandoning that work, at least for now.\n\nAcorn works. Pegasus, the 3D browser built around it, works too. The browser successfully renders (at 60fps!) interactive 3D worlds coded as Acorn programs, dynamically retrieved from an Internet server. Acorn implements 95+% of its [documented features](http://web3d.jondgoodwin.com/acorn/intro.html), living somewhere in between Lua and Ruby in capability.\n\nIt is emotionally difficult to abandon it after so much effort, especially when it is so close to a minimum viable product. But I think I must, mostly because of 3-D's need for premium performance.\n\nI have long known that dynamically-typed, byte-code interpreted languages run significantly slower than natively-compiled, static languages. I believed the scripting would be a narrow shim layer, whose inefficiency would not matter much relative to the bulk of the work performed by the underlying C-code libraries and GPU. For simple worlds, that proved true. Encouragingly: the incremental, generational GC never hiccuped, asynchronous resources de-compression made a huge difference, and the JIT compilation was remarkably quick.\n\nBut my unease grew, as I looked at the multiplying effect of byte-code interpretation and *every* method dispatch doing (one or more hash!) table look-ups. The shim was not staying thin, as I considered motion and collision physics, skeletal animation, realistic lighting, etc.  The breaking point was particle systems, thousands of tiny points of light: I was not happy imagining the overhead of managing all these tiny objects at brilliant speed, even with the help of the GPU.\n\nSo, I am launching a new statically-typed language, Cone. It will use LLVM to generate native executables that perform competitively with C/C++. It will borrow a lot from Acorn, particularly its Ruby-like concisness, its object-orientation, and its skill at marrying content with behavior. It will also be a test bed for implementing [gradual memory management](https://www.reddit.com/r/ProgrammingLanguages/comments/700fpf/a_framework_for_gradual_memory_management/?st=j7y2bk7g&sh=1ce014b6), which is exciting.\n\nThis pivot opens up interesting new avenues: WebAssembly, Vulkan, multi-threaded execution, etc. And it opens up disturbing technical challenges: WebAssembly, real-time compile-and-go techniques, programmer ease-of-use in spite of static types, etc.\n\nI learned so much building Acorn, and nearly all of that knowledge and much of its code can be re-purposed into Cone at a tiny fraction of the time it took for me to puzzle my way through it the first time through. So, it should not take me years to reach parity with Acorn, although I will have a steeper learning curve in some new areas, particularly type and module systems and multi-threaded parallelism. I also intend to liberally borrow good ideas from several compiler implementations (D has been surprisingly fertile so far).\n\nIn making this transition, I switched from private development to [Github](https://github.com/jondgoodwin). There you will find my open-source code for Acorn, Pegasus, and the just-started Cone compiler. (Note: If anyone wants to build any of these on Linux/Mac, let me know, and I will update the CMAKE accordingly.)\n\nNow I  need to decide whether to change my Reddit user name too...", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Pivoting from Acorn to Cone", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/722f99/pivoting_from_acorn_to_cone/"
        }, 
        {
            "author": "raiph", 
            "created_utc": 1506176581.0, 
            "domain": "6guts.wordpress.com", 
            "id": "71yj7m", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/71yj7m/rakudo_gets_a_new_thread_pool/", 
            "score": 15, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Rakudo gets a new thread pool", 
            "url": "https://6guts.wordpress.com/2017/09/23/rakudo-gets-a-new-thread-pool/"
        }, 
        {
            "author": "oridb", 
            "created_utc": 1506075101.0, 
            "domain": "myrlang.org", 
            "id": "71q1t1", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/71q1t1/myrddin_02_released_9_out_of_10_cats_agree/", 
            "score": 25, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Myrddin 0.2 released: \"9 out of 10 cats agree\"", 
            "url": "https://myrlang.org/release-notes/"
        }, 
        {
            "author": "RobotPanthers", 
            "created_utc": 1506027913.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "71m8ge", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 22, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/71m8ge/languages_with_a_split_between_functional_and/", 
            "score": 11, 
            "selftext": "I really like functional programming, as at least in my experience the bulk of a program is just manipulating data, and functional paradigms allow you to do that very elegantly. But unless your program can be reduced to a single function call, you probably need at least a little bit of imperative code. This leads to awkwardness when your language is designed to be purely functional (eg: haskell).\n\nSo I was wondering if there were any languages that tried to solve this by separating functional and imperative code in some way. \n\nFor example, you could have a keyword that marks functions as imperative, allowing them to use imperative constructs but also preventing them from being called by functional methods.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Languages with a split between functional and imperative code", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/71m8ge/languages_with_a_split_between_functional_and/"
        }, 
        {
            "author": "oilshell", 
            "created_utc": 1506010822.0, 
            "domain": "ziglang.org", 
            "id": "71k8rz", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/71k8rz/zig_language_import_h_files_and_directly_use_c/", 
            "score": 7, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Zig Language: Import .h files and directly use C types, variables, and functions.", 
            "url": "http://ziglang.org/"
        }, 
        {
            "author": "MadcapJake", 
            "created_utc": 1505878094.0, 
            "domain": "craftinginterpreters.com", 
            "id": "718f7r", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/718f7r/crafting_interpreters_new_chapter_resolving_and/", 
            "score": 32, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Crafting Interpreters - New Chapter: Resolving and Binding", 
            "url": "http://www.craftinginterpreters.com/resolving-and-binding.html"
        }, 
        {
            "author": "PegasusAndAcorn", 
            "created_utc": 1505864617.0, 
            "domain": "goc.vivint.com", 
            "id": "717592", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/717592/how_to_implement_hindleymilner_type_inference_in/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "How to Implement Hindley-Milner type inference (in Python)", 
            "url": "http://goc.vivint.com/problems/hm"
        }, 
        {
            "author": "_Tushar", 
            "created_utc": 1505812816.0, 
            "domain": "github.com", 
            "id": "711snc", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/711snc/i_made_this_mathy_little_language_some_time_ago/", 
            "score": 16, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "I made this math-y little language some time ago. It's my baby. Just wanted to share. Thoughts?", 
            "url": "https://github.com/TusharRakheja/Autolang"
        }, 
        {
            "author": "inb4token", 
            "created_utc": 1505784089.0, 
            "domain": "i.redd.it", 
            "id": "70zlp1", 
            "is_reddit_media_domain": true, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/70zlp1/screenshot_for_reference_to_my_design/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "(SCREENSHOT) For reference to my design.", 
            "url": "https://i.redd.it/ng64gi9orqmz.jpg"
        }, 
        {
            "author": "inb4token", 
            "created_utc": 1505783352.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "70zj3z", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/70zj3z/this_programming_language_does_not_exist/", 
            "score": 0, 
            "selftext": "Sitting here with nothing to do, so why not make a whole new computer language. I made this in my free time based on my knowledge. Share your thoughts and let's see if any of you can figure out what I would like it to do. Hope it isn't too messy - I'll try to explain it if anyone cares, but I think it's easy enough. Adios, Reddit!\n\n\n\n~ inb4 script, september 18th, 2017\n~ made by inb4token for r/programminglanguages\n\nguipositioning = scale.center()\ncenter + 45left = new.emtpy(leftsquare)\ncenter + 45right = new.emtpy(rightsquare)\nleftsquare;rightsquare = both\ninsert.new(both) - new.square(argument)\nargument&size = 25,25\nargument&colorset&rgb = 0,0,0\n\ninb4\"event\"\n     if player click argument'either'\n     then argument'specific'.color.rgb =           \n     thy.color.rgb + 10,5,15\n          note:'specific' = math.random(1,2)\n          if 2 then argument.rightsquare\n          if 1 then argument.leftsquare\n          done)\n      done)\ndone)", 
            "subreddit": "ProgrammingLanguages", 
            "title": "This programming language does NOT exist.", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/70zj3z/this_programming_language_does_not_exist/"
        }, 
        {
            "author": "tinfoilboy", 
            "created_utc": 1505701159.0, 
            "domain": "github.com", 
            "id": "70s27c", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/70s27c/been_working_on_my_first_real_interpreted/", 
            "score": 28, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Been working on my first real interpreted language, Shakara, as a toy project for around threeish months. Take a gander at the current source and the preliminary specification!", 
            "url": "https://github.com/tinfoilboy/Shakara"
        }, 
        {
            "author": "quietsamurai98", 
            "created_utc": 1505666186.0, 
            "domain": "github.com", 
            "id": "70ojr0", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/70ojr0/i_just_finished_the_spec_for_braincube_an_esolang/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "I just finished the spec for BrainCube, an esolang I'm making. Any thoughts?", 
            "url": "https://github.com/quietsamurai98/BrainCube/"
        }, 
        {
            "author": "FlirtySanchez", 
            "created_utc": 1505626853.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "70lu75", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/70lu75/would_it_be_possible_to_get_some_suggestions_for/", 
            "score": 8, 
            "selftext": "I'm currently taking a programming languages class which is a writing proficiency class.\n\nWe have to pick a topic for a paper we'll be developing over the semester and I'm having trouble deciding on one. \n\nWe have to choose a language and an aspect about that language, such as garbage collection or a friend of mine chose jquery, that can be fleshed out into 10 pages. There needs to be a number of other books or articles written about the language that includes information about the aspect we're interested in. We must discuss what we like about that aspect, what we dislike, how it works, and how it can be done better or which languages do it better.\n\nThe problem is that I'm not too familiar with a lot of languages and the topics are on a first come, first served basis. The professor told me to find a textbook on a language and look through the chapters to find a topic. Basically flip to the middle of the book and there should be a topic that covers enough depth to have a single focus without writing about something too broad that I can't condense the information to 10 pages or so.\n\nI am confident in my ability to write a paper of that length, 10 pages isn't that long, but the prompt is so open ended that I'm having trouble deciding what to write about.\n\nAny help would be appreciated.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Would it be possible to get some suggestions for a paper topic for a programming languages class?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/70lu75/would_it_be_possible_to_get_some_suggestions_for/"
        }, 
        {
            "author": "minond", 
            "created_utc": 1505605259.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "70k874", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/70k874/day_jobs_questionpoll/", 
            "score": 8, 
            "selftext": "I'm curious as to how many of you have paying day jobs that require knowledge about programming language theory/design/implementation. And not only require knowledge, but you're also actively working on improving or implementing a language compiler, interpreter, runtime, etc. I'm curious about how many companies are paying people to work on these types of projects.\n\nAnd if your job isn't one like the one I described above, then what would you say are the direct and practical ways in which learning anything you have learned in this subreddit has helped you in regards to your job or programming expertise in general.\n\nI'm asking for myself. I'm not trying to decide if this is an area I would like to learn more about or not, but instead I want to have clear expectations about what these skills mean for my future.\n\nAlso... I'm newish to this subreddit, so if there's another thread that covers this question, then I'd appreciate a link and I'll go check that out instead.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Day jobs question/poll", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/70k874/day_jobs_questionpoll/"
        }, 
        {
            "author": "Uncaffeinated", 
            "created_utc": 1505578866.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "70hrqr", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 15, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/70hrqr/showing_multiple_compile_errors/", 
            "score": 16, 
            "selftext": "One issue I have when writing a compiler is whether to stop at the first error or try to display as many errors as possible. I was curious what your opinions are on this and whether there is any research into the area. \n\nShowing multiple errors lets people potentially fix issues without rebuilding multiple times, which is important if compilation is slow, but it can also spam the console, and usually the first error is most relevant, since it isn't tainted by potentially garbage info from the previous errors. \n\nThere are also a range of other possibilities. For example, you could show multiple errors but stop after N errors. Another idea I had was to show all errors, but display them in reverse order. This would put the first error at the bottom of the console output where it is easy to see without scrolling. But since no other compilers behave this way, it could be confusing. Also, it would mean that you have to wait for compilation to finish before displaying any errors instead of displaying them as soon as they are detected.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Showing multiple compile errors?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/70hrqr/showing_multiple_compile_errors/"
        }, 
        {
            "author": "GNULinuxProgrammer", 
            "created_utc": 1505472876.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "7092uf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/7092uf/nonturingcomplete_languages/", 
            "score": 15, 
            "selftext": "What are some interesting, useful languages you know that are not Turing-complete? I'm currently trying to look at as much language as possible to get inspirations, so if you know an interesting non-Turing-complete language, please share!", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Non-Turing-Complete languages?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/7092uf/nonturingcomplete_languages/"
        }, 
        {
            "author": "trampolinebears", 
            "created_utc": 1505432610.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "7064ih", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 31, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/7064ih/alien_programming_language/", 
            "score": 16, 
            "selftext": "Most languages were *invented*, but a few were *discovered*.\n\nI'm looking for some help brainstorming a language made by aliens, one that we humans could have made if we had gone down a different path.  Ideally it would be very simple, but very unusual in mindset.\n\nLisp would be great, but it's just too well known for this purpose.  Something like [INTERCAL](https://en.wikipedia.org/wiki/INTERCAL) is just too obviously silly.\n\nWhere would you start?  Is there a dead end in language design that we tried and gave up decades ago?", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Alien programming language?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/7064ih/alien_programming_language/"
        }, 
        {
            "author": "PegasusAndAcorn", 
            "created_utc": 1505369183.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "700fpf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 20, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/700fpf/a_framework_for_gradual_memory_management/", 
            "score": 26, 
            "selftext": "A month back, I decided to take [a garbage collector out for a beer](https://www.reddit.com/r/ProgrammingLanguages/comments/6ss869/takin_a_garbage_collector_out_for_a_beer/?st=j7k1c4sp&sh=def07c1a). Fortified by liquid courage, difficult problems seem solvable!\n\nWhy can't we have a programming language that gracefully supports multiple memory managers? If it were to exist, what would be the benefits and limitations?\n\nOne thought led to another. Research and conversations triggered ideas. And then a paper came to life which offers promising answers to those questions:  [A Framework for Gradual Memory Management](https://drive.google.com/open?id=0B_4wx_3dTGICWG1Ddk81Rnh0YzA).\n\nAs this community was an enormous catalyst and help, I thought it fitting to distribute the paper here first. This debt is also acknowledged at the end of the paper.\n\nBe warned: It is a long paper. It is full of details, borrowing extensively from Rust, Midori and Pony. But I have made every effort to make it clear and comprehensible throughout.\n\nI welcome questions and feedback. I hope it proves valuable for anyone interested in the topic.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "A Framework for Gradual Memory Management", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/700fpf/a_framework_for_gradual_memory_management/"
        }, 
        {
            "author": "mattygrocks", 
            "created_utc": 1505152767.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "6zh31g", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 38, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6zh31g/are_continuations_too_general/", 
            "score": 22, 
            "selftext": "Despite their beauty, I'm not sure what I think of continuations. I see languages with first-class continuations and I rarely feel the need to use them. However, their inclusion can greatly complicate a language's implementation.\n\nAre custom control operators something that should live in programming language userland, as it were? I've toyed with using most of the typical higher-level applications of them such as exceptions, async/await, longjmp (if you can call it that), etc. I haven't used some of the more classic examples, such as the `amb` operator in SICP, though. This might be a function of the work I've done, but I've never wished for these sorts of semantics while writing code.\n\nAm I missing something? Or are continuations more a useful theoretical concept to build atop of? They seem useful to implementors (if you can stomach the implications they have), but not as much to users.\n\nEdit: forgot to link to the [classic rebuttal of call/cc](http://okmij.org/ftp/continuations/against-callcc.html) by people much smarter than I", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Are continuations too general?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/6zh31g/are_continuations_too_general/"
        }, 
        {
            "author": "dmzkrsk", 
            "created_utc": 1505113825.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "6zduk7", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 23, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6zduk7/does_any_language_has_or_its_possible_to/", 
            "score": 6, 
            "selftext": "I was messing with flow-based programming, reactive streams, python generators/corouitines and ended up with this:\n\nImagine a pseudo code for some kind of web-scraper:\n\n    for item in list:\n        page = spawn download_index(item)\n\n        for link in extract_links(page):\n           data = spawn download_page(link)\n           spawn store_in_db(data)\n\nThat looks like some synchronous code with fancy `spawn`, but imagine, that call to `download_index`, `download_page` and `store_in_db` don't block, but silently launch a thread to do a network IO and return a result.\n\n\"So you just renamed `await` to `spawn`?\" one might ask. Yep, that is, but please, keep on reading.\n\nThe \"problem\" with `await`, is that `for` loop stops completely waiting for `download_index` to finish. But it could \"save\" the rest of the code, move to the next `item` in the `for` loop, launch another `download_index` and so on.\n\nLater, one of the `download_index` tasks finishes, \"restores\" the code position and continues.\n\nSame stuff happens with `download_page` and `store_in_db`.\n\nOr even `extract_links` could be an asynchronous task (python has `async for`).\n\nI tried to dig into python coroutines (`yield /send`), but in order to implement `for` loops I had to clone a running generator, which Python doesn't support.\n\nBut I loved this code some much (I rewrote a piece of my Rx-like process into this pseudo-code and it looked so great), so I'm interested, is it something well known already?\n\nI, believe, Haskell with `do`-syntax can do something like this (I have no real Haskell practice, but I read and experimented a lot)? I also read about `call/cc` and continuation, but I have no good `Lisp/Schema/...` knowledge. Does Clojure can implement something like that? (Currently reading a Clojure book). Any other languages?", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Does any language has (or it's possible to implement) a following syntax for asynchronous programming.", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/6zduk7/does_any_language_has_or_its_possible_to/"
        }, 
        {
            "author": "oilshell", 
            "created_utc": 1505029666.0, 
            "domain": "oilshell.org", 
            "id": "6z730t", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6z730t/please_try_the_osh_01_release/", 
            "score": 11, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Please Try the OSH 0.1 Release", 
            "url": "http://www.oilshell.org/blog/2017/09/09.html"
        }, 
        {
            "author": "svick", 
            "created_utc": 1504953167.0, 
            "domain": "tomasp.net", 
            "id": "6z1179", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6z1179/the_design_side_of_programming_language_design/", 
            "score": 37, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "The design side of programming language design", 
            "url": "http://tomasp.net/blog/2017/design-side-of-pl/"
        }, 
        {
            "author": "8thdev", 
            "created_utc": 1504854680.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "6yt921", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6yt921/embedding_an_array_in_8th_a_forth_dialect/", 
            "score": 5, 
            "selftext": "[This post](https://8th-dev.com/forum/index.php/topic,1409.msg7582.htm) discusses various options for embedding an array (in a word) in 8th.\n\nUnlike ANS Forth, 8th has distinct data-types.  An \"array\" is dynamic, and may be created using JSON syntax or using \"a:new\" (which creates an empty array). ", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Embedding an array in 8th (a Forth dialect)", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/6yt921/embedding_an_array_in_8th_a_forth_dialect/"
        }, 
        {
            "author": "smalltalkrenaissance", 
            "created_utc": 1504811381.0, 
            "domain": "hackernoon.com", 
            "id": "6ypdfm", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 16, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6ypdfm/smalltalk_is_the_nikola_tesla_of_the_it_industry/", 
            "score": 22, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Smalltalk is the Nikola Tesla of the IT Industry", 
            "url": "https://hackernoon.com/smalltalk-is-the-nikola-tesla-of-the-it-industry-dbef0a8ddd57"
        }, 
        {
            "author": "minond", 
            "created_utc": 1504631840.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "6y9gc4", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6y9gc4/programming_language_design_and_implementation/", 
            "score": 13, 
            "selftext": "What are some (online) courses you would recommend to someone that is an experienced programmer and is looking to learn more about programming language design/implementation and even move their career to that space?", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Programming language design and implementation online classes?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/6y9gc4/programming_language_design_and_implementation/"
        }, 
        {
            "author": "oilshell", 
            "created_utc": 1504596856.0, 
            "domain": "youtube.com", 
            "id": "6y6gx4", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Confreaks", 
                    "author_url": "https://www.youtube.com/user/Confreaks", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/CuD7SCqHB7k?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/CuD7SCqHB7k/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "RustConf 2017 - Closing Keynote: Safe Systems Software and the Future of Computing by Joe Duffy", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6y6gx4/safe_systems_software_and_the_future_of_computing/", 
            "score": 16, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Safe Systems Software and the Future of Computing by Joe Duffy", 
            "url": "https://www.youtube.com/watch?v=CuD7SCqHB7k"
        }, 
        {
            "author": "aramknight", 
            "created_utc": 1504542462.0, 
            "domain": "medium.com", 
            "id": "6y1cud", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6y1cud/the_once_great_and_powerful/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "The Once Great and Powerful", 
            "url": "https://medium.com/@richardeng/its-worth-mentioning-that-in-the-early-1990s-smalltalk-reached-its-peak-2f700f569893"
        }, 
        {
            "author": "Athas", 
            "created_utc": 1504449141.0, 
            "domain": "cambridgeblog.org", 
            "id": "6xtg3e", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 33, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6xtg3e/what_if_anything_is_a_programming_paradigm_robert/", 
            "score": 18, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "What, if anything, is a programming paradigm? (Robert Harper)", 
            "url": "http://www.cambridgeblog.org/2017/05/what-if-anything-is-a-programming-paradigm/"
        }, 
        {
            "author": "maaarcocr", 
            "created_utc": 1504380972.0, 
            "domain": "medium.com", 
            "id": "6xoend", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6xoend/on_programming_paradigms/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "On programming paradigms", 
            "url": "https://medium.com/@marcoconcettorudilosso/on-programming-paradigms-4e09aa40a66a"
        }, 
        {
            "author": "AdamAlexandr", 
            "created_utc": 1504361158.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "6xm462", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6xm462/is_javascript_prototypes_the_same_as_prototypes/", 
            "score": 7, 
            "selftext": "I've been looking into oop with prototypes recently and I was wondering if any prototype wizards here might know the answer to this. I use javascript a lot and I'm familiar with some other languages with prototypes such as self although I haven't used them before.\n\nMy question is: are javascript prototypes the same as the prototypes in these other languages? In javascript a prototype behaves like a delegate. If an object receives a message and doesnt understand it then it forwards the message up its prototype chain. This also means an objects prototype chain can change at any time.\n\nIt seems to me from wikipedia that other languages like self have a different approach to prototypes. You construct an object and then clone it into object instances. To me this implies that after instantiation there is no link between an object and its prototype.\n\nIs javascript unique in how its prototypes work?\n\nedit: Thanks for the answers, looks like I was wrong and Self does have a delegate inheritance model similar to javascript. Self was optimised to run almost as fast as optimised C. So I wonder why javascript is restricted to one prototype per object. It seems like you could make some interesting design patterns with multiple prototypes.", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Is javascript prototypes the same as prototypes in other languages.", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/6xm462/is_javascript_prototypes_the_same_as_prototypes/"
        }, 
        {
            "author": "ms86", 
            "created_utc": 1504343030.0, 
            "domain": "composition.al", 
            "id": "6xkrtb", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6xkrtb/my_first_fifteen_compilers/", 
            "score": 44, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "My first fifteen compilers", 
            "url": "http://composition.al/blog/2017/07/31/my-first-fifteen-compilers/"
        }, 
        {
            "author": "elena-lang", 
            "created_utc": 1504339208.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "6xkimf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6xkimf/elena_32_creating_a_simple_mixin/", 
            "score": 0, 
            "selftext": "ELENA supports several types of mix-in objects : Tape, Wrap, Group, Extension. The most basic of them is **Group**.\n\nLet's create a mix-in consisting of two objects. One contains data to print, the second one prints the data:\n\n    import system'dynamic.\n    import extensions.\n    \n    class Member1\n    {\n        literal theField := \"member1 content\".\n        \n        field = theField.\n    }\n    \n    class Member2\n    {\n        eval\n        [\n            console printLine(\n               \"printing the content of the second object:\",\n               self field).\n        ]\n    }\n    \n    program =\n    [ \n        var g := Group::(Member1 new, Member2 new).\n        g eval.\n    ].\n\nOutput is:\n\n    printing the content of the second object:member1 content\n", 
            "subreddit": "ProgrammingLanguages", 
            "title": "ELENA 3.2 : Creating a simple mix-in", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/6xkimf/elena_32_creating_a_simple_mixin/"
        }, 
        {
            "author": "FascinatedBox", 
            "created_utc": 1504293416.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "6xgrzp", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 16, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6xgrzp/what_design_principles_have_guided_you_during_the/", 
            "score": 18, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "What design principles have guided you during the creation of your programming language?", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/6xgrzp/what_design_principles_have_guided_you_during_the/"
        }, 
        {
            "author": "Neechoo", 
            "created_utc": 1504271093.0, 
            "domain": "c9x.me", 
            "id": "6xedt2", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6xedt2/resources_for_amateur_compiler_writers/", 
            "score": 54, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Resources for Amateur Compiler Writers", 
            "url": "https://c9x.me/compile/bib/"
        }, 
        {
            "author": "leswahn", 
            "created_utc": 1504259965.0, 
            "domain": "self.ProgrammingLanguages", 
            "id": "6xdk2m", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6xdk2m/presentation_on_using_llvm_to_implement_tuplex/", 
            "score": 7, 
            "selftext": "Yesterday I held a presentation for the Swedish LLVM dev&user group on how the high-level language concepts of Tuplex are achieved using LLVM and mapped to its model. I put up the slides on the blog for those that may be interested!\n\n[Implementing Tuplex using LLVM](https://tuplexlanguage.github.io/tuplex/2017/09/01/Tuplex-and-LLVM-presentation.html)", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Presentation on using LLVM to implement Tuplex", 
            "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/6xdk2m/presentation_on_using_llvm_to_implement_tuplex/"
        }
    ], 
    "subreddit_creation_utc": 1212017711.0, 
    "subscribers": 7333, 
    "title": "Programming Languages", 
    "title_word_count_occurrences": {
        " c ": 3, 
        "c#": 1, 
        "haskell": 1, 
        "java": 1, 
        "javascript": 1, 
        "lisp": 3, 
        "python": 1, 
        "tesla": 1
    }, 
    "top_score_submissions": [
        {
            "author": "Neechoo", 
            "created_utc": 1504271093.0, 
            "domain": "c9x.me", 
            "id": "6xedt2", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6xedt2/resources_for_amateur_compiler_writers/", 
            "score": 54, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Resources for Amateur Compiler Writers", 
            "url": "https://c9x.me/compile/bib/"
        }, 
        {
            "author": "ms86", 
            "created_utc": 1504343030.0, 
            "domain": "composition.al", 
            "id": "6xkrtb", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6xkrtb/my_first_fifteen_compilers/", 
            "score": 44, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "My first fifteen compilers", 
            "url": "http://composition.al/blog/2017/07/31/my-first-fifteen-compilers/"
        }, 
        {
            "author": "svick", 
            "created_utc": 1504953167.0, 
            "domain": "tomasp.net", 
            "id": "6z1179", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/6z1179/the_design_side_of_programming_language_design/", 
            "score": 37, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "The design side of programming language design", 
            "url": "http://tomasp.net/blog/2017/design-side-of-pl/"
        }, 
        {
            "author": "MadcapJake", 
            "created_utc": 1505878094.0, 
            "domain": "craftinginterpreters.com", 
            "id": "718f7r", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/718f7r/crafting_interpreters_new_chapter_resolving_and/", 
            "score": 32, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Crafting Interpreters - New Chapter: Resolving and Binding", 
            "url": "http://www.craftinginterpreters.com/resolving-and-binding.html"
        }, 
        {
            "author": "tinfoilboy", 
            "created_utc": 1505701159.0, 
            "domain": "github.com", 
            "id": "70s27c", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/ProgrammingLanguages/comments/70s27c/been_working_on_my_first_real_interpreted/", 
            "score": 28, 
            "selftext": "", 
            "subreddit": "ProgrammingLanguages", 
            "title": "Been working on my first real interpreted language, Shakara, as a toy project for around threeish months. Take a gander at the current source and the preliminary specification!", 
            "url": "https://github.com/tinfoilboy/Shakara"
        }
    ], 
    "total_submissions": 45, 
    "utc_of_data_collection_completion": "2017-10-16 18:49:33", 
    "utc_of_data_collection_start": "2017-10-16 18:49:33"
}