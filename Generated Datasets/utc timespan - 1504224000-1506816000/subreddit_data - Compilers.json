{
    "active_user_count": 9, 
    "advertiser_category": null, 
    "audience_target": "", 
    "avg_comment_num_per_submission": 4, 
    "avg_submission_score": 7, 
    "collection_range_end_unix_timestamp": 1506816000, 
    "collection_range_end_utc": "2017-10-01 00:00:00", 
    "collection_range_start_unix_timestamp": 1504224000, 
    "collection_range_start_utc": "2017-09-01 00:00:00", 
    "description": "This subreddit is all about the theory and development of compilers.\n\nFor similar sub-reddits see:\n\n * [systems](/r/systems)\n * [csbooks](/r/csbooks)\n * [compsci](/r/compsci)\n * [ProgrammingLanguages](/r/ProgrammingLanguages)\n\nPopular mainstream compilers:\n\n * [gcc](/r/gcc)\n * [llvm / clang](/r/llvm)", 
    "display_name": "Compilers", 
    "domain_occurrences": {
        "github.com": 2, 
        "self.Compilers": 1, 
        "sourceware.org": 1, 
        "youtube.com": 1
    }, 
    "id": "2qrgl", 
    "num_external_website_posts": 4, 
    "num_text_posts": 1, 
    "public_description": "", 
    "submissions": [
        {
            "author": "rhy0lite", 
            "created_utc": 1506362636.0, 
            "domain": "sourceware.org", 
            "id": "72e8kv", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/Compilers/comments/72e8kv/binutils_2291_released/", 
            "score": 8, 
            "selftext": "", 
            "subreddit": "Compilers", 
            "title": "Binutils 2.29.1 Released", 
            "url": "https://sourceware.org/ml/binutils/2017-09/msg00311.html"
        }, 
        {
            "author": "luizperes", 
            "created_utc": 1506357565.0, 
            "domain": "github.com", 
            "id": "72dn1i", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/Compilers/comments/72dn1i/linguist_unknown_code_highlighting_for_unknown/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "Compilers", 
            "title": "Linguist Unknown: code highlighting for unknown, lost or new programming languages on GitHub (Chrome extension)", 
            "url": "https://github.com/github-aux/linguist-unknown"
        }, 
        {
            "author": "jerylee", 
            "created_utc": 1505687358.0, 
            "domain": "youtube.com", 
            "id": "70qred", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Scala World", 
                    "author_url": "https://www.youtube.com/channel/UCc0j7uOItUDh7vEvPb-TeCg", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/w1ca4KL9UXc?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/w1ca4KL9UXc/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Scala World Opening Keynote\u2014Martin Odersky", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/Compilers/comments/70qred/martin_odersky_compilers_are_inmemory_databases/", 
            "score": 13, 
            "selftext": "", 
            "subreddit": "Compilers", 
            "title": "Martin Odersky: Compilers Are (In-Memory) Databases", 
            "url": "https://www.youtube.com/watch?v=w1ca4KL9UXc"
        }, 
        {
            "author": "apiad", 
            "created_utc": 1504811891.0, 
            "domain": "github.com", 
            "id": "6ypfgf", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/Compilers/comments/6ypfgf/a_yet_incomplete_course_in_compiler_design_in/", 
            "score": 8, 
            "selftext": "", 
            "subreddit": "Compilers", 
            "title": "A (yet incomplete) course in compiler design (in Spanish language)", 
            "url": "https://github.com/apiad/compilers-ln"
        }, 
        {
            "author": "mamcx", 
            "created_utc": 1504753093.0, 
            "domain": "self.Compilers", 
            "id": "6ykjnh", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/Compilers/comments/6ykjnh/how_make_a_replfriendly_compiled_language/", 
            "score": 0, 
            "selftext": "I'm dreaming a language where a repl is a must (for me). \n\nDo it as a interpreter make it easy (also, do the debugger), but wonder how do a compiler that is repl friendly (instead of try to make the repl later when everything is set).\n\nI work on .NET/F#, so if this is possible on the .NET runtime will be great.\n\n", 
            "subreddit": "Compilers", 
            "title": "How make a repl-friendly compiled language (hopefully in .net)", 
            "url": "https://www.reddit.com/r/Compilers/comments/6ykjnh/how_make_a_replfriendly_compiled_language/"
        }
    ], 
    "subreddit_creation_utc": 1232074691.0, 
    "subscribers": 4659, 
    "title": "Compilers", 
    "title_word_count_occurrences": {
        ".net": 1, 
        "github": 1
    }, 
    "top_score_submissions": [
        {
            "author": "jerylee", 
            "created_utc": 1505687358.0, 
            "domain": "youtube.com", 
            "id": "70qred", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Scala World", 
                    "author_url": "https://www.youtube.com/channel/UCc0j7uOItUDh7vEvPb-TeCg", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/w1ca4KL9UXc?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/w1ca4KL9UXc/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Scala World Opening Keynote\u2014Martin Odersky", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/Compilers/comments/70qred/martin_odersky_compilers_are_inmemory_databases/", 
            "score": 13, 
            "selftext": "", 
            "subreddit": "Compilers", 
            "title": "Martin Odersky: Compilers Are (In-Memory) Databases", 
            "url": "https://www.youtube.com/watch?v=w1ca4KL9UXc"
        }, 
        {
            "author": "luizperes", 
            "created_utc": 1506357565.0, 
            "domain": "github.com", 
            "id": "72dn1i", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/Compilers/comments/72dn1i/linguist_unknown_code_highlighting_for_unknown/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "Compilers", 
            "title": "Linguist Unknown: code highlighting for unknown, lost or new programming languages on GitHub (Chrome extension)", 
            "url": "https://github.com/github-aux/linguist-unknown"
        }, 
        {
            "author": "rhy0lite", 
            "created_utc": 1506362636.0, 
            "domain": "sourceware.org", 
            "id": "72e8kv", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/Compilers/comments/72e8kv/binutils_2291_released/", 
            "score": 8, 
            "selftext": "", 
            "subreddit": "Compilers", 
            "title": "Binutils 2.29.1 Released", 
            "url": "https://sourceware.org/ml/binutils/2017-09/msg00311.html"
        }, 
        {
            "author": "apiad", 
            "created_utc": 1504811891.0, 
            "domain": "github.com", 
            "id": "6ypfgf", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/Compilers/comments/6ypfgf/a_yet_incomplete_course_in_compiler_design_in/", 
            "score": 8, 
            "selftext": "", 
            "subreddit": "Compilers", 
            "title": "A (yet incomplete) course in compiler design (in Spanish language)", 
            "url": "https://github.com/apiad/compilers-ln"
        }, 
        {
            "author": "mamcx", 
            "created_utc": 1504753093.0, 
            "domain": "self.Compilers", 
            "id": "6ykjnh", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/Compilers/comments/6ykjnh/how_make_a_replfriendly_compiled_language/", 
            "score": 0, 
            "selftext": "I'm dreaming a language where a repl is a must (for me). \n\nDo it as a interpreter make it easy (also, do the debugger), but wonder how do a compiler that is repl friendly (instead of try to make the repl later when everything is set).\n\nI work on .NET/F#, so if this is possible on the .NET runtime will be great.\n\n", 
            "subreddit": "Compilers", 
            "title": "How make a repl-friendly compiled language (hopefully in .net)", 
            "url": "https://www.reddit.com/r/Compilers/comments/6ykjnh/how_make_a_replfriendly_compiled_language/"
        }
    ], 
    "total_submissions": 5, 
    "utc_of_data_collection_completion": "2017-10-17 18:43:14", 
    "utc_of_data_collection_start": "2017-10-17 18:43:14"
}