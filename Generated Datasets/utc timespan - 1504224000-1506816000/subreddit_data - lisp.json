{
    "active_user_count": 31, 
    "advertiser_category": null, 
    "audience_target": "programming", 
    "avg_comment_num_per_submission": 8, 
    "avg_submission_score": 22, 
    "collection_range_end_unix_timestamp": 1506816000, 
    "collection_range_end_utc": "2017-10-01 00:00:00", 
    "collection_range_start_unix_timestamp": 1504224000, 
    "collection_range_start_utc": "2017-09-01 00:00:00", 
    "description": "**A subreddit for the Lisp family of programming languages**.\n\n**Other Lisp related subreddits**:\n\n* [/r/scheme](http://www.reddit.com/r/scheme)\n* [/r/clojure](http://www.reddit.com/r/clojure)\n* [/r/racket](http://www.reddit.com/r/racket)\n* [/r/common_lisp](http://www.reddit.com/r/common_lisp)\n* [/r/lisp_ja](http://www.reddit.com/r/lisp_ja) (Japanese)\n* [/r/dylanlang](http://www.reddit.com/r/dylanlang)\n* [/r/emacs](http://www.reddit.com/r/emacs)\n* [/r/learnlisp](http://www.reddit.com/r/learnlisp)\n* [/r/shenlanguage](http://www.reddit.com/r/shenlanguage/)\n* [/r/lispmachine](http://www.reddit.com/r/lispmachine/)\n* [/r/stumpwm](http://www.reddit.com/r/stumpwm/)\n* [(r (apply #'+ subreddits))](http://www.reddit.com/r/lisp+common_lisp+scheme+racket+clojure+lisp_ja+emacs+learnlisp+dylanlang+shenlanguage+lispmachine+stumpwm)\n\n**Language References**\n \n * **Common Lisp**\n  * [Common Lisp Hyperspec](http://www.lispworks.com/documentation/HyperSpec/Front/Contents.htm)\n  * [Common Lisp UltraSpec](http://phoe.tymoon.eu/clus) (work-in-progress)\n  * [Common Lisp Spec (pdf)](http://cvberry.com/tech_writings/notes/common_lisp_standard_draft.html)\n  * Common Lisp Object System Meta-Object Protocol: [vanilla-html](http://metamodular.com/CLOS-MOP/), [HTML5/mobile](https://clos-mop.hexstreamsoft.com/)\n  * [Common Lisp Quick Reference](http://clqr.boundp.org)\n  * [Common Lisp Type Hierarchy](https://docs.google.com/document/pub?id=1SYSr0KE8iyv61srv6AMm-YRr-O6zM7Oi6CLSJgZc9yc&pli=1) [(alt w/mop)](http://sellout.github.io/media/CL-type-hierarchy.png)\n\n * **Scheme**\n  * [r^7 rs](http://www.r7rs.org/)\n  * [r^6 rs](http://www.r6rs.org/)\n\n**Tools**\n\n* [Quicklisp](http://www.quicklisp.org/) (CL Library manager)\n* [Portacle](https://shinmera.github.io/portacle/) (Portable CL environment)\n* [Roswell](https://github.com/roswell/roswell/) (CL Environment Setup Utility)\n* IDEs for Common Lisp\n * [SLIME](http://common-lisp.net/project/slime/) (GNU Emacs)\n * [SLIMV](http://www.vim.org/scripts/script.php?script_id=2531) (Vim)\n * [Vlime](https://github.com/l04m33/vlime) (Vim)\n * [Atom-Slime](https://atom.io/packages/atom-slime) (Atom)\n\n\n**Tutorials/FAQs**\n\n* [Articulate Common Lisp, how to write Common Lisp today](http://articulate-lisp.com)\n* [(Common) Lisp the Language ](http://lisp-lang.org/) (Advocacy, getting started, tutorials, wiki)\n* [Zach Beane: Where to get help with Common Lisp](http://xach.livejournal.com/325276.html)\n* [Lisp Style Guide Norvig/Pitman](http://www.cs.northwestern.edu/academics/courses/325/readings/luv-slides.pdf) (PDF)\n* [Nikodemus' CL FAQ](http://random-state.net/files/nikodemus-cl-faq.html)\n\n**Useful Lisp resources**:\n\n* [Planet Lisp](http://planet.lisp.org/) (meta-blog)\n* [Planet Scheme](http://scheme.dk/planet/) (meta-blog)\n* [Lisp Forum](http://www.lispforum.com/)\n* [Cliki](http://www.cliki.net/index) (library reference)\n* [Common-Lisp.net](http://common-lisp.net/) (project hosting, mailing lists)\n* [State of the CL Ecosystem 2015](http://borretti.me/article/common-lisp-sotu-2015) (library recommendations)\n* [Awesome CL](https://codyreichert.github.io/awesome-cl/) (library recommendations)\n* [comp.lang.lisp](http://groups.google.com/forum/#!forum/comp.lang.lisp) (usenet group)\n* [Common Lisp Professionals Mailing List](https://mailman.common-lisp.net/listinfo/pro)\n* [Lisp Jobs](http://lispjobs.wordpress.com)\n* [Common Lisp, Wikipedia](https://en.wikipedia.org/wiki/Common_Lisp)\n* [Association of Lisp Users](https://web.archive.org/web/20160827235937/http://alu.org/alu/home) [**archive**]\n* [Stackoverflow Lisp questions](http://stackoverflow.com/questions/tagged/lisp), [Common Lisp](http://stackoverflow.com/questions/tagged/common-lisp), [Scheme](https://stackoverflow.com/questions/tagged/scheme)\n* [Code Review](https://codereview.stackexchange.com/questions/tagged/lisp+or+scheme+or+common-lisp) (Lisp, CL, Scheme)\n* [Rosetta Code, Common Lisp](http://rosettacode.org/wiki/Category:Common_Lisp)\n* [Mailing Lists](https://mailman.common-lisp.net/listinfo), [more](https://common-lisp.net/independent-lists/)\n* [Twitter #lisp](https://twitter.com/search?q=%23lisp)\n* [ECL Quarterly](https://common-lisp.net/project/ecl/tag/quarterly.html)\n\n**Search Engines**\n\n* [Quickdocs Library Search and Documentation](http://quickdocs.org/) \n* [L1sp redirect service](http://l1sp.org/html/)\n* [Lisp Doc/book search](http://lispdoc.com/)\n\n**Free Lisp Books / Papers**\n\n* [Practical Common Lisp](http://www.gigamonkeys.com/book/)\n* [On Lisp](http://www.paulgraham.com/onlisp.html)\n* [Common Lisp: A Gentle Introduction to Symbolic Computation](http://www.cs.cmu.edu/~dst/LispBook/)\n* [Common Lisp The Language, 2nd Edition](http://www.cs.cmu.edu/Groups/AI/html/cltl/cltl2.html) (Pre ANSI Common Lisp)\n* [The Common Lisp Cookbook 2017 \n](https://lispcookbook.github.io/cl-cookbook/) ([Original 2007](http://cl-cookbook.sourceforge.net))\n* [Structure and Interpretation of Computer Programs](http://mitpress.mit.edu/sicp/full-text/book/book.html), [[HTML5/EPUB3]](https://sarabander.github.io/sicp/) (Scheme)\n* [Lisp Outside the Box](http://nicklevine.org/lisp-book/) (unfinished)\n* [Common Lisp: An Interactive Approach](https://www.cse.buffalo.edu/~shapiro/Commonlisp/) (1992)\n\n**Implementations** \n\n* *CL Open Source*\n * [ABCL](http://common-lisp.net/project/armedbear/) (for JVM)\n * [CCL](http://ccl.clozure.com/)\n * [CLISP](http://www.clisp.org/)\n * [CMUCL](http://cmucl.org/), [mirror](https://gitlab.common-lisp.net/cmucl/cmucl/wikis/home) (*nix)\n * [ECL](https://common-lisp.net/project/ecl/)\n * [GCL](http://www.gnu.org/software/gcl/)\n * [SBCL](http://www.sbcl.org/)\n* *CL Commercial*\n * [Allegro CL](http://www.franz.com/products/allegro-common-lisp/)\n * [LispWorks](http://www.lispworks.com/)\n * [mocl](https://wukix.com/mocl) for OSX, iOS and Android\n * [Open Genera](http://www.symbolics-dks.com/)\n * [Scieneer CL](http://www.scieneer.com/scl/)\n* *CL Developmental/Historical*\n * [Clasp](https://github.com/drmeister/clasp) (llvm)\n * [Corman Lisp](https://github.com/sharplispers/cormanlisp) (MS-Windows)\n * [Eclipse Common Lisp](https://github.com/blakemcbride/eclipse-lisp)\n * [JSCL](https://github.com/jscl-project/jscl) (javascript)\n * [Mezzano](https://github.com/froggey/Mezzano) (Lisp OS)\n * [MKCL](http://common-lisp.net/project/mkcl/) (fork of ECL)\n * [SICL](https://github.com/robert-strandh/SICL) (modular)\n * [WCL](http://pgc.com/commonlisp/) (embeddable)\n* *Scheme*\n * [Chicken](https://www.call-cc.org/)\n * [Gambit](http://gambitscheme.org/wiki/index.php/Main_Page)\n * [Guile](https://www.gnu.org/software/guile/)\n * [Kawa](https://www.gnu.org/software/kawa/)\n * [Racket](http://www.racket-lang.org/)\n* *Non-CL/Scheme*\n * [Clojure](https://clojure.org/)\n * [NewLisp](http://www.newlisp.org/)\n * [PicoLisp](http://www.picolisp.com/)\n * [uLisp](http://www.ulisp.com/) (Arduino)\n\n**Events**\n\n* [10th European Lisp Symposium, 3-4 April 2017, VUB - Vrije Universiteit Brussel, Belgium](http://www.european-lisp-symposium.org/)\n* [International Lisp Conference](http://international-lisp-conference.org/)\n", 
    "display_name": "lisp", 
    "domain_occurrences": {
        "anticrisis.github.io": 2, 
        "blog.kingcons.io": 1, 
        "en.wikipedia.org": 1, 
        "fare.livejournal.com": 1, 
        "franz.com": 1, 
        "gfycat.com": 1, 
        "github.com": 3, 
        "gitlab.com": 1, 
        "hal.inria.fr": 1, 
        "itch.io": 1, 
        "mail-archive.com": 1, 
        "meetup.com": 1, 
        "minejima.jp": 1, 
        "portacle.github.io": 1, 
        "sbcl.org": 2, 
        "scratch.mit.edu": 1, 
        "self.lisp": 20, 
        "serverracket.com": 1, 
        "turtleware.eu": 1, 
        "youtu.be": 3, 
        "youtube.com": 4
    }, 
    "id": "2qh35", 
    "num_external_website_posts": 29, 
    "num_text_posts": 20, 
    "public_description": "A subreddit for the Lisp family of programming languages.", 
    "submissions": [
        {
            "author": "g000001", 
            "created_utc": 1506798475.0, 
            "domain": "sbcl.org", 
            "id": "73gte4", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/73gte4/sbcl_140_released/", 
            "score": 81, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "SBCL 1.4.0 released", 
            "url": "http://www.sbcl.org/all-news.html?1.4.0#1.4.0"
        }, 
        {
            "author": "eql5", 
            "created_utc": 1506591996.0, 
            "domain": "gitlab.com", 
            "id": "72z1y9", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/72z1y9/sketching_an_android_app_lisp_ui_without/", 
            "score": 29, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Sketching an android app (Lisp + UI) without installing the (gigantic) dev tools", 
            "url": "https://gitlab.com/eql/EQL5-Android/tree/master/examples/my#info"
        }, 
        {
            "author": "Baggers_", 
            "created_utc": 1506545068.0, 
            "domain": "youtu.be", 
            "id": "72v6p3", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Baggers", 
                    "author_url": "https://www.youtube.com/user/CBaggers", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/2z2qBH1Hi50?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/2z2qBH1Hi50/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Pushing Pixels with Lisp - Episode 18 - Shadow Mapping Basics", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/72v6p3/pushing_pixels_with_lisp_episode_18_shadow/", 
            "score": 15, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Pushing Pixels with Lisp - Episode 18 - Shadow Mapping Basics", 
            "url": "https://youtu.be/2z2qBH1Hi50"
        }, 
        {
            "author": "djeis97", 
            "created_utc": 1506541944.0, 
            "domain": "self.lisp", 
            "id": "72uu38", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/72uu38/package_local_nicknames/", 
            "score": 12, 
            "selftext": "TL/DR: hoping to collect some knowledge about the current options for package local nicknames around the CL ecosystem and discuss ideas for improving the state of things.\n\nThis is an old issue, but I was hoping to restart the discussion about package local nicknames here. For anyone who hasn't come across it before the idea is that, instead of package nicknames being purely global, any given package can have a table of local package nicknames which apply when you are in that package. This helps dealing with conflicts between package names without everyone having to resort to full names when qualifying packages- packages can have long global names, and short nicknames in the places they are used.\n\nThis has been implemented as a reader macro in the past by a few libraries, such as [local-package-aliases](http://quickdocs.org/local-package-aliases/), or by doing package renames in the asdf loading phase as in [package-renaming](http://quickdocs.org/package-renaming/). However, doing this in the reader means mucking about with the readtable to get packages working and reserving a char for the used nickname, and doing this in asdf makes the nicknames unavailible in the REPL/SLIME without setting some extra hooks.\n\nSBCL already provides local nickname support- in defpackage, you can supply a plist of nicknames to packages in a `(:local-nicknames nick package nick package ...)` option. Having it integrated into the package system means it works properly everywhere by default, but this ties you down to SBCL as your implementation.\n\nThere are also a few other concerns with adding local packages to the full package system- specifically, how do they affect the package introspection functions like find-package et al. There are two options here, I think:\n\n* These functions should always lookup local nicknames relative to the current value of `*package*`: This is the most well-integrated support, but has the downside of possibly confusing code that expects `find-package` to always refer to the global name. SBCL does this, and resolves the problem by requiring any local nicknames to not clash with any global name or global nickname (which I find an elegant solution, but can limit your options for local nicknames).\n* These functions should always lookup the global name or nickname of a package: this would limit the possible damage the change could cause, but means you need new functions for resolving packages with local nicknames or adding some new argument/setting to these functions to turn the nicknames on (and probably requires rewriting a lot of code to support nicknames, like slime etc.).\n\nAll in all I actually like SBCL's approach, but I would be interested in other opinions. Also, if any other implementations or packages provide local nicknames I would love to hear about how they do it. What I would love is something tied into the package system and which works  as transparently as possible everywhere, but we'll have to see.\n\nAlso, if anyone has a good argument against local package nicknames I would love to hear it- I have yet to find one tho which is worth the conflicts that systems are having these days with keeping their package names short.\n\n\n*Head-in-the-clouds stuff follows* :)\n\nAs a side note, while I was thinking through this I had an idea I'm calling \"prefix nicknames\"- basically, a prefix nickname is a shorthand for a group of local package nicknames for packages which share a common prefix in their name. That way, if you have a group of packages named \"com.foo\", \"com.foo.a\", \"com.foo.b\", and \"com.foo.c\", you could set a local prefix nickname of \"foo\" for \"com.foo\" and refer to them as \"foo\", \"foo.a\", \"foo.b\", and \"foo.c\" respectively. Note that this doesn't make the package system hierarchical or specify that \".\" should be used specifically as a separator- it just lets you define multiple nicknames in one go. There are some performance concerns there I suspect, and it needs some extra work to handle package renames, but I feel that this would be a valuable extention to local nicknames. Any thoughts?", 
            "subreddit": "lisp", 
            "title": "Package local nicknames", 
            "url": "https://www.reddit.com/r/lisp/comments/72uu38/package_local_nicknames/"
        }, 
        {
            "author": "self", 
            "created_utc": 1506457541.0, 
            "domain": "fare.livejournal.com", 
            "id": "72n6gy", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 24, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/72n6gy/the_nest_macro_ported_from_common_lisp_to_scheme/", 
            "score": 27, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "The \"nest\" macro, ported from Common Lisp to Scheme.", 
            "url": "https://fare.livejournal.com/189741.html"
        }, 
        {
            "author": "Baggers_", 
            "created_utc": 1506424764.0, 
            "domain": "self.lisp", 
            "id": "72jnvw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/72jnvw/pushing_pixels_with_lisp_episode_18_basic_shadow/", 
            "score": 20, 
            "selftext": "It's nearly that time of week again and this time I'd like to try shadow mapping. It is a very common technique for real-time shadows in games and so it's about time I had a go at implementing it. \n\nWe will be basing the approach on [this wonderful guide](https://learnopengl.com/#!Advanced-Lighting/Shadows/Shadow-Mapping) although our goal for the stream will be modest, I'd like to get up to the ugly, jagged edge version of the shadows. We may get further but my current plan is to leave softer shadows for next week's stream.\n\nAs ever we will be live here: https://www.twitch.tv/baggers___ tomorrow (Wednesday) at 18:00 UTC, which is: 11:00 PDT 14:00 EDT 18:00 UTC 19:00 BST 20:00 CEST 21:00 EAT and the recording will be on youtube afterwards.", 
            "subreddit": "lisp", 
            "title": "Pushing Pixels with Lisp - Episode 18 - Basic Shadow Mapping - Streaming on Twitch Wednesday 6pm UTC", 
            "url": "https://www.reddit.com/r/lisp/comments/72jnvw/pushing_pixels_with_lisp_episode_18_basic_shadow/"
        }, 
        {
            "author": "cg84", 
            "created_utc": 1506319491.0, 
            "domain": "self.lisp", 
            "id": "72al8n", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/72al8n/status_of_iolib/", 
            "score": 7, 
            "selftext": "I wanted to use [iolib](https://common-lisp.net/project/iolib/) on a new project of mine but the lack of documentation is really slowing me down. There's only one [tutorial](https://github.com/sionescu/iolib/blob/master/examples/tutorial) that I am aware of, and while its good, it only covers one aspect of it.\n\nThere's also a [manual](https://common-lisp.net/project/iolib/manual/iolib.html) but its really outdated and also very incomplete.\n\nWhile there seems to be [some activity](https://github.com/sionescu/iolib/commits/master) on the project repo now and then, I am not sure if any substantial work is being done right now.\n\nThis makes me wonder if the project is still being actively maintained, or am I just looking at the wrong places? I'd really prefer not to write my own bindings over libev or libuv.", 
            "subreddit": "lisp", 
            "title": "Status of iolib?", 
            "url": "https://www.reddit.com/r/lisp/comments/72al8n/status_of_iolib/"
        }, 
        {
            "author": "arvid", 
            "created_utc": 1506136628.0, 
            "domain": "gfycat.com", 
            "id": "71vyhc", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "description": "Watch Lecture 7A | MIT 6.001 Structure and Interpretation, 1986 GIF on Gfycat. Discover more lisp GIFs, programming GIFs, scheme GIFs on Gfycat", 
                    "height": 240, 
                    "html": "<iframe class=\"embedly-embed\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgfycat.com%2Fifr%2FDeepFluidKingsnake&url=https%3A%2F%2Fgfycat.com%2Fgifs%2Fdetail%2FDeepFluidKingsnake&image=https%3A%2F%2Fthumbs.gfycat.com%2FDeepFluidKingsnake-size_restricted.gif&key=522baf40bd3911e08d854040d3dc5c07&type=text%2Fhtml&schema=gfycat\" width=\"320\" height=\"240\" scrolling=\"no\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "gfycat", 
                    "provider_url": "http://gfycat.com", 
                    "thumbnail_height": 251, 
                    "thumbnail_url": "https://thumbs.gfycat.com/DeepFluidKingsnake-size_restricted.gif", 
                    "thumbnail_width": 334, 
                    "title": "Lecture 7A | MIT 6.001 Structure and Interpretation, 1986 - Create, Discover and Share Awesome GIFs on Gfycat", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 320
                }, 
                "type": "gfycat.com"
            }, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/71vyhc/lecture_7a_mit_6001_structure_and_interpretation/", 
            "score": 127, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Lecture 7A | MIT 6.001 Structure and Interpretation, 1986 GIF", 
            "url": "https://gfycat.com/DeepFluidKingsnake"
        }, 
        {
            "author": "michipili", 
            "created_utc": 1506067015.0, 
            "domain": "self.lisp", 
            "id": "71pkge", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/71pkge/warning_related_to_setfing_a_undefined_variable/", 
            "score": 7, 
            "selftext": "I'm currently learning lisp with Graham's book ANSI Common Lisp, and I'm curious about the following warning emitted by SBCL when setf-ing a undefiend variable:\n\n    CL-USER> (setf a 1)\n\n    ; in: SETF A\n    ;     (SETF A 1)\n    ; ==>\n    ;   (SETQ A 1)\n    ; \n    ; caught WARNING:\n    ;   undefined variable: A\n    ; \n    ; compilation unit finished\n    ;   Undefined variable:\n    ;     A\n    ;   caught 1 WARNING condition\n    1\n\nI guess this warning is meant to help spotting a possible typo and could be solved by using `defvar` or `defparameter` before `setf`. But what are the differences between `defvar` and `defparameter`? Is there further possibilities?\n\nSide question: what does the `f` stand for in `setf`?", 
            "subreddit": "lisp", 
            "title": "Warning related to setf-ing a undefined variable (rookie question)", 
            "url": "https://www.reddit.com/r/lisp/comments/71pkge/warning_related_to_setfing_a_undefined_variable/"
        }, 
        {
            "author": "jmercouris", 
            "created_utc": 1506014882.0, 
            "domain": "self.lisp", 
            "id": "71kpzu", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 32, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/71kpzu/next_browser_ver_002/", 
            "score": 28, 
            "selftext": "Hello everyone, I'm happy to tell you that nEXT browser version 0.02 has arrived with significant new improvements!\n\n\nhttps://github.com/nEXT-Browser/nEXT\n\n\n\nSummary:\n\n1. History as a tree implemented (s-F = Forwards, s-B = backwards)\n\n2. Fuzzy completion implemented\n\n3. Quick tab/bufffer switching implemented (C-x b)\n\n4. Ability to scroll using (C-n C-p)\n\n\nWhat we're working on for ver: 0.03\n\n1. History\n\n2. Smarter buffer completion with thumbnail preview in minibuffer\n\nThe full list of features planned for reach release can be found here: https://github.com/nEXT-Browser/nEXT/blob/master/next/README.org#release-timeline\n\n\nWhat we could use help with:\n\n1. Anyone experienced with SQLITE or SQL, we could use advice on how to persist history and tags about web pages\n\n\n2. Build a distributable binary for OS X, please see the issue here:https://github.com/nEXT-Browser/nEXT/issues/2\n\n\n\n\nIf you want to support the project, please leave a star on GitHub, it really helps, thank you!\n\nThank you for your time!", 
            "subreddit": "lisp", 
            "title": "nEXT Browser ver. 0.02!", 
            "url": "https://www.reddit.com/r/lisp/comments/71kpzu/next_browser_ver_002/"
        }, 
        {
            "author": "ProfessorImprobable", 
            "created_utc": 1505949562.0, 
            "domain": "self.lisp", 
            "id": "71f3ff", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/71f3ff/lisps_with_browser_repls/", 
            "score": 2, 
            "selftext": "One of the most enticing features of Clojure(Script) is the browser connected REPL for debugging client-side code.  It's almost enough to bring me back into the JVM.  _Almost._\n\nCLARIFICATION:  I'm talking about Lisps that include a mostly-equivalent compile-to-js version with support for connecting to the Lisp engine running in the browser for debugging client code, not online Lisp playgrounds.  (But I will check out the links so far to see if they lead to that -- Thanks!)", 
            "subreddit": "lisp", 
            "title": "Lisps with browser REPLs?", 
            "url": "https://www.reddit.com/r/lisp/comments/71f3ff/lisps_with_browser_repls/"
        }, 
        {
            "author": "wnortje", 
            "created_utc": 1505937212.0, 
            "domain": "serverracket.com", 
            "id": "71dp8k", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/71dp8k/server_racket_is_an_ebook_all_about_realworld_web/", 
            "score": 34, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Server: Racket is an ebook all about real-world web development with the Racket HTTP server.", 
            "url": "http://serverracket.com/"
        }, 
        {
            "author": "Baggers_", 
            "created_utc": 1505899334.0, 
            "domain": "self.lisp", 
            "id": "719w9a", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/719w9a/pushing_pixels_with_lisp_episode_17_flow/", 
            "score": 18, 
            "selftext": "'Master of planning' here forgot to put up the stream announcement, so hopefully a few folks can still make it :)\n\nTonight I think we will implement some kind of flow noise, due to lack of proper planning this may change but we will have a go!\n\nWe will be live here: https://www.twitch.tv/baggers___ tonight (Wednesday) at 18:00 UTC, which is: 11:00 PDT 14:00 EDT 18:00 UTC 19:00 BST 20:00 CEST 21:00 EAT\n\nThe recording will be on youtube and linked here afterwards.\n\n----\n\nWell that was a mixed bag :D Chat were great as ever but I hit a bunch of bugs and got myself confused as well. This is that stream https://youtu.be/Pt4bg1WyO94 However, I couldn't leave what was meant to be a simple task so after a small break I got to the point that I was hoping to on the stream and did a little bonus stream https://youtu.be/23nLuHmK1a0\n\nEnjoy!", 
            "subreddit": "lisp", 
            "title": "Pushing Pixels with Lisp - Episode 17 - Flow Noise..Probably - Streaming on Twitch Wednesday 6pm UTC", 
            "url": "https://www.reddit.com/r/lisp/comments/719w9a/pushing_pixels_with_lisp_episode_17_flow/"
        }, 
        {
            "author": "Kass-y", 
            "created_utc": 1505857001.0, 
            "domain": "self.lisp", 
            "id": "716ceb", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/716ceb/how_do_i_keep_learning/", 
            "score": 6, 
            "selftext": "I've been through some beginner 'how to' Common Lisp books and enjoyed them. The, largely trivial, programs I write do roughly what I expect them to. However, I'm now a little lost. I want to be able to do things like take the information from a webcam, render a GUI, send something to a printer, receive the location of the mouse pointer, etc. In short, to be able to use the other hardware of the computer in a meaningful sense, rather than just live in emacs all the time typing away at the REPL.\n\nI'm not asking for specific tutorials on how to do those things, (although if there are such tutorials, that would be handy too,) but where do I go to learn how to do that sort of thing? What books do I need to read, what websites do I need to visit, in order to learn more?\n\nAny help greatly appreciated :)", 
            "subreddit": "lisp", 
            "title": "How do I keep learning?", 
            "url": "https://www.reddit.com/r/lisp/comments/716ceb/how_do_i_keep_learning/"
        }, 
        {
            "author": "Eigenspace", 
            "created_utc": 1505837689.0, 
            "domain": "self.lisp", 
            "id": "7141sa", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/7141sa/what_do_you_think_of_julia/", 
            "score": 7, 
            "selftext": "I've been reading about the Julia language recently and its got me quite interested because its at least partly implemented in Scheme and has what appear to be meta programming macros on par with those of lisp. Code isn't written in S-expressions though it can be if one desires and its use of generic functions looks really intriguing. If one wanted, they could give the + operator a method so that it knows some way to add arrays or other objects that you've made up. \n\nAny thoughts, or gripes on Julia from a lispers perspective?", 
            "subreddit": "lisp", 
            "title": "What do you think of Julia?", 
            "url": "https://www.reddit.com/r/lisp/comments/7141sa/what_do_you_think_of_julia/"
        }, 
        {
            "author": "flaming_bird", 
            "created_utc": 1505837555.0, 
            "domain": "github.com", 
            "id": "71419a", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/71419a/macrolisp_a_lisplike_dsl_for_rust/", 
            "score": 26, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Macro-Lisp, a Lisp-Like DSL for Rust", 
            "url": "https://github.com/JunSuzukiJapan/macro-lisp"
        }, 
        {
            "author": "DelegatedPoS", 
            "created_utc": 1505785062.0, 
            "domain": "self.lisp", 
            "id": "70zp71", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/70zp71/why_isnt_bitcoin_written_in_lisp_isnt_it_better/", 
            "score": 0, 
            "selftext": "Objected Oriented Programming is simply not cutting it anymore, specially when it comes to concurrency and parallelism; trying to add concurrency and parallelism to this languages adds lots of complexity and more often than not leads to over engineering and poor performance.\n\nFunctional programming in the other hand is already well suited for these challenges, Immutable state, Closures, and High order functions, concepts that lend themselves very well for writing highly concurrent and distributed applications.", 
            "subreddit": "lisp", 
            "title": "why isn't bitcoin written in LISP? (isn't it better for bitcoin to be written in lisp which is a distributed app?)", 
            "url": "https://www.reddit.com/r/lisp/comments/70zp71/why_isnt_bitcoin_written_in_lisp_isnt_it_better/"
        }, 
        {
            "author": "tankfeeder", 
            "created_utc": 1505750269.0, 
            "domain": "mail-archive.com", 
            "id": "70vxjy", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/70vxjy/pilbox_android_apps_in_picolisp/", 
            "score": 12, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "PilBox - Android Apps in PicoLisp", 
            "url": "https://www.mail-archive.com/picolisp@software-lab.de/msg07658.html"
        }, 
        {
            "author": "guicho271828", 
            "created_utc": 1505744349.0, 
            "domain": "scratch.mit.edu", 
            "id": "70va9v", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/70va9v/scratch_scratchlisp/", 
            "score": 17, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Scratch - ScratchLisp", 
            "url": "https://scratch.mit.edu/projects/18997849/#player"
        }, 
        {
            "author": "king_cons", 
            "created_utc": 1505687633.0, 
            "domain": "blog.kingcons.io", 
            "id": "70qsbk", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/70qsbk/going_faster_with_lisp/", 
            "score": 37, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Going Faster with Lisp", 
            "url": "http://blog.kingcons.io/posts/Going-Faster-with-Lisp.html"
        }, 
        {
            "author": "atgreen", 
            "created_utc": 1505564555.0, 
            "domain": "github.com", 
            "id": "70glk0", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/70glk0/wrapilator_wrapping_verilator_output_in_common/", 
            "score": 11, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "wrapilator: wrapping verilator output in Common Lisp for Lisp-powered testing", 
            "url": "http://github.com/atgreen/wrapilator"
        }, 
        {
            "author": "njordthe", 
            "created_utc": 1505415480.0, 
            "domain": "youtube.com", 
            "id": "704clr", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Redmartian", 
                    "author_url": "https://www.youtube.com/user/redmartian", 
                    "height": 344, 
                    "html": "<iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/6uPwQuxjgQo?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/6uPwQuxjgQo/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "SYMBOLICS JOSHUA EXPERT SYSTEM", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 459
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/704clr/symbolics_joshua_expert_system_operation_with/", 
            "score": 13, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Symbolics Joshua - Expert System operation with DEFRULE", 
            "url": "https://www.youtube.com/watch?v=6uPwQuxjgQo"
        }, 
        {
            "author": "lispm", 
            "created_utc": 1505403619.0, 
            "domain": "meetup.com", 
            "id": "7030uh", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/7030uh/biochat_organizing_the_worlds_biological/", 
            "score": 12, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Biochat: organizing the world's biological information through AI - Bay Area Lisp & Scheme Users Group (Mountain View, CA), Sep 16th 2017", 
            "url": "https://www.meetup.com/de-DE/balisp/events/243000254/?eventId=243000254"
        }, 
        {
            "author": "VanLaser", 
            "created_utc": 1505402419.0, 
            "domain": "youtube.com", 
            "id": "702w7p", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/702w7p/algorithms_for_ai_and_nlp_in_common_lisp_inf4820/", 
            "score": 17, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Algorithms for AI and NLP in Common Lisp [INF4820, Fall 2017]", 
            "url": "https://www.youtube.com/playlist?list=PLDV0fv5m475a2OA-0ZWG4N8hVHeaAp3zI"
        }, 
        {
            "author": "VanLaser", 
            "created_utc": 1505385199.0, 
            "domain": "youtube.com", 
            "id": "701dv7", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/701dv7/adventures_in_common_lisp_paip_adam_smasher/", 
            "score": 23, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Adventures in Common Lisp (PAIP) / Adam Smasher", 
            "url": "https://www.youtube.com/user/AdamSmasher/videos?view=0&sort=dd&shelf_id=0"
        }, 
        {
            "author": "Baggers_", 
            "created_utc": 1505339210.0, 
            "domain": "youtu.be", 
            "id": "6zxtxu", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Baggers", 
                    "author_url": "https://www.youtube.com/user/CBaggers", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/7c389gbiS4I?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/7c389gbiS4I/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Pushing Pixels with Lisp - Episode 16 - Cobble Stones?", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6zxtxu/pushing_pixels_with_lisp_episode_16_cobble_stones/", 
            "score": 20, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Pushing Pixels with Lisp - Episode 16 - Cobble Stones?", 
            "url": "https://youtu.be/7c389gbiS4I"
        }, 
        {
            "author": "Baggers_", 
            "created_utc": 1505201810.0, 
            "domain": "self.lisp", 
            "id": "6zlihw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6zlihw/pushing_pixels_with_lisp_episode_16_cobblestones/", 
            "score": 23, 
            "selftext": "After last weeks stream I was sent a suggestion to use the voronoi diagrams to make cobblestones, and then a pdf showing how it was done in GIMP. As we now have a lesson plan it seemed I should probably do an episode on it :)\n\nThis week will involve working heavily with fbos and textures. It is very likely that managing these could get annoying so we may plan something to make it easier (which we could make another week). For an example of a very cool approach see u/Shinmera's Trial game engine and how it handles multi-pass rendering.\n\nWe will be live here: https://www.twitch.tv/baggers___ tomorrow (Wednesday) at 18:00 UTC, which is: 11:00 PDT 14:00 EDT 18:00 UTC 19:00 BST 20:00 CEST 21:00 EAT\n\nThe recording will be on youtube afterwards but it's always lovely to have more folks in chat so feel free to drop by!", 
            "subreddit": "lisp", 
            "title": "Pushing Pixels with Lisp - Episode 16 - Cobblestones - Streaming on Twitch Wednesday 6pm UTC", 
            "url": "https://www.reddit.com/r/lisp/comments/6zlihw/pushing_pixels_with_lisp_episode_16_cobblestones/"
        }, 
        {
            "author": "mac", 
            "created_utc": 1505154979.0, 
            "domain": "portacle.github.io", 
            "id": "6zhc2m", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6zhc2m/the_portacle_common_lisp_ide_10_released/", 
            "score": 35, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "The Portacle Common Lisp IDE 1.0 released", 
            "url": "https://portacle.github.io/"
        }, 
        {
            "author": "xach", 
            "created_utc": 1505131539.0, 
            "domain": "turtleware.eu", 
            "id": "6zey5h", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6zey5h/tutorial_working_with_fiveam_a_test_system/", 
            "score": 18, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Tutorial: Working with FiveAM [a test system]", 
            "url": "http://turtleware.eu/posts/Tutorial-Working-with-FiveAM.html"
        }, 
        {
            "author": "Eigenspace", 
            "created_utc": 1505070904.0, 
            "domain": "self.lisp", 
            "id": "6za7kk", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 52, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6za7kk/what_are_you_working_on/", 
            "score": 16, 
            "selftext": "Hey, the last thread was a bit of a hit so I figured I'd post this again.\n\nWhat are you working on? I'm currently just learning Common lisp with Practical Common Lisp and occasionally playing around with Hy since I'm predominantly a Python programmer. It's a wild ride so far!", 
            "subreddit": "lisp", 
            "title": "What are you working on?", 
            "url": "https://www.reddit.com/r/lisp/comments/6za7kk/what_are_you_working_on/"
        }, 
        {
            "author": "borodust", 
            "created_utc": 1505037944.0, 
            "domain": "self.lisp", 
            "id": "6z7hnu", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6z7hnu/trivialgamekit_simple_common_lisp_framework_for/", 
            "score": 35, 
            "selftext": "There's actually plenty of libraries available to dive into gamedev using Common Lisp, but little number of them is easy to configure and start working with. `trivial-gamekit` tries to solve exactly that problem - simple API and no tedious configuration to jump into game development quickly!\n\n[Documentation](https://borodust.org/projects/trivial-gamekit/) is still work in progress, but there exists little [Getting Started](https://borodust.org/projects/trivial-gamekit/getting-started/) guide to help you get a grasp of what `trivial-gamekit` is and how to work with it.\n\nAutumn 2017 [Lisp Game Jam](https://itch.io/jam/lisp-game-jam-2017-hard-mode) is happening in just a bit more than a month, so this release of `trivial-gamekit` is a bit rushed to collect as much feedback as possible to fix most issues before jam begins. `trivial-gamekit` is quite new and based on an engine that is still in active development, so things might break. Feel free to fire issues in GitHub [project](https://github.com/borodust/trivial-gamekit) or jump straight into `#lispgames` channel at irc://chat.freenode.net where all the cool lispy gamedev dudes reside to get real-time help and a bit of offtopicness too.\n\n`trivial-gamekit` requires Quicklisp, OpenGL 3.3+ and x86_64 SBCL or CCL. To see if it works for you out of the box, you can try [hello-gamekit](https://github.com/borodust/hello-gamekit) example which is actually used in Getting Started guide. ", 
            "subreddit": "lisp", 
            "title": "trivial-gamekit - simple Common Lisp framework for working with graphics, audio and input across 3 major OSes", 
            "url": "https://www.reddit.com/r/lisp/comments/6z7hnu/trivialgamekit_simple_common_lisp_framework_for/"
        }, 
        {
            "author": "agumonkey", 
            "created_utc": 1504972228.0, 
            "domain": "hal.inria.fr", 
            "id": "6z2eqc", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6z2eqc/code_staging_in_gnu_guix/", 
            "score": 20, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Code Staging in GNU Guix", 
            "url": "https://hal.inria.fr/hal-01580582/en"
        }, 
        {
            "author": "g000001", 
            "created_utc": 1504943495.0, 
            "domain": "minejima.jp", 
            "id": "6z0jdq", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6z0jdq/islisp_working_draft_230_html_version/", 
            "score": 11, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "ISLISP Working Draft 23.0 (HTML version)", 
            "url": "http://minejima.jp/ISLispHyperDraft/islisp-v23.html"
        }, 
        {
            "author": "anticrisisg", 
            "created_utc": 1504908628.0, 
            "domain": "anticrisis.github.io", 
            "id": "6yxzga", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 33, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6yxzga/equality_in_common_lisp/", 
            "score": 7, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Equality in Common Lisp", 
            "url": "https://anticrisis.github.io/2017/09/08/equality-in-common-lisp.html"
        }, 
        {
            "author": "gabriel_laddel", 
            "created_utc": 1504871728.0, 
            "domain": "youtube.com", 
            "id": "6yuajg", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Dan Girshovich", 
                    "author_url": "https://www.youtube.com/user/DanGirsh", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/T1QlEJ-2Gho?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/T1QlEJ-2Gho/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Lisp Machine", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6yuajg/lisp_machine_rides_again/", 
            "score": 59, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Lisp machine rides again.", 
            "url": "https://www.youtube.com/watch?v=T1QlEJ-2Gho"
        }, 
        {
            "author": "Baggers_", 
            "created_utc": 1504770251.0, 
            "domain": "youtu.be", 
            "id": "6yls4u", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Baggers", 
                    "author_url": "https://www.youtube.com/user/CBaggers", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/WJXGJ35a7-4?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/WJXGJ35a7-4/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Pushing Pixels with Lisp - Episode 15 - Voronoi Diagrams", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6yls4u/pushing_pixels_with_lisp_episode_15_voronoi/", 
            "score": 35, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Pushing Pixels with Lisp - Episode 15 - Voronoi Diagrams", 
            "url": "https://youtu.be/WJXGJ35a7-4"
        }, 
        {
            "author": "ryukinix", 
            "created_utc": 1504735225.0, 
            "domain": "github.com", 
            "id": "6yiuza", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6yiuza/an_experimental_minimal_chat_in_common_lisp/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "An experimental minimal chat in Common Lisp", 
            "url": "https://github.com/ryukinix/lisp-chat/blob/master/README.md"
        }, 
        {
            "author": "maufdez", 
            "created_utc": 1504727085.0, 
            "domain": "itch.io", 
            "id": "6yi012", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6yi012/lisp_game_jam_2017/", 
            "score": 29, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Lisp Game Jam 2017", 
            "url": "https://itch.io/jam/lisp-game-jam-2017-hard-mode"
        }, 
        {
            "author": "actionboyX", 
            "created_utc": 1504723431.0, 
            "domain": "self.lisp", 
            "id": "6yhlgn", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6yhlgn/autolisp_help/", 
            "score": 1, 
            "selftext": "I wrote the following code where I have a list, named tagReferences and want to use the first string in the list as a command so I went ahead and did this :\n\n(Command \"-attedit\" \"y\" \"myblock\" (CAR tagReferences) ....) \n\nThere was more following the (CAR tagReferences), however I was stopped saying with an error: bad argument value: AutoCad command: Tag1\n\nSo, it recognized I was referencencing the first position in my list, but didn't like that I referenced it....is there a way I can make this work?\n\nThanks!", 
            "subreddit": "lisp", 
            "title": "Autolisp help", 
            "url": "https://www.reddit.com/r/lisp/comments/6yhlgn/autolisp_help/"
        }, 
        {
            "author": "Baggers_", 
            "created_utc": 1504611491.0, 
            "domain": "self.lisp", 
            "id": "6y7eh2", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6y7eh2/pushing_pixels_with_lisp_episode_15_voronoi/", 
            "score": 24, 
            "selftext": "I've had playing with these on my todo list for ages so that's this week's goal. I want to try out the cone trick from here http://nullprogram.com/blog/2014/06/01/ and play with instancing to make this nice and fast.\n\nWe will be live here: https://www.twitch.tv/baggers___ tomorrow (Wednesday) at 18:00 UTC, which is: 11:00 PDT 14:00 EDT 18:00 UTC 19:00 BST 20:00 CEST 21:00 EAT\n\nThe recording will be on youtube afterwards.", 
            "subreddit": "lisp", 
            "title": "Pushing Pixels with Lisp - Episode 15 - Voronoi Diagrams - Streaming on Twitch Wednesday 6pm UTC", 
            "url": "https://www.reddit.com/r/lisp/comments/6y7eh2/pushing_pixels_with_lisp_episode_15_voronoi/"
        }, 
        {
            "author": "anticrisisg", 
            "created_utc": 1504560929.0, 
            "domain": "anticrisis.github.io", 
            "id": "6y3db8", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 23, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6y3db8/how_i_got_started_with_common_lisp_in_2017/", 
            "score": 31, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "How I got started with Common Lisp in 2017", 
            "url": "https://anticrisis.github.io/2017/09/04/how-i-got-started-with-common-lisp-2017.html"
        }, 
        {
            "author": "agumonkey", 
            "created_utc": 1504557607.0, 
            "domain": "franz.com", 
            "id": "6y30m5", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6y30m5/basic_lisp_techniques_david_j_cooper_jr_2003/", 
            "score": 32, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Basic Lisp Techniques - David J. Cooper, Jr. -- 2003", 
            "url": "https://franz.com/support/documentation/8.1/doc/basic-lisp-techniques.pdf"
        }, 
        {
            "author": "SlimeCloudBeta", 
            "created_utc": 1504544139.0, 
            "domain": "self.lisp", 
            "id": "6y1jh6", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6y1jh6/are_there_that_many_differences_in_scheme_and/", 
            "score": 4, 
            "selftext": "Curious :P", 
            "subreddit": "lisp", 
            "title": "Are there THAT many differences in Scheme and Racket for them to be considered different programming languages, why?", 
            "url": "https://www.reddit.com/r/lisp/comments/6y1jh6/are_there_that_many_differences_in_scheme_and/"
        }, 
        {
            "author": "SlimeCloudBeta", 
            "created_utc": 1504543325.0, 
            "domain": "self.lisp", 
            "id": "6y1g7t", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 28, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6y1g7t/the_most_elegant_lisp_dialect/", 
            "score": 8, 
            "selftext": "I was wondering the Lisp community's opinions of this, and the definition of \"elegant\" itself in one's eyes.", 
            "subreddit": "lisp", 
            "title": "The Most Elegant Lisp Dialect?", 
            "url": "https://www.reddit.com/r/lisp/comments/6y1g7t/the_most_elegant_lisp_dialect/"
        }, 
        {
            "author": "g000001", 
            "created_utc": 1504413240.0, 
            "domain": "sbcl.org", 
            "id": "6xr8os", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6xr8os/sbcl_1321_released/", 
            "score": 47, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "SBCL 1.3.21 released", 
            "url": "http://www.sbcl.org/all-news.html?1.3.21#1.3.21"
        }, 
        {
            "author": "kuwze", 
            "created_utc": 1504406809.0, 
            "domain": "en.wikipedia.org", 
            "id": "6xqr8y", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6xqr8y/canonical_sexpressions/", 
            "score": 16, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Canonical S-expressions", 
            "url": "https://en.wikipedia.org/wiki/Canonical_S-expressions"
        }, 
        {
            "author": "SlimeCloudBeta", 
            "created_utc": 1504403607.0, 
            "domain": "self.lisp", 
            "id": "6xqhyi", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6xqhyi/are_there_any_benefits_to_scheme_that_cl_doesnt/", 
            "score": 11, 
            "selftext": "I'm new to the Lisp family and I am really striving to look at both, but I don't care much for difficulty, more of effectiveness. So I wanted to see if both had any advantages or nice quirks the other doesn't have. Ideally, I want to make AI so, any Lisp derived dialect you could recommend that suits that, would be awesome. ", 
            "subreddit": "lisp", 
            "title": "Are there any benefits to Scheme that CL doesn't have, and vise versa?", 
            "url": "https://www.reddit.com/r/lisp/comments/6xqhyi/are_there_any_benefits_to_scheme_that_cl_doesnt/"
        }, 
        {
            "author": "kuwze", 
            "created_utc": 1504382972.0, 
            "domain": "self.lisp", 
            "id": "6xom57", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6xom57/what_emacs_packages_do_you_use_to_help_you_with/", 
            "score": 18, 
            "selftext": "I'm just curious about what customizations people are using for helping them program in Common Lisp.\n\nI currently use:\n\n* slime-company\n* ac-slime\n* slime-repl-ansi-color\n* paredit\n\nAlso what slime-contribs to people have? Mine right now is:\n\n    (setq slime-contribs '(slime-fancy slime-asdf slime-sbcl-exts slime-repl-ansi-color slime-company))\n\nI also found this setting for highlighting s-expressions/blocks of code to be quite useful:\n\n    (if (fboundp 'paren-set-mode)                                \n            (paren-set-mode 'sexp)\n        (defvar show-paren-style)\n        (setq show-paren-style 'expression)\n        (show-paren-mode t))\n\nAnd I have this function for clearing the REPL (which doesn't work unfortunately... I don't know how to fix it):\n\n    (add-hook 'slime-mode-hook\n          '(lambda()\n             (local-set-key (kbd \"C-l\") 'slime-repl-clear-buffer)))\n\nAnd this for jumping to the matching paren:\n\n    (defun goto-matching-paren ()\n      \"If point is sitting on a parenthetic character, jump to its match.\"\n      (interactive)\n      (cond ((looking-at \"\\\\s\\(\") (forward-list 1))\n            ((progn\n               (backward-char 1)\n               (looking-at \"\\\\s\\)\")) (forward-char 1) (backward-list 1))))\n    (define-key global-map (kbd \"C-.\") 'goto-matching-paren) \n\nedit: I recently realized I could highlight the s-expression that my cursor was in with [the highlight-sexp package](https://github.com/daimrod/highlight-sexp).\n\n    (use-package highlight-sexp\n      :load-path \"~/.emacs.d/bootleg/highlight-sexp\"\n      :config\n      (require 'highlight-sexp)\n      (add-hook 'lisp-mode-hook 'highlight-sexp-mode)\n      (add-hook 'emacs-lisp-mode-hook 'highlight-sexp-mode))", 
            "subreddit": "lisp", 
            "title": "What Emacs packages do you use to help you with programming Common Lisp?", 
            "url": "https://www.reddit.com/r/lisp/comments/6xom57/what_emacs_packages_do_you_use_to_help_you_with/"
        }, 
        {
            "author": "rajesh_jayaprakash", 
            "created_utc": 1504234851.0, 
            "domain": "self.lisp", 
            "id": "6xbus6", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6xbus6/plisp_tutorial_developing_an_object_system/", 
            "score": 12, 
            "selftext": "This [tutorial](https://github.com/shikantaza/pLisp/wiki/pLisp-Tutorial:-Developing-an-Object-System) is more language-oriented and less about pLisp features.  \n\nComments and suggestions welcome.  \n\nThanks,\n\nRajesh Jayaprakash", 
            "subreddit": "lisp", 
            "title": "pLisp Tutorial: Developing an Object System", 
            "url": "https://www.reddit.com/r/lisp/comments/6xbus6/plisp_tutorial_developing_an_object_system/"
        }
    ], 
    "subreddit_creation_utc": 1201271833.0, 
    "subscribers": 12063, 
    "title": "Lisp", 
    "title_word_count_occurrences": {
        "android": 2, 
        "emacs": 1, 
        "gnu": 1, 
        "html": 1, 
        "julia": 1, 
        "lisp": 32
    }, 
    "top_score_submissions": [
        {
            "author": "arvid", 
            "created_utc": 1506136628.0, 
            "domain": "gfycat.com", 
            "id": "71vyhc", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "description": "Watch Lecture 7A | MIT 6.001 Structure and Interpretation, 1986 GIF on Gfycat. Discover more lisp GIFs, programming GIFs, scheme GIFs on Gfycat", 
                    "height": 240, 
                    "html": "<iframe class=\"embedly-embed\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgfycat.com%2Fifr%2FDeepFluidKingsnake&url=https%3A%2F%2Fgfycat.com%2Fgifs%2Fdetail%2FDeepFluidKingsnake&image=https%3A%2F%2Fthumbs.gfycat.com%2FDeepFluidKingsnake-size_restricted.gif&key=522baf40bd3911e08d854040d3dc5c07&type=text%2Fhtml&schema=gfycat\" width=\"320\" height=\"240\" scrolling=\"no\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "gfycat", 
                    "provider_url": "http://gfycat.com", 
                    "thumbnail_height": 251, 
                    "thumbnail_url": "https://thumbs.gfycat.com/DeepFluidKingsnake-size_restricted.gif", 
                    "thumbnail_width": 334, 
                    "title": "Lecture 7A | MIT 6.001 Structure and Interpretation, 1986 - Create, Discover and Share Awesome GIFs on Gfycat", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 320
                }, 
                "type": "gfycat.com"
            }, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/71vyhc/lecture_7a_mit_6001_structure_and_interpretation/", 
            "score": 127, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Lecture 7A | MIT 6.001 Structure and Interpretation, 1986 GIF", 
            "url": "https://gfycat.com/DeepFluidKingsnake"
        }, 
        {
            "author": "g000001", 
            "created_utc": 1506798475.0, 
            "domain": "sbcl.org", 
            "id": "73gte4", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/73gte4/sbcl_140_released/", 
            "score": 81, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "SBCL 1.4.0 released", 
            "url": "http://www.sbcl.org/all-news.html?1.4.0#1.4.0"
        }, 
        {
            "author": "gabriel_laddel", 
            "created_utc": 1504871728.0, 
            "domain": "youtube.com", 
            "id": "6yuajg", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Dan Girshovich", 
                    "author_url": "https://www.youtube.com/user/DanGirsh", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/T1QlEJ-2Gho?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/T1QlEJ-2Gho/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Lisp Machine", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6yuajg/lisp_machine_rides_again/", 
            "score": 59, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Lisp machine rides again.", 
            "url": "https://www.youtube.com/watch?v=T1QlEJ-2Gho"
        }, 
        {
            "author": "g000001", 
            "created_utc": 1504413240.0, 
            "domain": "sbcl.org", 
            "id": "6xr8os", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/6xr8os/sbcl_1321_released/", 
            "score": 47, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "SBCL 1.3.21 released", 
            "url": "http://www.sbcl.org/all-news.html?1.3.21#1.3.21"
        }, 
        {
            "author": "king_cons", 
            "created_utc": 1505687633.0, 
            "domain": "blog.kingcons.io", 
            "id": "70qsbk", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/lisp/comments/70qsbk/going_faster_with_lisp/", 
            "score": 37, 
            "selftext": "", 
            "subreddit": "lisp", 
            "title": "Going Faster with Lisp", 
            "url": "http://blog.kingcons.io/posts/Going-Faster-with-Lisp.html"
        }
    ], 
    "total_submissions": 49, 
    "utc_of_data_collection_completion": "2017-10-17 18:46:19", 
    "utc_of_data_collection_start": "2017-10-17 18:46:19"
}