{
    "active_user_count": 335, 
    "advertiser_category": null, 
    "audience_target": "programming,technology", 
    "avg_comment_num_per_submission": 9, 
    "avg_submission_score": 16, 
    "collection_range_end_unix_timestamp": 1506816000, 
    "collection_range_end_utc": "2017-10-01 00:00:00", 
    "collection_range_start_unix_timestamp": 1504224000, 
    "collection_range_start_utc": "2017-09-01 00:00:00", 
    "description": "Please follow the [Go Community Code of Conduct](https://golang.org/conduct) while posting here. In short:\n\n* Treat everyone with respect and kindness.\n* Be thoughtful in how you communicate.\n* Don\u2019t be destructive or inflammatory.\n* If you encounter an issue, please contact the moderators.\n\n**Documentation**\n\n* [Official Go Documentation](http://golang.org/doc/)\n* [Standard Library Docs](http://golang.org/pkg/)\n* [Other Package Docs](http://godoc.org/)\n\n**Community**\n\n* [Go Nuts Mailing List](http://groups.google.com/group/golang-nuts)\n* [Go questions in Stackoverflow](http://stackoverflow.com/questions/tagged/go)\n* [Go in Google+](https://plus.google.com/101406623878176903605)\n* #go-nuts in irc.freenode.org\n* [Resources for new Go programmers](http://dave.cheney.net/resources-for-new-go-programmers)\n\n**Other Resources**\n\n* [Go for App Engine](https://developers.google.com/appengine/docs/go/)!", 
    "display_name": "golang", 
    "domain_occurrences": {
        "aahframework.org": 1, 
        "about.sourcegraph.com": 1, 
        "agiratech.com": 2, 
        "arslan.io": 1, 
        "awalterschulze.github.io": 1, 
        "aws.amazon.com": 1, 
        "big-elephants.com": 1, 
        "blog.chewxy.com": 2, 
        "blog.cloudflare.com": 1, 
        "blog.dgraph.io": 1, 
        "blog.dnsimple.com": 1, 
        "blog.errorhub.io": 1, 
        "blog.filippo.io": 1, 
        "blog.golang.org": 1, 
        "blog.jetbrains.com": 2, 
        "blog.learngoprogramming.com": 1, 
        "blog.merovius.de": 1, 
        "blog.minio.io": 1, 
        "blog.xiaoba.me": 1, 
        "caddyserver.com": 2, 
        "calhoun.io": 1, 
        "changelog.com": 1, 
        "clearlinux.org": 1, 
        "codementor.io": 2, 
        "commandcenter.blogspot.com": 1, 
        "corywalker.github.io": 1, 
        "emergencevector.com": 1, 
        "evilmartians.com": 1, 
        "foresthoffman.com": 1, 
        "forfuncsake.github.io": 1, 
        "gist.github.com": 2, 
        "github.com": 99, 
        "gnorm.org": 1, 
        "go-review.googlesource.com": 1, 
        "go.libhunt.com": 1, 
        "goc.vivint.com": 1, 
        "godoc.org": 2, 
        "gohugo.io": 1, 
        "golangbot.com": 2, 
        "golangprograms.com": 1, 
        "gonum.org": 1, 
        "greenlab.di.uminho.pt": 1, 
        "groups.google.com": 2, 
        "growthmetrics.io": 1, 
        "i.redd.it": 1, 
        "imgur.com": 2, 
        "improbable.io": 1, 
        "isitabird.mckeogh.tech": 1, 
        "jaxenter.com": 1, 
        "juicemia.com": 1, 
        "kinvolk.io": 1, 
        "lemire.me": 1, 
        "lukechampine.com": 1, 
        "mail.openjdk.java.net": 1, 
        "mappingthejourney.com": 1, 
        "matthias-endler.de": 1, 
        "medium.com": 20, 
        "mmcloughlin.com": 1, 
        "morpheusdata.com": 1, 
        "nextwavesolutions.io": 1, 
        "play.golang.org": 1, 
        "reddit.com": 1, 
        "sahilm.com": 1, 
        "scene-si.org": 2, 
        "segment.com": 1, 
        "self.golang": 149, 
        "sirkon.github.io": 1, 
        "sites.google.com": 1, 
        "slideshare.net": 1, 
        "sohlich.github.io": 1, 
        "speakerdeck.com": 2, 
        "stackoverflow.com": 2, 
        "steve.vinoski.net": 1, 
        "tech.gadventures.com": 1, 
        "transform.now.sh": 1, 
        "youtu.be": 3, 
        "youtube.com": 4
    }, 
    "id": "2rc7j", 
    "num_external_website_posts": 211, 
    "num_text_posts": 149, 
    "public_description": "Gophers of the world unite!", 
    "submissions": [
        {
            "author": "n00239", 
            "created_utc": 1506811682.0, 
            "domain": "github.com", 
            "id": "73i2pl", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73i2pl/run_own_speed_test_webserver_in_go_try_to/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Run own Speed Test webserver in Go. Try to download 8192 PB file with your browser", 
            "url": "https://github.com/mtojek/bigfiles"
        }, 
        {
            "author": "0xjnml", 
            "created_utc": 1506809171.0, 
            "domain": "github.com", 
            "id": "73huf8", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73huf8/map_supporting_noncomparable_key_types/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Map supporting non-comparable key types", 
            "url": "https://github.com/cznic/hash"
        }, 
        {
            "author": "tallnerd", 
            "created_utc": 1506807918.0, 
            "domain": "github.com", 
            "id": "73hq4v", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73hq4v/weekend_project_simple_spotify_command_line/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Weekend Project: Simple Spotify command line controller.", 
            "url": "https://github.com/mikejholly/spot"
        }, 
        {
            "author": "thedevsaddam", 
            "created_utc": 1506797443.0, 
            "domain": "medium.com", 
            "id": "73gps6", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73gps6/building_restful_api_service_in_go/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Building RESTful API service in Go!", 
            "url": "https://medium.com/@9aad07ab3890/85b1a6e176f3"
        }, 
        {
            "author": "Kistamushken", 
            "created_utc": 1506795971.0, 
            "domain": "self.golang", 
            "id": "73gk7k", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 31, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73gk7k/switching_career_to_go/", 
            "score": 60, 
            "selftext": "Hey there. Not sure that this is a right place, but I would be really grateful for your insights :)\n\nI've been in mobile development for about 4 years now, I've reached a certain level of seniority and currently, I am working in a unicorn. I would not say that I've become top-notch Android engineer, but definitely above average.\n\nThe thing is, I got bored. Android development just does not bring enough challenge for me, and, oh Lord, I am tired of UI. So I've been thinking about changing my field to server-side development, in particular, with Go.\n\nThe problem is, I have no idea how to execute the switch of the niches. I can learn Go(actually I am already pretty comfortable with it), but backend is so much more than just a language. What things should I look into, what kind of pet projects should I make?\n\nPerhaps, some of you have walked a similar path and I would love to hear from you.\n\nThanks!\n\nEDIT: Wow guys. I've never expected so much attention and help from you. The community is definitely one of the most beautiful things about Go :)", 
            "subreddit": "golang", 
            "title": "Switching career to Go.", 
            "url": "https://www.reddit.com/r/golang/comments/73gk7k/switching_career_to_go/"
        }, 
        {
            "author": "sbinet", 
            "created_utc": 1506795940.0, 
            "domain": "jaxenter.com", 
            "id": "73gk3l", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73gk3l/write_scientific_code_with_gonums_numeric/", 
            "score": 21, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Write scientific code with Gonum's numeric libraries for Go", 
            "url": "https://jaxenter.com/gonum-numeric-libraries-go-137530.html"
        }, 
        {
            "author": "sumobob2112", 
            "created_utc": 1506794514.0, 
            "domain": "self.golang", 
            "id": "73gf5j", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73gf5j/question_on_for_structure_with_no_loop/", 
            "score": 2, 
            "selftext": "Was looking through some examples from the google rpc library the other day and implemented a small rpc files server, I noticed this structure and wondered what was going on:\n\n\t\tfor {\n\t\t\tresponse, err := r.Recv()\n\t\t\tif err == io.EOF {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif err != nil {\n\t\t\t\tlog.Fatalf(\"could not greet: %v\", err)\n\t\t\t}\n\t\t\tdata := response.Image\n\t\t\tother := response.Type\n\t\t\tw.Header().Set(\"Content-Type\", http.DetectContentType(other))\n\t\t\tw.Write(data)\n\t\t}\n\t})\n\nThis code works just as well without the for loop and the break however. \n\nAny insight on why I would do something like this?\n\nEdit: If you'd like to take a look at the full code its available [here](https://github.com/RobAWilkinson/go-file-server)", 
            "subreddit": "golang", 
            "title": "Question on for structure with no loop", 
            "url": "https://www.reddit.com/r/golang/comments/73gf5j/question_on_for_structure_with_no_loop/"
        }, 
        {
            "author": "shovelpost", 
            "created_utc": 1506792035.0, 
            "domain": "youtu.be", 
            "id": "73g68p", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Strange Loop", 
                    "author_url": "https://www.youtube.com/channel/UC_QIfHvN9auy2CoOdSfMWDw", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/DJ4d_PZ6Gns?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/DJ4d_PZ6Gns/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "\"So You Wanna Go Fast?\" by Tyler Treat", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73g68p/so_you_wanna_go_fast_by_tyler_treat/", 
            "score": 51, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "\"So You Wanna Go Fast?\" by Tyler Treat", 
            "url": "https://youtu.be/DJ4d_PZ6Gns"
        }, 
        {
            "author": "golangprograms", 
            "created_utc": 1506791597.0, 
            "domain": "self.golang", 
            "id": "73g4pa", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73g4pa/10_new_algorithms_implemented_in_golang/", 
            "score": 7, 
            "selftext": "There can be many different approaches to find solutions of a problem, and each of the approaches can be named as algorithms. It is very important to do the analysis of algorithms in order to find the most efficient algorithm to solve the problem. An algorithm must have well-defined output. It must match the desired output. \n**Here is list of 10 new algorithms written in Golang:**\n\n* [Radix Sort](http://www.golangprograms.com/data-structure-and-algorithms/golang-program-for-implementation-of-radix-sort.html)\n* [Pancake Sort](http://www.golangprograms.com/data-structure-and-algorithms/golang-program-for-implementation-of-pancake-sort.html)\n* [Huffman Coding](http://www.golangprograms.com/data-structure-and-algorithms/golang-program-for-implementation-of-huffman-coding-algorithm.html)\n* [Draw Cuboid](http://www.golangprograms.com/data-structure-and-algorithms/golang-program-for-drawing-a-cuboid.html)\n* [Random Maze Generator](http://www.golangprograms.com/data-structure-and-algorithms/golang-program-for-implementation-of-random-maze-generator.html)\n* [ZigZag Matrix](http://www.golangprograms.com/data-structure-and-algorithms/golang-program-for-implementation-of-zigzag-matrix.html)\n* [Spiral Format](http://www.golangprograms.com/data-structure-and-algorithms/golang-program-to-print-a-matrix-in-spiral-form.html)\n* [AVL Tree](http://www.golangprograms.com/data-structure-and-algorithms/golang-program-for-implementation-of-avl-trees.html)\n* [String Permutations](http://www.golangprograms.com/data-structure-and-algorithms/golang-program-to-print-all-permutations-of-a-given-string.html)\n* [LZW Data Compression and Uncompression](http://www.golangprograms.com/data-structure-and-algorithms/golang-program-for-implementation-lzw-data-compression-and-uncompression.html)", 
            "subreddit": "golang", 
            "title": "10 new algorithms implemented in Golang", 
            "url": "https://www.reddit.com/r/golang/comments/73g4pa/10_new_algorithms_implemented_in_golang/"
        }, 
        {
            "author": "ssimunic", 
            "created_utc": 1506779515.0, 
            "domain": "github.com", 
            "id": "73f00i", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73f00i/gossm_server_status_monitor_written_in_go/", 
            "score": 21, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "gossm, server status monitor written in Go", 
            "url": "https://github.com/ssimunic/gossm"
        }, 
        {
            "author": "slowratatoskr", 
            "created_utc": 1506775789.0, 
            "domain": "self.golang", 
            "id": "73epv5", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73epv5/question_how_to_use_present_tool_over_https/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "[Question] How to use present tool over https", 
            "url": "https://www.reddit.com/r/golang/comments/73epv5/question_how_to_use_present_tool_over_https/"
        }, 
        {
            "author": "diegobernardes", 
            "created_utc": 1506769744.0, 
            "domain": "slideshare.net", 
            "id": "73ecf6", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Tyler Treat", 
                    "author_url": "https://www.slideshare.net/TylerTreat", 
                    "description": "Go's simplicity and concurrency model make it an appealing choice for backend systems, but how does it fare for latency-sensitive applications? In this talk, w...", 
                    "height": 500, 
                    "html": "<iframe class=\"embedly-embed\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.slideshare.net%2Fslideshow%2Fembed_code%2Fkey%2FzCZR9Z7tgkdAmh&url=https%3A%2F%2Fwww.slideshare.net%2FTylerTreat%2Fso-you-wanna-go-fast-80300458&image=https%3A%2F%2Fcdn.slidesharecdn.com%2Fss_thumbnails%2Fgofast-170929191746-thumbnail-4.jpg%3Fcb%3D1506712692&key=2aa3c4d5f3de4f5b9120b660ad850dc9&type=text%2Fhtml&schema=slideshare\" width=\"600\" height=\"500\" scrolling=\"no\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "SlideShare", 
                    "provider_url": "https://www.slideshare.net/", 
                    "thumbnail_height": 432, 
                    "thumbnail_url": "https://cdn.slidesharecdn.com/ss_thumbnails/gofast-170929191746-thumbnail-4.jpg?cb=1506712692", 
                    "thumbnail_width": 768, 
                    "title": "So You Wanna Go Fast?", 
                    "type": "rich", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "slideshare.net"
            }, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73ecf6/so_you_wanna_go_fast_tyler_treat/", 
            "score": 7, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "So You Wanna Go Fast? - Tyler Treat", 
            "url": "https://www.slideshare.net/TylerTreat/so-you-wanna-go-fast-80300458"
        }, 
        {
            "author": "Amr_Alfoly", 
            "created_utc": 1506742649.0, 
            "domain": "self.golang", 
            "id": "73csoj", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73csoj/using_chromedp_how_can_i_check_if_an_element_is/", 
            "score": 1, 
            "selftext": "i used to do that with python and selenium\nuser = browser.find_element_by_css_selector(user_input)\nthis gives me a pointer to the element or nil value , which i can check to see if the element is there\nbut how can i do that with chromedp", 
            "subreddit": "golang", 
            "title": "Using chromedp , how can i check if an element is present on the page?", 
            "url": "https://www.reddit.com/r/golang/comments/73csoj/using_chromedp_how_can_i_check_if_an_element_is/"
        }, 
        {
            "author": "nextwavesolutionsllc", 
            "created_utc": 1506727125.0, 
            "domain": "nextwavesolutions.io", 
            "id": "73bj5e", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/73bj5e/containerizing_a_go_webserver_howto/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Containerizing a Go webserver | How-to", 
            "url": "https://nextwavesolutions.io/post/containgo/"
        }, 
        {
            "author": "dlsniper", 
            "created_utc": 1506709399.0, 
            "domain": "groups.google.com", 
            "id": "739p9n", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/739p9n/security_go_184_and_go_191_preannouncement/", 
            "score": 42, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "[security] Go 1.8.4 and Go 1.9.1 pre-announcement", 
            "url": "https://groups.google.com/forum/#!topic/golang-announce/Aqam2y8QoLA"
        }, 
        {
            "author": "shovelpost", 
            "created_utc": 1506705891.0, 
            "domain": "i.redd.it", 
            "id": "739bgd", 
            "is_reddit_media_domain": true, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 33, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/739bgd/a_gopher_powered_light_bulb/", 
            "score": 168, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A gopher powered light bulb!", 
            "url": "https://i.redd.it/w40yalbewuoz.png"
        }, 
        {
            "author": "penialman", 
            "created_utc": 1506705459.0, 
            "domain": "medium.com", 
            "id": "7399ox", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7399ox/learn_how_to_code_googles_go_golang_programming/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Learn How To Code: Google's Go (golang) Programming Language", 
            "url": "https://medium.com/@jamestasha/learn-programming-from-a-university-professor-in-computer-science-with-over-15-years-of-teaching-860f6525b324"
        }, 
        {
            "author": "gboxy", 
            "created_utc": 1506693556.0, 
            "domain": "self.golang", 
            "id": "737yg8", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/737yg8/when_and_where_to_use_function_with_multiple/", 
            "score": 0, 
            "selftext": "1- When and where to use Function with Multiple Returning Values?\n\n2- Please correct my program:\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\n    var c = []int setNumbers(5, 6)\n\n    fmt.Println(c)\n\n}\n\n\nfunc setNumbers(a , b int) int {\n\n    return a, b\n\n}", 
            "subreddit": "golang", 
            "title": "When and where to use Function with Multiple Returning Values?", 
            "url": "https://www.reddit.com/r/golang/comments/737yg8/when_and_where_to_use_function_with_multiple/"
        }, 
        {
            "author": "timakin", 
            "created_utc": 1506688564.0, 
            "domain": "speakerdeck.com", 
            "id": "737i4w", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Seiji Takahashi", 
                    "author_url": "https://speakerdeck.com/timakin", 
                    "description": "The presentation slides on golang.tokyo#9 by @__timakin__", 
                    "height": 513, 
                    "html": "<iframe class=\"embedly-embed\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fspeakerdeck.com%2Fplayer%2Fadd080c8e291447ba32c06545b1fdb4c&url=https%3A%2F%2Fspeakerdeck.com%2Ftimakin%2Fchallenge-to-advanced-api-architecture-in-go&image=https%3A%2F%2Fspeakerd.s3.amazonaws.com%2Fpresentations%2Fadd080c8e291447ba32c06545b1fdb4c%2Fslide_0.jpg&key=522baf40bd3911e08d854040d3dc5c07&type=text%2Fhtml&schema=speakerdeck\" width=\"600\" height=\"513\" scrolling=\"no\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "Speaker Deck", 
                    "provider_url": "https://speakerdeck.com/", 
                    "thumbnail_height": 768, 
                    "thumbnail_url": "https://speakerd.s3.amazonaws.com/presentations/add080c8e291447ba32c06545b1fdb4c/slide_0.jpg", 
                    "thumbnail_width": 1024, 
                    "title": "Challenge to Advanced API Architecture in Go", 
                    "type": "rich", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "speakerdeck.com"
            }, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/737i4w/challenge_to_advanced_api_architecture_in_go/", 
            "score": 8, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Challenge to Advanced API Architecture in Go", 
            "url": "https://speakerdeck.com/timakin/challenge-to-advanced-api-architecture-in-go"
        }, 
        {
            "author": "blackflicker", 
            "created_utc": 1506685608.0, 
            "domain": "blog.learngoprogramming.com", 
            "id": "737a18", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/737a18/code_organization_tips_with_go_packages/", 
            "score": 33, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Code organization tips with Go packages", 
            "url": "https://blog.learngoprogramming.com/code-organization-tips-with-packages-d30de0d11f46"
        }, 
        {
            "author": "habarnam", 
            "created_utc": 1506681718.0, 
            "domain": "self.golang", 
            "id": "7370e6", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7370e6/code_coverage_exclude_code/", 
            "score": 1, 
            "selftext": "Hi everyone,\n\nI have a project where a big part of its logic is found in a generated go file: I'm using ragel to generate a parsing state machine.\n\nI want to test the project and generate code coverage statistics for the package this is included in, but at the same time I want to ignore the thousands lines of generated code from the count. \n\nOn stackoverflow I found a suggestion to use `//+build !test` build tag. Unfortunately this doesn't work, I need the file to be included in the tests, just not counted in code coverage.\n\nDid anyone have a similar issue and found a solution?", 
            "subreddit": "golang", 
            "title": "Code coverage exclude code", 
            "url": "https://www.reddit.com/r/golang/comments/7370e6/code_coverage_exclude_code/"
        }, 
        {
            "author": "Jinzhu", 
            "created_utc": 1506658566.0, 
            "domain": "github.com", 
            "id": "735iuw", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/735iuw/qor_auth_golang_authentication_solution/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "QOR Auth - Golang Authentication solution", 
            "url": "https://github.com/qor/auth"
        }, 
        {
            "author": "erichcm", 
            "created_utc": 1506650867.0, 
            "domain": "self.golang", 
            "id": "734v5c", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/734v5c/do_you_know_projects_that_are_compiles_as_shared/", 
            "score": 4, 
            "selftext": "I\u2019m considering Go for a new project that is supposed to be usted by other languages. So, the solution seems to be to create a shared library (Linux only).\n\nI know this can be done with cgo, but I would like to see a real project that uses the same model. \n\nDoes anyone knows about a project that is used as a shared library?", 
            "subreddit": "golang", 
            "title": "Do you know projects that are compiles as shared libraries?", 
            "url": "https://www.reddit.com/r/golang/comments/734v5c/do_you_know_projects_that_are_compiles_as_shared/"
        }, 
        {
            "author": "wrexer", 
            "created_utc": 1506647726.0, 
            "domain": "awalterschulze.github.io", 
            "id": "734kp8", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 19, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/734kp8/monads_for_go_programmers/", 
            "score": 27, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Monads for Go Programmers", 
            "url": "https://awalterschulze.github.io/blog/post/monads-for-goprogrammers/"
        }, 
        {
            "author": "stanislavb", 
            "created_utc": 1506646688.0, 
            "domain": "changelog.com", 
            "id": "734h8h", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/734h8h/aaron_schlesinger_on_go_in_5_minutes_and_design/", 
            "score": 15, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Aaron Schlesinger on Go in 5 Minutes and Design Patterns", 
            "url": "https://changelog.com/gotime/18"
        }, 
        {
            "author": "xbooing", 
            "created_utc": 1506644213.0, 
            "domain": "self.golang", 
            "id": "7348wd", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7348wd/best_way_to_set_go_macros/", 
            "score": 0, 
            "selftext": "Hello, fellow gophers.\n\nAs I have been programming in golang, the main issue I have found with the language, other than sometimes subpar speed, is that a lot of the code is repetitive. For example, what is just a protected call or try block in other languages is in Go a block followed by checking the err and lots of branched conditions as a result that messes up my overall structure.\n\nAlthough I cannot fix or affect the first issue, I am doing my best to give the language a decent chance by having macros to input some of the various repeated snippets such as \"if err != nil { x }\", leaving my cursor at x. Then I can have a configuration so only x is visible with some comment at the end.\n\nMy main issue is that this feels kind of clunky. I am an experienced programmer in a multitude of other languages (JS,LUA,C++,Haskell) so in my efforts to be more productive I've taken it as a reasonable precondition that it is not my style causing these issues.\n\nBased on this, I'd like to ask other experienced devs on how they've handled some of these shortcomings of the language. I get that it is new, but I really feel as though industry has moved a bit too hastily to it, personally indirectly causing my job to require me to learn it.\n\nWe are developing a login server for our tool and it feels like I am just rewriting it in \"minimally expressionate\" C which constantly checks things that are pretty obviously a fixed value.\n\nSo for those who actually use this language by choice, what's the trick? Or are most in the same boat as me?", 
            "subreddit": "golang", 
            "title": "Best way to set Go macros?", 
            "url": "https://www.reddit.com/r/golang/comments/7348wd/best_way_to_set_go_macros/"
        }, 
        {
            "author": "mmcloughlin", 
            "created_utc": 1506633351.0, 
            "domain": "mmcloughlin.com", 
            "id": "7335yi", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7335yi/your_pprof_is_showing_ipv4_scans_reveal_exposed/", 
            "score": 63, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Your pprof is showing: IPv4 scans reveal exposed net/http/pprof endpoints", 
            "url": "http://mmcloughlin.com/posts/your-pprof-is-showing"
        }, 
        {
            "author": "dlsniper", 
            "created_utc": 1506611867.0, 
            "domain": "blog.jetbrains.com", 
            "id": "730r06", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/730r06/gogland_eap_15_more_inspections_and_better/", 
            "score": 28, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Gogland EAP 15: more inspections and better performance", 
            "url": "https://blog.jetbrains.com/go/2017/09/28/gogland-eap-15-inspections-intentions-performance-intellij-2017-3-and-more/"
        }, 
        {
            "author": "3150", 
            "created_utc": 1506608556.0, 
            "domain": "github.com", 
            "id": "730e7i", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 27, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/730e7i/enry_a_faster_file_programming_language_detector/", 
            "score": 29, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Enry: a faster file programming language detector written in Go", 
            "url": "https://github.com/src-d/enry"
        }, 
        {
            "author": "fdelorme", 
            "created_utc": 1506598659.0, 
            "domain": "github.com", 
            "id": "72zi6t", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72zi6t/gophersat_a_sat_solver_written_in_pure_go/", 
            "score": 11, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Gophersat, a SAT solver written in pure Go", 
            "url": "https://github.com/crillab/gophersat"
        }, 
        {
            "author": "alexcrownus", 
            "created_utc": 1506555841.0, 
            "domain": "mail.openjdk.java.net", 
            "id": "72wamd", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72wamd/java_to_get_coroutines/", 
            "score": 14, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Java to get coroutines", 
            "url": "http://mail.openjdk.java.net/pipermail/discuss/2017-September/004390.html"
        }, 
        {
            "author": "calebisstupid", 
            "created_utc": 1506541683.0, 
            "domain": "self.golang", 
            "id": "72ut2b", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72ut2b/trouble_with_getting_command_line_goimports/", 
            "score": 1, 
            "selftext": "I am brand new to go, coming from mobile app development (android/ios).\n\nI have set up a pretty standard go environment, using default path variables and have verified go works with some simple hello world examples.\n\nI am learning about goimports now and went to run it, but I got command not found. I ran \"go get golang.org/x/tools/cmd/goimports\" to get it, which appears to execute correctly, but no matter what I do I keep getting \"command not found\".\n\nThis is probably a total newb question, but I've spent over an hour going down rabbit hole after rabbit hole trying to find out what is going wrong here.", 
            "subreddit": "golang", 
            "title": "Trouble with getting command line \"goimports\" working.", 
            "url": "https://www.reddit.com/r/golang/comments/72ut2b/trouble_with_getting_command_line_goimports/"
        }, 
        {
            "author": "nikajon_es", 
            "created_utc": 1506540309.0, 
            "domain": "github.com", 
            "id": "72undv", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72undv/a_small_go_program_that_will_read_pem_files_and/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A small go program that will read .pem files and output info on all the PEM blocks.", 
            "url": "https://github.com/njones/pbr"
        }, 
        {
            "author": "movlex", 
            "created_utc": 1506538093.0, 
            "domain": "github.com", 
            "id": "72ue7r", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72ue7r/desprite_split_a_sprite_image_by_css_usage/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Desprite - split a sprite image by CSS usage", 
            "url": "https://github.com/fmovlex/desprite"
        }, 
        {
            "author": "marksteve4", 
            "created_utc": 1506533710.0, 
            "domain": "self.golang", 
            "id": "72tvuq", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72tvuq/why_using_expvar_is_beneficial/", 
            "score": 1, 
            "selftext": "I read the doc and know expvar provides interface for global variables. But I don't understand the design purpose for this pkg. Need some expert opnion on this", 
            "subreddit": "golang", 
            "title": "why using expvar is beneficial?", 
            "url": "https://www.reddit.com/r/golang/comments/72tvuq/why_using_expvar_is_beneficial/"
        }, 
        {
            "author": "_lost_in_", 
            "created_utc": 1506533507.0, 
            "domain": "github.com", 
            "id": "72tv1n", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72tv1n/i_made_a_makefile_and_instructions_to_compile_go/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "I made a Makefile and instructions to compile Go programs to work with a DD-WRT router (requiring mip32 with FPU support)", 
            "url": "https://github.com/lostinblue/go-makefile-dd-wrt"
        }, 
        {
            "author": "qu33ksilver", 
            "created_utc": 1506531542.0, 
            "domain": "github.com", 
            "id": "72tmqi", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72tmqi/eliminate_gomaxprocs_limit_has_just_been/", 
            "score": 48, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "\"eliminate GOMAXPROCS limit\" has just been committed to the master branch.", 
            "url": "https://github.com/golang/go/commit/ee55000f6c45d2f5c38d91679def933fdf27c029"
        }, 
        {
            "author": "JUNneiluj", 
            "created_utc": 1506531285.0, 
            "domain": "github.com", 
            "id": "72tlpi", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72tlpi/orbit_v20_a_simple_tool_for_running_commands_and/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Orbit v2.0 - A simple tool for running commands and generating files from templates", 
            "url": "https://github.com/gulien/orbit/tree/v2.0.0"
        }, 
        {
            "author": "overcyn2", 
            "created_utc": 1506530092.0, 
            "domain": "github.com", 
            "id": "72tgte", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 23, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72tgte/matcha_build_ios_and_android_apps_in_go/", 
            "score": 107, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Matcha, build iOS and Android apps in Go", 
            "url": "https://github.com/gomatcha/matcha"
        }, 
        {
            "author": "yTakkar", 
            "created_utc": 1506528334.0, 
            "domain": "github.com", 
            "id": "72t9g1", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72t9g1/heyy_guys_check_out_the_minisocialnetwork_i/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Heyy guys, check out the mini-social-network I created!! Thnx in advance!!", 
            "url": "https://github.com/yTakkar/Go-Mini-Social-Network"
        }, 
        {
            "author": "titpetric", 
            "created_utc": 1506525341.0, 
            "domain": "scene-si.org", 
            "id": "72sx70", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72sx70/things_to_know_about_http_in_go_tit_petric/", 
            "score": 53, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Things to know about HTTP in Go - Tit Petric", 
            "url": "https://scene-si.org/2017/09/27/things-to-know-about-http-in-go/"
        }, 
        {
            "author": "dc0d", 
            "created_utc": 1506502603.0, 
            "domain": "steve.vinoski.net", 
            "id": "72r0uy", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 16, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72r0uy/convenience_over_correctness_the_fallacies_of_rpc/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Convenience Over Correctness, the fallacies of RPC", 
            "url": "http://steve.vinoski.net/pdf/IEEE-Convenience_Over_Correctness.pdf"
        }, 
        {
            "author": "cmwslw", 
            "created_utc": 1506498452.0, 
            "domain": "corywalker.github.io", 
            "id": "72qsbh", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72qsbh/expreduce_03_a_free_mathematicacompatible_cas/", 
            "score": 39, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Expreduce 0.3, a free Mathematica-compatible CAS written in Go, now with improved integration and other features", 
            "url": "https://corywalker.github.io/expreduce-docs/"
        }, 
        {
            "author": "thedevsaddam", 
            "created_utc": 1506495273.0, 
            "domain": "medium.com", 
            "id": "72ql98", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72ql98/simple_note_on_defer_panic_and_recover/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Simple note on defer, panic and recover", 
            "url": "https://medium.com/@thedevsaddam/go-101-defer-panic-and-recover-65a40ee7dcb4"
        }, 
        {
            "author": "averagesecurityguy", 
            "created_utc": 1506483640.0, 
            "domain": "github.com", 
            "id": "72pr4i", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72pr4i/go_library_for_doing_cryptanalysis/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go library for doing cryptanalysis.", 
            "url": "https://github.com/averagesecurityguy/cryptanalysis"
        }, 
        {
            "author": "elagergren", 
            "created_utc": 1506482750.0, 
            "domain": "github.com", 
            "id": "72poia", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72poia/arbitrary_precision_decimal_library_decimal_v10/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Arbitrary precision decimal library (decimal) v1.0", 
            "url": "https://github.com/ericlagergren/decimal"
        }, 
        {
            "author": "BlaqkAngel", 
            "created_utc": 1506481231.0, 
            "domain": "lukechampine.com", 
            "id": "72pjsu", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72pjsu/hacking_a_programming_competition_with_side/", 
            "score": 18, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Hacking a Programming Competition with Side Channels", 
            "url": "http://lukechampine.com/progcomp.html"
        }, 
        {
            "author": "ackleymi", 
            "created_utc": 1506477952.0, 
            "domain": "github.com", 
            "id": "72p94u", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72p94u/qtrn_stock_market_cli_tool_for_viewing_and/", 
            "score": 13, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Qtrn - stock market cli tool for viewing and downloading quote data", 
            "url": "https://github.com/FlashBoys/qtrn"
        }, 
        {
            "author": "sakutz", 
            "created_utc": 1506477776.0, 
            "domain": "github.com", 
            "id": "72p8jz", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72p8jz/hello_goodbye_a_simple_lib_for_running_code_when/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Hello Goodbye, a simple lib for running code when a program exits", 
            "url": "https://github.com/TheCodeTeam/goodbye"
        }, 
        {
            "author": "tamalsaha", 
            "created_utc": 1506471308.0, 
            "domain": "github.com", 
            "id": "72omf7", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72omf7/appscodegonotify_unified_client_to_send/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "appscode/go-notify - Unified client to send notification via Email, SMS, Chat etc.", 
            "url": "https://github.com/appscode/go-notify"
        }, 
        {
            "author": "icholy", 
            "created_utc": 1506470969.0, 
            "domain": "github.com", 
            "id": "72ol43", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72ol43/r2i_steal_content_from_reddit_and_post_it_on/", 
            "score": 14, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "r2i: Steal content from Reddit and post it on Instagram (let the downvotes begin).", 
            "url": "https://github.com/icholy/r2i_bot"
        }, 
        {
            "author": "wemgl", 
            "created_utc": 1506457876.0, 
            "domain": "self.golang", 
            "id": "72n7tj", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 22, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72n7tj/go_get_a_job/", 
            "score": 3, 
            "selftext": "Has anyone here done an interview for any companies that used Go? If so, was it the typical algorithm and data structures questions or were the interview questions Go specific? What was your experience like. I'm assuming your experiences might be the typical kind, but there's an association of DevOps with Go that might restrict some job opportunities.", 
            "subreddit": "golang", 
            "title": "Go Get a Job", 
            "url": "https://www.reddit.com/r/golang/comments/72n7tj/go_get_a_job/"
        }, 
        {
            "author": "palicao", 
            "created_utc": 1506455058.0, 
            "domain": "self.golang", 
            "id": "72mw73", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72mw73/docker_executor/", 
            "score": 2, 
            "selftext": "Docker lacks the native ability of scheduling one-shot jobs. This project written in go aims to solve this problem.\nYou can run your one-shot jobs either as simple containers or in a swarm. Jobs can be scheduled with a cron syntax or can be exposed through an API.\nThe project is still in pre-pre-alpha and should not be used in production! Feedback and contributions are highly appreciated!\n\nhttps://github.com/palicao/docker-executor\n\n", 
            "subreddit": "golang", 
            "title": "Docker Executor", 
            "url": "https://www.reddit.com/r/golang/comments/72mw73/docker_executor/"
        }, 
        {
            "author": "dheerendra14", 
            "created_utc": 1506451149.0, 
            "domain": "github.com", 
            "id": "72mfm1", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72mfm1/my_implementation_of_ray_tracing_in_one_weekend/", 
            "score": 42, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "My implementation of Ray Tracing in One Weekend in Go with distributed rendering", 
            "url": "https://github.com/DheerendraRathor/GoTracer"
        }, 
        {
            "author": "monirz", 
            "created_utc": 1506447474.0, 
            "domain": "github.com", 
            "id": "72m06l", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72m06l/a_simple_http_router_created_while_experimenting/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A simple HTTP router created while experimenting with other golang http routers.", 
            "url": "https://github.com/monirz/track"
        }, 
        {
            "author": "bestfoodnearme", 
            "created_utc": 1506433372.0, 
            "domain": "self.golang", 
            "id": "72ketz", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72ketz/reading_exif_orientation_data/", 
            "score": 1, 
            "selftext": "Is there a go library that can read the orientation data from images taken with a phone?", 
            "subreddit": "golang", 
            "title": "Reading Exif orientation data?", 
            "url": "https://www.reddit.com/r/golang/comments/72ketz/reading_exif_orientation_data/"
        }, 
        {
            "author": "blackflicker", 
            "created_utc": 1506428037.0, 
            "domain": "medium.com", 
            "id": "72jxd3", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72jxd3/definitive_guide_to_go_packages_focus_on_the/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Definitive Guide to Go Packages - Focus on the fundamentals to improve your skills.", 
            "url": "https://medium.com/im-learning-go-golang/definitive-guide-to-go-packages-focus-on-the-fundamentals-to-empower-your-skills-d14aae7cd321?source=collection_home---5------0----------------"
        }, 
        {
            "author": "yaroslavm", 
            "created_utc": 1506423147.0, 
            "domain": "evilmartians.com", 
            "id": "72jju4", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 47, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72jju4/introducing_imgproxy_a_go_server_for_lightning/", 
            "score": 115, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Introducing imgproxy, a Go server for lightning fast and secure image resizing. Tiny footprint, protection from image bombs.", 
            "url": "https://evilmartians.com/chronicles/introducing-imgproxy"
        }, 
        {
            "author": "Bappedekkel", 
            "created_utc": 1506420840.0, 
            "domain": "emergencevector.com", 
            "id": "72jeew", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72jeew/emergence_vector_a_game_in_go_webrtc_and_js/", 
            "score": 21, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Emergence Vector: a game in Go, Webrtc and JS", 
            "url": "https://www.emergencevector.com/"
        }, 
        {
            "author": "AgiraTechnologies", 
            "created_utc": 1506409409.0, 
            "domain": "agiratech.com", 
            "id": "72ip95", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72ip95/building_high_performance_apis_in_go_using_grpc/", 
            "score": 7, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Building High Performance APIs In Go Using gRPC", 
            "url": "http://www.agiratech.com/building-high-performance-apis-go-grpc/"
        }, 
        {
            "author": "campoy", 
            "created_utc": 1506402584.0, 
            "domain": "youtu.be", 
            "id": "72i8gk", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "JustForFunc: Programming in Go", 
                    "author_url": "https://www.youtube.com/channel/UC_BzFbxG2za3bp5NRRRXJSw", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/SWKuYLqouIY?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/SWKuYLqouIY/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "justforfunc #20: code reviewing ursho (part 1)", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72i8gk/justforfunc_20_code_reviewing_ursho_part_1/", 
            "score": 35, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "justforfunc #20: code reviewing ursho (part 1)", 
            "url": "https://youtu.be/SWKuYLqouIY"
        }, 
        {
            "author": "delta_skelta", 
            "created_utc": 1506393791.0, 
            "domain": "github.com", 
            "id": "72hi8q", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72hi8q/dockeralertd_lightweight_alert_daemon_for_docker/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "docker-alertd - lightweight alert daemon for docker [now with slack alerts]", 
            "url": "https://github.com/deltaskelta/docker-alertd"
        }, 
        {
            "author": "titpetric", 
            "created_utc": 1506371604.0, 
            "domain": "blog.errorhub.io", 
            "id": "72f9u9", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72f9u9/looking_for_sponsorssupporters_errorhub_the_error/", 
            "score": 12, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Looking for sponsors/supporters - ErrorHub, the error tracker written in Go", 
            "url": "https://blog.errorhub.io/"
        }, 
        {
            "author": "jeevatkm", 
            "created_utc": 1506368692.0, 
            "domain": "github.com", 
            "id": "72exs3", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72exs3/goresty_v10_released/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "go-resty v1.0 released!", 
            "url": "https://github.com/go-resty/resty"
        }, 
        {
            "author": "sjkaliski", 
            "created_utc": 1506367886.0, 
            "domain": "github.com", 
            "id": "72euha", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72euha/abide_a_testing_utility_for_apis/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "abide: A testing utility for APIs", 
            "url": "https://github.com/beme/abide"
        }, 
        {
            "author": "drink_with_me_to_day", 
            "created_utc": 1506367546.0, 
            "domain": "self.golang", 
            "id": "72et0y", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 20, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72et0y/inmemory_columnstore_database/", 
            "score": 1, 
            "selftext": "Is there any in-memory column-store in Go?\n\nI want to set my de-normalized data in a in-memory cache/db, but I have varying columns.\n\nSo if I have an EAV table, I'll just transform it to a column-variable cache to speed up queries (mainly sums, multiplications and grouping). \n\nI thought about using Cassandra, but it's a bit too much to setup, and the application isn't that big right now, and just deploying one Go app is better.\n\nEven if not in-memory, as long as it's column-store and embedable .", 
            "subreddit": "golang", 
            "title": "In-memory column-store database", 
            "url": "https://www.reddit.com/r/golang/comments/72et0y/inmemory_columnstore_database/"
        }, 
        {
            "author": "digitalcraftsman_", 
            "created_utc": 1506360642.0, 
            "domain": "github.com", 
            "id": "72e05k", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72e05k/hugo_v028_has_been_released_now_with_native/", 
            "score": 117, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Hugo v0.28 has been released - now with native syntax highlighting", 
            "url": "https://github.com/gohugoio/hugo/releases/tag/v0.28"
        }, 
        {
            "author": "2fplus1", 
            "created_utc": 1506333944.0, 
            "domain": "github.com", 
            "id": "72bgkm", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/72bgkm/thraxilsamlare_collect_data_from_expvar_endpoints/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "thraxil/samlare: collect data from expvar endpoints and submit to graphite", 
            "url": "https://github.com/thraxil/samlare/"
        }, 
        {
            "author": "delta_skelta", 
            "created_utc": 1506306760.0, 
            "domain": "github.com", 
            "id": "729nhd", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/729nhd/github_cli_readme_viewer/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "github CLI readme viewer", 
            "url": "https://github.com/deltaskelta/readme"
        }, 
        {
            "author": "jtolds", 
            "created_utc": 1506302255.0, 
            "domain": "godoc.org", 
            "id": "7299om", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7299om/qod_easy_commandline_file_processing_library_to/", 
            "score": 21, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "qod: Easy commandline file processing library to make throwaway scripts better.", 
            "url": "https://godoc.org/github.com/jtolds/qod"
        }, 
        {
            "author": "yonatannn", 
            "created_utc": 1506280424.0, 
            "domain": "self.golang", 
            "id": "7272om", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7272om/jenkins_testing_with_multiple_containers/", 
            "score": 6, 
            "selftext": "Typically we have an app that consitutes multiple Docker containers (service A, service B, Redis, Postgre, etc), how would you instanitate this environment and execute testing during a Jenkins build? e.g. simply run docker-compose within the Jenkins master? \n\nany tips on testing over a dockerzied Jenkins will be appreciated", 
            "subreddit": "golang", 
            "title": "Jenkins testing with multiple containers", 
            "url": "https://www.reddit.com/r/golang/comments/7272om/jenkins_testing_with_multiple_containers/"
        }, 
        {
            "author": "0xjnml", 
            "created_utc": 1506266661.0, 
            "domain": "play.golang.org", 
            "id": "725mji", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/725mji/jff_a_proofofconcept_term_rewriting_system_with/", 
            "score": 57, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "JFF: A proof-of-concept term rewriting system with automatic memoization evaluates recursivelly defined fib(30) in ~60 microseconds", 
            "url": "https://play.golang.org/p/h0eNl3tjyG"
        }, 
        {
            "author": "eyalpost", 
            "created_utc": 1506260046.0, 
            "domain": "self.golang", 
            "id": "7251w0", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7251w0/sql_db_profiling/", 
            "score": 15, 
            "selftext": "I'd like to add some logging\\stats to all our DB calls and was wondering if there's an easy way to do it?\nI was hoping I could write my own driver and somehow \"wrap\" the original (mySql or Postgres) driver, redirecting calls and keeping some stats but the `drivers` hash is private in the database\\sql package. Any other ideas?", 
            "subreddit": "golang", 
            "title": "sql DB profiling", 
            "url": "https://www.reddit.com/r/golang/comments/7251w0/sql_db_profiling/"
        }, 
        {
            "author": "_achiku", 
            "created_utc": 1506249250.0, 
            "domain": "github.com", 
            "id": "724czp", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/724czp/generate_plantuml_er_diagram_textual_description/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Generate PlantUML ER diagram textual description from PostgreSQL tables", 
            "url": "https://github.com/achiku/planter"
        }, 
        {
            "author": "princdarknes", 
            "created_utc": 1506230270.0, 
            "domain": "imgur.com", 
            "id": "723bve", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/723bve/where_can_i_find_intro_work_in_golang/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Where can I find intro work in golang?", 
            "url": "https://imgur.com/X9Dx88L"
        }, 
        {
            "author": "igknighted", 
            "created_utc": 1506196114.0, 
            "domain": "self.golang", 
            "id": "720gux", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/720gux/any_distros_providing_a_packages_llgo/", 
            "score": 3, 
            "selftext": "Waited an hour for compiling llvm-go to find out that llgo is what I needed to make llvm bc with llgo. Went to compile logo and found the instructions are suboptimal.  \n  \nAny one know of and distro I can just get it on in a package? I'm just going to have to setup a build environment in docker.  \n  \nUltimately I'm trying to just expose an API in JavaScript that includes some CGO imports. I really don't want to maintain multiple code bases if I can avoid it.  \n  \nSide note: I did see an existing docker image, but it's already dated. Looking to be in the lastest and greatest.", 
            "subreddit": "golang", 
            "title": "Any distros providing a packages llgo?", 
            "url": "https://www.reddit.com/r/golang/comments/720gux/any_distros_providing_a_packages_llgo/"
        }, 
        {
            "author": "daenney", 
            "created_utc": 1506189036.0, 
            "domain": "github.com", 
            "id": "71zr48", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71zr48/patricia_garbage_collectorsensitive_patricia_tree/", 
            "score": 28, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Patricia: Garbage collector-sensitive patricia tree for IP/CIDR tagging", 
            "url": "https://github.com/Kentik/patricia"
        }, 
        {
            "author": "pmz", 
            "created_utc": 1506186962.0, 
            "domain": "speakerdeck.com", 
            "id": "71zjl1", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Achilleas Anagnostopoulos", 
                    "author_url": "https://speakerdeck.com/achilleasa", 
                    "description": "Slides for my GolangUK '17 talk. Abstract: Go is a great language for building server applications but can you use it to write an OS kernel? Let's talk about the challenges involved in writing, compiling and linking Go code that runs in Ring-0 and code a simple \"Hello World\" demo.", 
                    "height": 401, 
                    "html": "<iframe class=\"embedly-embed\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fspeakerdeck.com%2Fplayer%2F4bb5ddae0915481c97fd0cbc5e774a89&url=https%3A%2F%2Fspeakerdeck.com%2Fachilleasa%2Fbare-metal-gophers-can-you-write-an-os-kernel-in-go&image=https%3A%2F%2Fspeakerd.s3.amazonaws.com%2Fpresentations%2F4bb5ddae0915481c97fd0cbc5e774a89%2Fslide_0.jpg&key=522baf40bd3911e08d854040d3dc5c07&type=text%2Fhtml&schema=speakerdeck\" width=\"600\" height=\"401\" scrolling=\"no\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "Speaker Deck", 
                    "provider_url": "https://speakerdeck.com/", 
                    "thumbnail_height": 576, 
                    "thumbnail_url": "https://speakerd.s3.amazonaws.com/presentations/4bb5ddae0915481c97fd0cbc5e774a89/slide_0.jpg", 
                    "thumbnail_width": 1024, 
                    "title": "Bare Metal Gophers: can you write an OS Kernel in Go?", 
                    "type": "rich", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "speakerdeck.com"
            }, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71zjl1/bare_metal_gophers_can_you_write_an_os_kernel_in/", 
            "score": 62, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Bare Metal Gophers: can you write an OS Kernel in Go? // Speaker Deck", 
            "url": "https://speakerdeck.com/achilleasa/bare-metal-gophers-can-you-write-an-os-kernel-in-go"
        }, 
        {
            "author": "thedevsaddam", 
            "created_utc": 1506159819.0, 
            "domain": "self.golang", 
            "id": "71xe7e", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71xe7e/golang_concurrency_with_real_life_examples/", 
            "score": 1, 
            "selftext": "Goroutine works like the thread in java or any other multi-threading programming language, though the internal concept is different. Goroutine is more lightweight than processor thread. It takes little memory (on average 4~8 KB) than regular thread. Goroutines are managed by thread manager in runtime.\n\n[see full article] ( https://medium.com/@thedevsaddam/go-102-golang-concurrency-by-go-routine-3e0eab1a8ecb) ", 
            "subreddit": "golang", 
            "title": "golang concurrency with real life examples", 
            "url": "https://www.reddit.com/r/golang/comments/71xe7e/golang_concurrency_with_real_life_examples/"
        }, 
        {
            "author": "thedevsaddam", 
            "created_utc": 1506145917.0, 
            "domain": "self.golang", 
            "id": "71wm45", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71wm45/validate_golang_request_data_with_simple_rules/", 
            "score": 4, 
            "selftext": "If you are looking for an easy request validation package,  [try this] (https://github.com/govalidator/validator) ", 
            "subreddit": "golang", 
            "title": "Validate golang request data with simple rules. Highly inspired by Laravel's request validation.", 
            "url": "https://www.reddit.com/r/golang/comments/71wm45/validate_golang_request_data_with_simple_rules/"
        }, 
        {
            "author": "CipheredBytes", 
            "created_utc": 1506122806.0, 
            "domain": "self.golang", 
            "id": "71ut91", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71ut91/q_how_to_get_process_information_of_a_running/", 
            "score": 2, 
            "selftext": "I'm using the \"os/exec\" package to run a command/process aiming to extract its **memory usage** and **CPU execution duration**. \n\nUsing the following snippet, i wasn't able to extract any useful information. I think it's because the exec.Command has a synchronous call.\n\n    cmd := exec.Command(\"command\", \"arg1\", \"arg2\")\n    err := cmd.Run()\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Println(\"MaxRSS:\", cmd.ProcessState.SysUsage().(*syscall.Rusage).Maxrss)\n\nI wonder if i should use a kind of Async exec function or something.\n\nI appreciate any help.", 
            "subreddit": "golang", 
            "title": "[Q] How to get process information of a running external command ? [os/exec]", 
            "url": "https://www.reddit.com/r/golang/comments/71ut91/q_how_to_get_process_information_of_a_running/"
        }, 
        {
            "author": "0xjnml", 
            "created_utc": 1506113202.0, 
            "domain": "reddit.com", 
            "id": "71tv1v", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71tv1v/first_they_ignore_you_then_they_laugh_at_you/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "First they ignore you, then they laugh at you, ...", 
            "url": "https://www.reddit.com/r/programmingcirclejerk/comments/71ftbh/announcing_the_new_nogo_creative_initiative/"
        }, 
        {
            "author": "mmtb", 
            "created_utc": 1506108547.0, 
            "domain": "github.com", 
            "id": "71tcxu", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71tcxu/human_friendly_tool_to_generate_pseudorandom_data/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Human friendly tool to generate pseudo-random data", 
            "url": "https://github.com/mbialon/getrand"
        }, 
        {
            "author": "natefinch", 
            "created_utc": 1506103775.0, 
            "domain": "github.com", 
            "id": "71stnm", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 67, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71stnm/mage_a_makefile_replacement_for_go/", 
            "score": 36, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Mage, a makefile replacement for Go", 
            "url": "https://github.com/magefile/mage"
        }, 
        {
            "author": "Nhoya", 
            "created_utc": 1506098095.0, 
            "domain": "github.com", 
            "id": "71s60e", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71s60e/multibase_multiencodingdecoding_utility_for/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Multibase - Multi-encoding/decoding utility for base32,base64, base64URL, base58", 
            "url": "https://github.com/Nhoya/multibase"
        }, 
        {
            "author": "esimov", 
            "created_utc": 1506090781.0, 
            "domain": "github.com", 
            "id": "71rcxq", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 21, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71rcxq/triangle_convert_images_to_computer_art_with_go/", 
            "score": 106, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "\u25b2 Triangle - Convert images to computer art with Go.", 
            "url": "https://github.com/esimov/triangle"
        }, 
        {
            "author": "twek", 
            "created_utc": 1506043649.0, 
            "domain": "imgur.com", 
            "id": "71nsft", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71nsft/gopher_with_a_megaphone_sticker/", 
            "score": 25, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Gopher with a megaphone sticker!", 
            "url": "https://imgur.com/gallery/l7e8U"
        }, 
        {
            "author": "howeman", 
            "created_utc": 1506035509.0, 
            "domain": "commandcenter.blogspot.com", 
            "id": "71n0pz", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71n0pz/go_ten_years_and_climbing/", 
            "score": 160, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go: Ten years and climbing", 
            "url": "https://commandcenter.blogspot.com/2017/09/go-ten-years-and-climbing.html"
        }, 
        {
            "author": "dadleyy", 
            "created_utc": 1506032409.0, 
            "domain": "github.com", 
            "id": "71mpl9", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71mpl9/self_marlow_golang_orm_generation_from_a_projects/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "[self] marlow: golang orm generation from a project's structs (feedback welcome!)", 
            "url": "https://github.com/dadleyy/marlow"
        }, 
        {
            "author": "gaffneyc", 
            "created_utc": 1506025391.0, 
            "domain": "github.com", 
            "id": "71ly7k", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71ly7k/saramaheroku_simplify_connecting_to_kafka_on/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "sarama-heroku: Simplify connecting to Kafka on Heroku with Sarama", 
            "url": "https://github.com/deadmanssnitch/sarama-heroku/"
        }, 
        {
            "author": "marksteve4", 
            "created_utc": 1506025344.0, 
            "domain": "self.golang", 
            "id": "71ly0f", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71ly0f/what_a_big_diff_between_log15error_and_errorf/", 
            "score": 2, 
            "selftext": "I look around online, but can't find the answer.\n\nFunction-wise, they implement pretty much the same thing. \n\nWhat the scenario of using each of them? I am new to golang. Sorry if the question is naive.", 
            "subreddit": "golang", 
            "title": "What a big diff between log15.error and errorf", 
            "url": "https://www.reddit.com/r/golang/comments/71ly0f/what_a_big_diff_between_log15error_and_errorf/"
        }, 
        {
            "author": "m3wm3wm3wm", 
            "created_utc": 1506024676.0, 
            "domain": "youtu.be", 
            "id": "71lvb1", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Golang UK Conference", 
                    "author_url": "https://www.youtube.com/channel/UC9ZNrGdT2aAdrNbX78lbNlQ", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/75NjCfLLftw?start=128&feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/75NjCfLLftw/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Golang UK Conference 2017 | Mark Bates - Buffalo: Rapid Web Development in Go", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 15, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71lvb1/to_everyone_here_who_keeps_saying_just_use_the/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "To everyone here who keeps saying \"just use the standard library\"", 
            "url": "https://youtu.be/75NjCfLLftw?t=2m8s"
        }, 
        {
            "author": "nokkout", 
            "created_utc": 1506023867.0, 
            "domain": "github.com", 
            "id": "71lrus", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71lrus/diablo_ii_binary_character_parser/", 
            "score": 41, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Diablo II binary character parser", 
            "url": "https://github.com/nokka/d2s"
        }, 
        {
            "author": "gotolang", 
            "created_utc": 1506023579.0, 
            "domain": "self.golang", 
            "id": "71lqpc", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71lqpc/what_are_some_industry_essential_open_source/", 
            "score": 4, 
            "selftext": "I am trying to enter the professional golang world and I have been  learning the language on my own for a while. I making some progress in learning how to use golang for building API and using variety of packages like gorp, gorrilla mux, negroni and some others. I would like to make sure I have some experience with the most widely used packages before I start seeking a job.     \nThanks in Advance. ", 
            "subreddit": "golang", 
            "title": "What are some industry essential open source packages for building APIs a developer must know?", 
            "url": "https://www.reddit.com/r/golang/comments/71lqpc/what_are_some_industry_essential_open_source/"
        }, 
        {
            "author": "Destructicorn", 
            "created_utc": 1506020807.0, 
            "domain": "self.golang", 
            "id": "71lf8x", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 20, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71lf8x/whats_idomatic_go_for_a_struct_const/", 
            "score": 3, 
            "selftext": "I'm porting a Java library to Go for work and we have a  few`static final` variables in one of the classes. I know you can't do `const`structs in Go but I'm at a loss how to do this.\n\nHere is the java line:\n\n\n    public static final MyClass AWESOME = new MyClass(\"Awesome\");\n\n\nI thought of creating a function like:\n\n\n    func Awesome() *MyClass {\n      return &MyClass{\"Awesome\"}\n    }\n    \nBut that doesn't stop users from changing what the pointer is point to. I would like to use a pointer just so I only need to create on instance of the struct but maybe it's not possible.\n\nAny ideas how to mimic this in Go?\n", 
            "subreddit": "golang", 
            "title": "Whats idomatic Go for a Struct const?", 
            "url": "https://www.reddit.com/r/golang/comments/71lf8x/whats_idomatic_go_for_a_struct_const/"
        }, 
        {
            "author": "eepieh", 
            "created_utc": 1506020034.0, 
            "domain": "self.golang", 
            "id": "71lc2p", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71lc2p/what_are_some_good_open_source_projects_to/", 
            "score": 13, 
            "selftext": "Pretty much the title.\n\nI'm particularly interested in finding projects that'd benefit from a Golang newbie contributing to it.\n\nEdit: I've already written some things in Go. I am not completely new to the language or software development, but I would like to get a better command of it.", 
            "subreddit": "golang", 
            "title": "What are some good Open Source projects to contribute to in order to gain a better command of Golang?", 
            "url": "https://www.reddit.com/r/golang/comments/71lc2p/what_are_some_good_open_source_projects_to/"
        }, 
        {
            "author": "anjaanaadmi42", 
            "created_utc": 1506015761.0, 
            "domain": "clearlinux.org", 
            "id": "71ktsr", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71ktsr/intel_releases_clear_containers_30_rewritten_in_go/", 
            "score": 74, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Intel releases Clear Containers 3.0, rewritten in Go", 
            "url": "https://clearlinux.org/blogs/announcing-intel%C2%AE-clear-containers-30"
        }, 
        {
            "author": "somenoobappeared", 
            "created_utc": 1506013611.0, 
            "domain": "self.golang", 
            "id": "71kkgn", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71kkgn/are_there_any_tutorials_on_developing_a_simple/", 
            "score": 3, 
            "selftext": "There are a lot of tutorials on how to build todo-list, instagram, twitter, etc. using other languages. I can't seem to find much resources on Go (maybe because this language isn't popular?). Any help will be appreciated.", 
            "subreddit": "golang", 
            "title": "Are there any tutorials on developing a simple website using Go?", 
            "url": "https://www.reddit.com/r/golang/comments/71kkgn/are_there_any_tutorials_on_developing_a_simple/"
        }, 
        {
            "author": "microwav3s", 
            "created_utc": 1506004081.0, 
            "domain": "github.com", 
            "id": "71jh45", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71jh45/pimba_minimalist_cli_tool_written_in_go_to_easily/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Pimba: Minimalist CLI tool written in Go to easily publish static files", 
            "url": "https://github.com/signavio/pimba"
        }, 
        {
            "author": "tamalsaha", 
            "created_utc": 1506003500.0, 
            "domain": "github.com", 
            "id": "71jevd", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71jevd/appscodegodns_unified_dns_client_for_golang/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "appscode/go-dns - Unified DNS client for GOlang", 
            "url": "https://github.com/appscode/go-dns"
        }, 
        {
            "author": "chewxy", 
            "created_utc": 1506002358.0, 
            "domain": "blog.chewxy.com", 
            "id": "71jamc", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71jamc/sapirwhorf_on_programming_language_or_how_the_go/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Sapir-Whorf on Programming Language (or How the Go Syntax Blindsided Me)", 
            "url": "https://blog.chewxy.com/2017/09/20/sapir-whorf-programming-languages/"
        }, 
        {
            "author": "gbitten", 
            "created_utc": 1506000934.0, 
            "domain": "youtube.com", 
            "id": "71j5go", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Golang UK Conference", 
                    "author_url": "https://www.youtube.com/channel/UC9ZNrGdT2aAdrNbX78lbNlQ", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/8T3VxGrrJwc?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/8T3VxGrrJwc/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Golang UK Conference 2017 | Achilleas Anagnostopoulos - Can you write an OS Kernel in Go?", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71j5go/can_you_write_an_os_kernel_in_go/", 
            "score": 109, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Can you write an OS Kernel in Go?", 
            "url": "https://www.youtube.com/watch?v=8T3VxGrrJwc"
        }, 
        {
            "author": "MarcinPraski", 
            "created_utc": 1505993763.0, 
            "domain": "github.com", 
            "id": "71iime", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71iime/a_clustering_library_for_golang/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A clustering library for Golang", 
            "url": "https://github.com/mpraski/clusters"
        }, 
        {
            "author": "_nefario_", 
            "created_utc": 1505992212.0, 
            "domain": "self.golang", 
            "id": "71ieeu", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71ieeu/best_way_of_detecting_canceled_or_dropped_http/", 
            "score": 5, 
            "selftext": "would there be a reason to listen for signals on both `w.(http.CloseNotifier).CloseNotify()` and `r.Context().Done()` like this?\n\n\tfunc handle(w http.ResponseWriter, r *http.Request) {\n\t\tctx, cancel := context.WithCancel(context.Background())\n\t\tdefer cancel()\n\n\t\tgo func() {\n\t\t\tselect {\n\t\t\tcase <-w.(http.CloseNotifier).CloseNotify():\n\t\t\t\tlog.Print(\"writer closed\")\n\t\t\tcase <-r.Context().Done():\n\t\t\t\tlog.Print(\"request canceled\")\n\t\t\t}\n\t\t\tcancel()\n\t\t\treturn\n\t\t}()\n        // ...\n\t}\n\nif not both, then will either one do?  which one is better and why?", 
            "subreddit": "golang", 
            "title": "best way of detecting canceled or dropped http request?", 
            "url": "https://www.reddit.com/r/golang/comments/71ieeu/best_way_of_detecting_canceled_or_dropped_http/"
        }, 
        {
            "author": "cemremengu", 
            "created_utc": 1505987429.0, 
            "domain": "self.golang", 
            "id": "71i2oh", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71i2oh/how_are_various_routers_are_faster_than_each_other/", 
            "score": 0, 
            "selftext": "As far as I understood all of the golang routers (mux, chi, gin etc.) are based on the native golang http package but they claim to be faster than each other.\n\nHow is this possible given that they are all based on the same package?", 
            "subreddit": "golang", 
            "title": "How are various routers are \"faster\" than each other?", 
            "url": "https://www.reddit.com/r/golang/comments/71i2oh/how_are_various_routers_are_faster_than_each_other/"
        }, 
        {
            "author": "qrv3w", 
            "created_utc": 1505982215.0, 
            "domain": "github.com", 
            "id": "71hrh5", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71hrh5/pluck_a_cli_app_golibrary_for_extracting_text_in/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "pluck - a CLI app / Go-library for extracting text in a stream", 
            "url": "https://github.com/schollz/pluck"
        }, 
        {
            "author": "natefinch", 
            "created_utc": 1505960725.0, 
            "domain": "github.com", 
            "id": "71g6c8", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 45, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71g6c8/proposal_just_use_github_issue_21956_golanggo/", 
            "score": 93, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Proposal: Just Use Github \u00b7 Issue #21956 \u00b7 golang/go", 
            "url": "https://github.com/golang/go/issues/21956"
        }, 
        {
            "author": "semisync", 
            "created_utc": 1505960412.0, 
            "domain": "github.com", 
            "id": "71g5a7", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71g5a7/dyndao_prerelease_of_gos_most_dynamic_orm/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "dyndao: (pre-release of) Go's most dynamic ORM", 
            "url": "https://github.com/rbastic/dyndao"
        }, 
        {
            "author": "manishrjain", 
            "created_utc": 1505950709.0, 
            "domain": "blog.dgraph.io", 
            "id": "71f7m5", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 29, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71f7m5/badger_vs_lmdb_vs_boltdb_benchmarking_keyvalue/", 
            "score": 26, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Badger vs LMDB vs BoltDB: Benchmarking key-value databases in Go", 
            "url": "https://blog.dgraph.io/post/badger-lmdb-boltdb/"
        }, 
        {
            "author": "baliance", 
            "created_utc": 1505936900.0, 
            "domain": "self.golang", 
            "id": "71dnxx", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71dnxx/ragelgoyacc_example_excel_formula_evaluation/", 
            "score": 6, 
            "selftext": "I want to eventually add support for creating Pivot tables in my xlsx/docx/pptx library gooxml.  A precursor to that is implementing an Excel formula evaluator to allow creating a pivot table from possibly computed values.  I've finished implementing an evaluator as well as support for around 100 common Excel functions (e.g. SUM, IF, etc.).  It's not 100% compatible with Excel, but there are several hundred test cases on non-trivial formulas and it should easily handle evaluating the vast majority of commonly used spreadsheet formulas. \n\nIf you've ever wanted to implement a parser in go with Ragel & goyacc, I think this may serve as a good example of one way to approach it. The code is at https://github.com/baliance/gooxml/tree/master/spreadsheet/formula\n\n- lever.rl Ragel input\n- grammar.y goyacc input", 
            "subreddit": "golang", 
            "title": "ragel+goyacc example (Excel Formula Evaluation)", 
            "url": "https://www.reddit.com/r/golang/comments/71dnxx/ragelgoyacc_example_excel_formula_evaluation/"
        }, 
        {
            "author": "twek", 
            "created_utc": 1505927815.0, 
            "domain": "self.golang", 
            "id": "71ckur", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71ckur/gdax_api_is_this_even_valid_json/", 
            "score": 1, 
            "selftext": "```\n{\n    \"type\": \"subscribe\",\n    \"product_ids\": [\n        \"ETH-USD\",\n        \"ETH-EUR\"\n    ],\n    \"channels\": [\n        \"level2\",\n        \"heartbeat\",\n        {\n            \"name\": \"ticker\",\n            \"product_ids\": [\n                \"ETH-BTC\",\n                \"ETH-GBP\"\n            ]\n        },\n    ]\n}\n```\nWhats going on with the channels there? \njsonlint says its garbage too...\n\n[https://docs.gdax.com/?php#overview](https://docs.gdax.com/?php#overview)\n\nI know this isn't strictly a go question, but I'm writing the API in go and I like you guys.\n\n* not sure why its formating like garbage", 
            "subreddit": "golang", 
            "title": "GDAX api: Is this even valid JSON?", 
            "url": "https://www.reddit.com/r/golang/comments/71ckur/gdax_api_is_this_even_valid_json/"
        }, 
        {
            "author": "attfarhan", 
            "created_utc": 1505925658.0, 
            "domain": "about.sourcegraph.com", 
            "id": "71cbnl", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71cbnl/announcing_sourcegraph_20/", 
            "score": 16, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Announcing Sourcegraph 2.0", 
            "url": "https://about.sourcegraph.com/blog/announcing-sourcegraph-2/"
        }, 
        {
            "author": "radeksohlich", 
            "created_utc": 1505921731.0, 
            "domain": "sohlich.github.io", 
            "id": "71bvcz", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 31, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71bvcz/blog_post_golang_dont_afraid_of_makefiles/", 
            "score": 28, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Blog Post: Golang: Don't afraid of makefiles", 
            "url": "https://sohlich.github.io/post/go_makefile/"
        }, 
        {
            "author": "blackflicker", 
            "created_utc": 1505904956.0, 
            "domain": "medium.com", 
            "id": "71a9o2", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71a9o2/about_go_language_an_overview_series_of_tutorials/", 
            "score": 39, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "About Go Language - An Overview - Series of tutorials to learn Golang", 
            "url": "https://medium.com/im-learning-go-golang/about-go-language-an-overview-f0bee143597c"
        }, 
        {
            "author": "dahlma", 
            "created_utc": 1505892561.0, 
            "domain": "self.golang", 
            "id": "719hqq", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/719hqq/async_wait_to_pause_requests_for_specific_assets/", 
            "score": 6, 
            "selftext": "I have a function that grabs an asset from a DB and places it in an in memory cache, and I'm trying to solve an issue where if multiple requests for the same asset are made simultaneously, the 'second' request needs to wait until the first request is done processing and has placed the asset into memory so both requests don't query the DB.\n\nI've been messing with `sync.RWMutex`'s and they seem to be working, but when running the application with the `--race` flag it's warning me that there are race conditions, even though I haven't ran into any while attempting to simulate a production environment.\n\nHere's a basic example of what I am running:\n\n\n    var assetSync = make(map[string]*sync.RWMutex)\n    \n    func GetAsset(id string) (asset Asset) {\n      var as sync.RWMutex  // Using this suppressed some warnings being thrown about concurrent read/writes\n     if _, ok := assetSync[id]; !ok {\n        as.Lock()\n        assetSync[id] = &sync.RWMutex{}  // Make new mutex\n        as.Unlock()\n     }\n    \n      as.Lock()\n      assetSync[id].Lock()  // Lock the mutex so the next request for the ID is forced to wait here\n      as.Unlock()\n    \n      if x, found := GC.Get(id); found {\n        // Found in cache\n        asset = x.(Asset)\n      } else {\n        // Going to query DB\n        asset = GetAssetFromDB(id)\n    \n        GC.Set(id, asset)\n      }\n    \n      as.Lock()\n      assetSync[id].Unlock() // Unlock the mutex for the ID\n      as.Unlock()\n    }\n\n\nThe compiler is complaning that different go routines can write to the assetSync hash map, but that is the point and I'm OK with it but obviously I'd like to do it in a way that is thread safe.\n\nAny ideas?\n\nEDIT:\n\nI was able to come up with a solution that isn't throwing race conditions anymore thanks to suggestions from bwandel.   The updated, simplified code would look like the following:\n\n    func getAccessLock(key string) *sync.RWMutex {\n      if lock, found := GC.Get(\"access_lock\"+key); found {\n        return lock.(*sync.RWMutex)\n      }\n\n        lock := &sync.RWMutex{}\n\tGC.Set(\"access_lock\"+key, lock, cache.NoExpiration)\n\treturn lock\n    }\n    \n    func GetAsset(id string) (asset Asset) {\n      lock := getAccessLock(id)\n      lock.Lock()\n      defer lock.Unlock()\n    \n      if x, found := GC.Get(id); found {\n        // Found in cache\n        asset = x.(Asset)\n      } else {\n        // Going to query DB\n        asset = GetAssetFromDB(id)\n    \n        GC.Set(id, asset)\n      }\n    }\n\nGC is a global cached I already use powered by: https://github.com/patrickmn/go-cache", 
            "subreddit": "golang", 
            "title": "Async wait to pause requests for specific assets", 
            "url": "https://www.reddit.com/r/golang/comments/719hqq/async_wait_to_pause_requests_for_specific_assets/"
        }, 
        {
            "author": "marksteve4", 
            "created_utc": 1505883673.0, 
            "domain": "self.golang", 
            "id": "718vlu", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/718vlu/why_my_go_test_running_so_slow/", 
            "score": 5, 
            "selftext": "every time I made a modification, go test takes a long time to run. I only run a single test, like, \ngo test pkg/ds/ds... -run TestCase1 -v", 
            "subreddit": "golang", 
            "title": "Why my \"go test\" running so slow?", 
            "url": "https://www.reddit.com/r/golang/comments/718vlu/why_my_go_test_running_so_slow/"
        }, 
        {
            "author": "dc0d", 
            "created_utc": 1505877886.0, 
            "domain": "github.com", 
            "id": "718ekr", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 15, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/718ekr/etag_middleware_for_go/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "ETag Middleware for Go", 
            "url": "https://github.com/dc0d/cache-control"
        }, 
        {
            "author": "borderline1p", 
            "created_utc": 1505868037.0, 
            "domain": "self.golang", 
            "id": "717h7y", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 21, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/717h7y/beginner_question_when_does_golang_make_a_copy_of/", 
            "score": 10, 
            "selftext": "Is there a list of situation where golang make a copy of value?\n\nI know that if the function parameter is by value, and brand new copy will be created.\n\n    func pass_by_value(value interface{})\n\nis there any other situation that golang will create a new copy?\n", 
            "subreddit": "golang", 
            "title": "[Beginner Question] When does golang make a copy of value?", 
            "url": "https://www.reddit.com/r/golang/comments/717h7y/beginner_question_when_does_golang_make_a_copy_of/"
        }, 
        {
            "author": "ImreSamu", 
            "created_utc": 1505865603.0, 
            "domain": "segment.com", 
            "id": "7178ol", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7178ol/allocation_efficiency_in_highperformance_go/", 
            "score": 50, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Allocation Efficiency in High-Performance Go Services", 
            "url": "https://segment.com/blog/allocation-efficiency-in-high-performance-go-services/"
        }, 
        {
            "author": "qwert_dev", 
            "created_utc": 1505864608.0, 
            "domain": "github.com", 
            "id": "71757y", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71757y/chipmunk2d_physics_library_ported_to_go/", 
            "score": 53, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Chipmunk2D physics library ported to Go", 
            "url": "https://github.com/jakecoffman/cp"
        }, 
        {
            "author": "marksteve4", 
            "created_utc": 1505864489.0, 
            "domain": "self.golang", 
            "id": "7174sr", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7174sr/how_to_remove_the_trailing_slash_in_a_path/", 
            "score": 1, 
            "selftext": "I am new to golang. sorry if this is a naive question. How can I remove the tailing slash in a path if it exists? Better to use some sdk function.", 
            "subreddit": "golang", 
            "title": "How to remove the trailing slash in a path?", 
            "url": "https://www.reddit.com/r/golang/comments/7174sr/how_to_remove_the_trailing_slash_in_a_path/"
        }, 
        {
            "author": "igknighted", 
            "created_utc": 1505848335.0, 
            "domain": "self.golang", 
            "id": "715bxw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/715bxw/discovered_build_constraints_today_life_just/", 
            "score": 6, 
            "selftext": "So I've been plugging away at code that I intend to transpile to javascript for a user interface piece with gopherjs. The biggest issue I was running into is part of my APIs were not going to be compatible in gopherjs. As a result, I assumed I was going to have to make a massive make file to handle what to compile and when.  \n  \nWell, it turns out GoLang has my back! I was stoked to find out about build constraints and they don't seem to be talked about much. It seems that if we ever wanted desktop UI's to exists, these things would be our saving grace.  \n  \nhttps://golang.org/pkg/go/build/#hdr-Build_Constraints", 
            "subreddit": "golang", 
            "title": "Discovered build constraints today! Life just became easymode for cross-platform specific stuff.", 
            "url": "https://www.reddit.com/r/golang/comments/715bxw/discovered_build_constraints_today_life_just/"
        }, 
        {
            "author": "M1hkel", 
            "created_utc": 1505843170.0, 
            "domain": "youtube.com", 
            "id": "714pck", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Golang UK Conference", 
                    "author_url": "https://www.youtube.com/channel/UC9ZNrGdT2aAdrNbX78lbNlQ", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/videoseries?list=PLDWZ5uzn69eyM81omhIZLzvRhTOXvpeX9\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/mLVxAU_xpEA/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "Golang UK Conference 2017 | Takuya Ueda - Static Analysis in Go", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/714pck/golang_uk_conference_2017_videos/", 
            "score": 51, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Golang UK Conference 2017 videos", 
            "url": "https://www.youtube.com/watch?v=mLVxAU_xpEA&list=PLDWZ5uzn69eyM81omhIZLzvRhTOXvpeX9"
        }, 
        {
            "author": "marksteve4", 
            "created_utc": 1505832129.0, 
            "domain": "self.golang", 
            "id": "713eva", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/713eva/syncrwmutex_and_lockunlock/", 
            "score": 2, 
            "selftext": "Bear with me if this is a naive question. Why is a struct that add sync.RWMutex will make lock()/unlock() available to the object? \n\nI mean what go language feature is this?", 
            "subreddit": "golang", 
            "title": "sync.RWMutex and lock/unlock", 
            "url": "https://www.reddit.com/r/golang/comments/713eva/syncrwmutex_and_lockunlock/"
        }, 
        {
            "author": "msgtonaveen", 
            "created_utc": 1505828942.0, 
            "domain": "golangbot.com", 
            "id": "7132ts", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7132ts/polymorphism_using_go/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Polymorphism using Go", 
            "url": "https://golangbot.com/polymorphism/"
        }, 
        {
            "author": "bepragmatic", 
            "created_utc": 1505828405.0, 
            "domain": "self.golang", 
            "id": "71311d", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71311d/wiki_done_in_golang/", 
            "score": 13, 
            "selftext": "Hi! I like the simplicity of deploying Go apps for ours small business internal usage. For example, last month we replaced Gitlab with Gitea and we are super happy with it and it's simpler requirements (to be honest Gitlab is great if you have a big team and use all it's features).\n\nI'm looking for more tools to migrate, in this case our internal wiki used as a KB.. but it striked me that there aren't any open source wikis done in Golang, at least by searching github and filtering by language.. I'm missing something?", 
            "subreddit": "golang", 
            "title": "Wiki done in Golang?", 
            "url": "https://www.reddit.com/r/golang/comments/71311d/wiki_done_in_golang/"
        }, 
        {
            "author": "newbgopher", 
            "created_utc": 1505821597.0, 
            "domain": "self.golang", 
            "id": "712epf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/712epf/help_implementing_custom_protocol_client/", 
            "score": 8, 
            "selftext": "I'm implementing a custom protocol over TCP. Unlike HTTP, where the client issues a request and the server responds, this protocol also allows the server to issue requests which the client will respond to. A sample packet looks like this:\n\n`STX``TYPE``/``DATA``ETX`\n\nwhere `STX` is just 2 and `ETX` is just 3\n\nHeres the possible request scenarios.\n\nScenario 1\n\n`Client -------REQUEST------> Server`\n\n`Client <-----RESPONSE------- Server`\n\nScenario 2\n\n`Client <------REQUEST-------- Server`\n\t\n`Client -------RESPONSE------> Server`\n\nMy first intuition is to fire a goroutine that will read `net.Conn` and parse the packet to determine what type of operation it is. Then I will send it to a `chan` of that type, [here](https://gist.github.com/anonymous/8246c2ec615fc101f567ce536f5d284a#file-client-go-L88) it is. Scenario 1 is synchronous, as implemented in the `Send` function [here](https://gist.github.com/anonymous/8246c2ec615fc101f567ce536f5d284a#file-client-go-L62). [Here](https://gist.github.com/anonymous/8246c2ec615fc101f567ce536f5d284a#file-client-go-L109) is how scenario 2 is handled. This works ok on small workloads but during load testing, say calling `Send` 400 times per second, the function times out. I even check the packet trace using wireshark and i can confirm that the server indeed sent a response, however it seems like the `readLoop` failed to pick it up and send it to the appropriate channel in which `Send` is trying to receive.  Take note that this is a simplified version of the client/protocol, however all the semantics are the same. Any advice would be of great help. Thanks!\n\t\n\n", 
            "subreddit": "golang", 
            "title": "[Help] Implementing custom protocol client", 
            "url": "https://www.reddit.com/r/golang/comments/712epf/help_implementing_custom_protocol_client/"
        }, 
        {
            "author": "thedevsaddam", 
            "created_utc": 1505811785.0, 
            "domain": "self.golang", 
            "id": "711qdw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/711qdw/validate_input_in_golang_easily/", 
            "score": 16, 
            "selftext": "Most of the time I used to build REST API for different services. For this purpose, I need input/request validator badly. I was finding a validator like Laravel validation process, but it was not available in Golang. \nFor this reason, I have built a new [validator package](https://github.com/govalidator/validator) for Go.\n", 
            "subreddit": "golang", 
            "title": "Validate input in Golang easily", 
            "url": "https://www.reddit.com/r/golang/comments/711qdw/validate_input_in_golang_easily/"
        }, 
        {
            "author": "Adi7991", 
            "created_utc": 1505793421.0, 
            "domain": "greenlab.di.uminho.pt", 
            "id": "710gl8", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/710gl8/energy_efficient_programming_languages_research/", 
            "score": 25, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Energy efficient programming languages. (Research Paper)", 
            "url": "http://greenlab.di.uminho.pt/wp-content/uploads/2017/09/paperSLE.pdf"
        }, 
        {
            "author": "EbonyFalcon", 
            "created_utc": 1505791267.0, 
            "domain": "self.golang", 
            "id": "710a1s", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/710a1s/sql_valuerscanner_interface_issue/", 
            "score": 2, 
            "selftext": "I am trying to automate the saving/loading of custom structs with a sqlite database (database/sql) but I am having issues converting a gocql.UUID field (github.com/gocql/gocql). \n\nValue() works fine, converting the gocql.UUID into a string, but Scan() isn't able to cast the value to a string.\n\n\n    type Uid struct {\n        gocql.UUID\n    }\n\n    func (u *Uid) Scan(value interface{}) error {\n        ...\n        if sv, err := driver.String.ConvertValue(value); err == nil {\n\t\tif v, ok := sv.(string); ok { // <---  THIS DOESN'T WORK\n\t\t\tparsedUUID, _ := gocql.ParseUUID(v)\n\t\t\t...\n\t\t    }\n\t    }\n    }    \n\nAny suggestions would be appreciated!\n\nFull code here, issue on line 66: https://play.golang.org/p/ndCZTJZ5rb\n\nedit: added package names, added short example", 
            "subreddit": "golang", 
            "title": "SQL Valuer/Scanner Interface Issue", 
            "url": "https://www.reddit.com/r/golang/comments/710a1s/sql_valuerscanner_interface_issue/"
        }, 
        {
            "author": "avelino0", 
            "created_utc": 1505787076.0, 
            "domain": "github.com", 
            "id": "70zw4b", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70zw4b/background_worker_processes_for_postgresql/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Background Worker Processes for PostgreSQL written in Go", 
            "url": "https://github.com/prest/bgworker"
        }, 
        {
            "author": "jayposs", 
            "created_utc": 1505785050.0, 
            "domain": "self.golang", 
            "id": "70zp4z", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70zp4z/date_formats_real_quick/", 
            "score": 0, 
            "selftext": "For New Go Programmers. \n  \nKey point about formats: the correct component values (ex. 2006 for year, 15 for hour) must be used.  \n  \n    const Format1 = \"Jan 2, 2006\"\n    const Format2 = \"2006-01-02 15:04:05\"\n    ...  \n    var date1 time.Time\n    input := \"Apr 1, 2017\"\n    date1, _ = time.Parse(Format1, input)  // probably want to check for error\n    output := date1.AddDate(1, 1, 1).Format(Format2) // add 1 yr, 1 mo, 1 day & return formatted value\n    log.Println(output) // prints 2018-05-02 00:00:00\n\nI know there are many posts about dates, but this simple concept is often covered over with lots of other info.", 
            "subreddit": "golang", 
            "title": "Date Formats - Real Quick", 
            "url": "https://www.reddit.com/r/golang/comments/70zp4z/date_formats_real_quick/"
        }, 
        {
            "author": "nilslice", 
            "created_utc": 1505761887.0, 
            "domain": "self.golang", 
            "id": "70x86p", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70x86p/go_client_for_ponzu_cms_easier_to_work_with_your/", 
            "score": 7, 
            "selftext": "Been WIP for a while, but finally added a 0.1.0 tag w/ stable API. This client package wraps Ponzu's Content API and handles all the request formatting, multipart forms, and exposes a simpler way to interact with a Ponzu CMS from within a separate Go program.\n\nExamples in README\n\nhttps://github.com/ponzu-cms/go-client", 
            "subreddit": "golang", 
            "title": "Go client for Ponzu CMS - easier to work with your Ponzu instance from a Go frontend / app", 
            "url": "https://www.reddit.com/r/golang/comments/70x86p/go_client_for_ponzu_cms_easier_to_work_with_your/"
        }, 
        {
            "author": "zeiko_is_back", 
            "created_utc": 1505761500.0, 
            "domain": "github.com", 
            "id": "70x6l1", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70x6l1/bitset_a_compact_and_fast_representation_for_a/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Bitset - A compact and fast representation for a dense set of positive integer values.", 
            "url": "https://github.com/takeyourhatoff/bitset"
        }, 
        {
            "author": "SamJTWIV", 
            "created_utc": 1505756886.0, 
            "domain": "self.golang", 
            "id": "70wn6t", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 48, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70wn6t/why_is_every_go_community_i_visit_so_harsh/", 
            "score": 23, 
            "selftext": "I am a self taught programmer. I have been studying programming for several years and as such I rely on places like this and stackoverflow to ask questions I haven't been able to find answers to on my own. I started studying Go a couple of months ago. Since then I have been met more often with contempt and or down votes on every platform I have used ( sometimes justified at least once looking back I agreed after the fact with why one person down voted me) than I have encountered while learning C, JavaScript, HTML5, CSS, and PHP combined. Most recently with this post [stackoverflow](https://stackoverflow.com/q/46284285/4122368). It has gotten to the point where I am thinking about dropping Go and learning a different language. Because its more exhausting worrying about the response Ill get when asking a question then all the energy I spend researching  the questions on my own. Right now I don't care and fully expect to be down voted or maybe even have my post removed because I am frustrated and kind of ticked.", 
            "subreddit": "golang", 
            "title": "Why is every Go community I visit so harsh ?", 
            "url": "https://www.reddit.com/r/golang/comments/70wn6t/why_is_every_go_community_i_visit_so_harsh/"
        }, 
        {
            "author": "jtolds", 
            "created_utc": 1505749803.0, 
            "domain": "goc.vivint.com", 
            "id": "70vvmy", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70vvmy/vivints_game_of_codes_week_long_programming/", 
            "score": 14, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Vivint's Game of Codes - week long programming contest, $20k in prizes. Supports Go!", 
            "url": "https://goc.vivint.com/"
        }, 
        {
            "author": "julianxxxx", 
            "created_utc": 1505748498.0, 
            "domain": "self.golang", 
            "id": "70vqg4", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70vqg4/httpredirect_wont_direct_to_port_8080/", 
            "score": 1, 
            "selftext": "I'm setting up https and want to reroute all http traffic to https:\n    \n    func main() {\n        http.HandleFunc(\"/\", homeHandler)\n        http.Handle(\"/ws\", websocket.Handler(EmailEntryServer))\n\t    fmt.Println(\"Serving to :8080 and :8081\")\n\t    go panic(http.ListenAndServeTLS(\":8080\", \"cert.pem\", \"key.pem\", nil))\n\t    panic(http.ListenAndServe(\":8081\", http.HandlerFunc(\n\t\t\tfunc (w http.ResponseWriter, req *http.Request) {\n\t\t\t\thttp.Redirect(w, req, \"https://127.0.0.1:8080\"+req.RequestURI,\n                                http.StatusMovedPermanently)\n\t\t\t}\n\t\t)))\n     }\n\n1. my http requests to 8081 are successfully redirected - BUT only to `https://localhost` , without port 8080. \n2. In production, how can I \"ignore\" the port when handling http requests and just forward every request to https? Thanks!", 
            "subreddit": "golang", 
            "title": "http.Redirect won't direct to port 8080?", 
            "url": "https://www.reddit.com/r/golang/comments/70vqg4/httpredirect_wont_direct_to_port_8080/"
        }, 
        {
            "author": "vvivien", 
            "created_utc": 1505745071.0, 
            "domain": "medium.com", 
            "id": "70vcxs", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70vcxs/streaming_io_and_creating_custom_readers_and/", 
            "score": 7, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Streaming IO and creating custom readers and writers in Go", 
            "url": "https://medium.com/learning-the-go-programming-language/streaming-io-in-go-d93507931185"
        }, 
        {
            "author": "alecthomas", 
            "created_utc": 1505743857.0, 
            "domain": "github.com", 
            "id": "70v8fd", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 16, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70v8fd/just_released_chroma_a_pure_go_syntax/", 
            "score": 214, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Just released Chroma, a pure Go syntax highlighting engine with support for ~150 languages", 
            "url": "https://github.com/alecthomas/chroma"
        }, 
        {
            "author": "juicemia", 
            "created_utc": 1505738914.0, 
            "domain": "juicemia.com", 
            "id": "70urp9", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70urp9/a_followup_on_domain_driven_design/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A Follow-up on Domain Driven Design", 
            "url": "https://juicemia.com/post/go-ddd-2/"
        }, 
        {
            "author": "tomas-fp", 
            "created_utc": 1505731537.0, 
            "domain": "github.com", 
            "id": "70u6r2", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70u6r2/baloo_v2_is_out_endtoend_http_testing_made_simple/", 
            "score": 11, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "baloo v2 is out: end-to-end HTTP testing made simple", 
            "url": "https://github.com/h2non/baloo"
        }, 
        {
            "author": "golangprograms", 
            "created_utc": 1505713986.0, 
            "domain": "golangprograms.com", 
            "id": "70t33r", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70t33r/20_examples_of_data_structure_and_algorithms_in/", 
            "score": 82, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "20 examples of data structure and algorithms in Golang.", 
            "url": "http://www.golangprograms.com/data-structure-and-algorithms.html"
        }, 
        {
            "author": "Acidic92", 
            "created_utc": 1505705512.0, 
            "domain": "self.golang", 
            "id": "70sfmk", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 22, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70sfmk/syncwaitgroup_limit/", 
            "score": 1, 
            "selftext": "I know this can be done in your own code with a counter variable, etc; But it'd be nice to see some sort of a limit in-built into `sync.WaitGroup`.\n\nFor example;\n\n    var wg sync.WaitGroup\n    wg.Limit(1)\n\n    wg.Add(1)\n    go func() {\n    \tdefer wg.Done()\n    \tfmt.Println(\"start #1\")\n    \ttime.Sleep(time.Second * 3)\n    \tfmt.Println(\"done #1\")\n    }()\n\n    wg.Add(1)\n    go func() {\n    \tdefer wg.Done()\n    \tfmt.Println(\"start #2\")\n    \ttime.Sleep(time.Second)\n    \tfmt.Println(\"done #2\")\n    }()\n\n    wg.Add(1)\n    go func() {\n    \tdefer wg.Done()\n    \tfmt.Println(\"start #3\")\n    \ttime.Sleep(time.Second * 1)\n    \tfmt.Println(\"done #3\")\n    }()\n\n    wg.Wait()\n\nEach time `wg.Add()` is called, and the limit is reached, it will pause and wait for the waitgroup counter to decrease (i.e `wg.Done()` is called).\n\nThoughts?", 
            "subreddit": "golang", 
            "title": "sync.WaitGroup Limit?", 
            "url": "https://www.reddit.com/r/golang/comments/70sfmk/syncwaitgroup_limit/"
        }, 
        {
            "author": "DocPorter", 
            "created_utc": 1505698799.0, 
            "domain": "self.golang", 
            "id": "70ru32", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 24, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70ru32/go_install_with_official_package_installer_or_use/", 
            "score": 5, 
            "selftext": "Looking to learn Go; as far as ease of headaches for installation and future updates, what is the best way to install Go? The official installer looks nice, but at the same time, I have read from other places that Homebrew is better and I'm not sure which one to go with. Suggestions?", 
            "subreddit": "golang", 
            "title": "Go: Install with Official package installer or use Homebrew??", 
            "url": "https://www.reddit.com/r/golang/comments/70ru32/go_install_with_official_package_installer_or_use/"
        }, 
        {
            "author": "zanven42", 
            "created_utc": 1505696387.0, 
            "domain": "self.golang", 
            "id": "70rm8t", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 26, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70rm8t/is_golang_at_all_useful_for_writing_packages_for/", 
            "score": 25, 
            "selftext": "i have recently hard switched to using arch linux full time on all my systems and not just servers, and felt like contributing and making applications or things to extend functionality within the linux ecosystem, i really am not keen to go back to c/c++ programming as go is so much more enjoyable to code in for me.\n\nI have seen some projects offering c bindings for things like GTK3 etc. So it appears viable to make things but i was hoping someone has experience / feedback on the subject matter. I am not entirely sure what i want to make but i am curious what things would be a no go with golang (kernel is probably a no go for sure).", 
            "subreddit": "golang", 
            "title": "Is Golang at all useful for writing packages for the linux ecosystem? i.e is dealing with cgo going to be alright, or is it completely the wrong tool for the job?", 
            "url": "https://www.reddit.com/r/golang/comments/70rm8t/is_golang_at_all_useful_for_writing_packages_for/"
        }, 
        {
            "author": "8lall0", 
            "created_utc": 1505688776.0, 
            "domain": "github.com", 
            "id": "70qwag", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70qwag/gomondrian_a_mondrianlike_generator_in_golang/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "GoMondrian - A Mondrian-like generator in golang. [Suggestions and opinions accepted]", 
            "url": "https://github.com/8lall0/GoMondrian"
        }, 
        {
            "author": "weberc2", 
            "created_utc": 1505682673.0, 
            "domain": "self.golang", 
            "id": "70qaqs", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70qaqs/help_how_to_work_with_or_around_gos_ast_package/", 
            "score": 4, 
            "selftext": "Go's AST nodes are clearly designed to be the result of parsing from a file, as they take token indices into a byte slice instead of string values. This is great if your AST comes from Go source code, but I'm compiling into Go and I'd like to compile into its AST for purposes of pretty-printing before I pass the result off to the compiler.\n\nI don't have a good idea about how to do this with Go's standard AST package, and the alternative is to reimplement the AST package. Before I do that, I was wondering if anyone could see an easier way to work with the standard AST package, or if anyone knew of a friendly non-standard AST package?\n\nPlease and thank you!", 
            "subreddit": "golang", 
            "title": "HELP: How to work with (or around) Go's AST package when compiling into Go?", 
            "url": "https://www.reddit.com/r/golang/comments/70qaqs/help_how_to_work_with_or_around_gos_ast_package/"
        }, 
        {
            "author": "__collie", 
            "created_utc": 1505655093.0, 
            "domain": "growthmetrics.io", 
            "id": "70nhrj", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 19, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70nhrj/alloy_boilerplate_for_creating_web_applications/", 
            "score": 45, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Alloy - Boilerplate for creating web applications in Go", 
            "url": "https://www.growthmetrics.io/open-source/alloy"
        }, 
        {
            "author": "mlowicki", 
            "created_utc": 1505647293.0, 
            "domain": "medium.com", 
            "id": "70mxwy", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70mxwy/globally_unique_key_for_context_value/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Globally unique key for context value", 
            "url": "https://medium.com/@mlowicki/globally-unique-key-for-context-value-in-golang-62026854b48f"
        }, 
        {
            "author": "LC2712", 
            "created_utc": 1505646505.0, 
            "domain": "self.golang", 
            "id": "70mway", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70mway/review_bookkeeping_utility/", 
            "score": 5, 
            "selftext": "Hi, is there anyone willing to review/make suggestions about this project of mine?\n\nhttps://github.com/LuCavallin/transit\n\nATM it just takes in a CSV export from the bank (only ING NL supported :D) and prints out the total of the transactions and expenses grouped by \"receiver\".\n\nThanks!\n", 
            "subreddit": "golang", 
            "title": "[Review] Bookkeeping utility", 
            "url": "https://www.reddit.com/r/golang/comments/70mway/review_bookkeeping_utility/"
        }, 
        {
            "author": "sbinet", 
            "created_utc": 1505642073.0, 
            "domain": "gonum.org", 
            "id": "70mnfi", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70mnfi/new_hugobased_website_for_gonum/", 
            "score": 12, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "New (hugo-based) website for Gonum", 
            "url": "https://www.gonum.org"
        }, 
        {
            "author": "floe_", 
            "created_utc": 1505631848.0, 
            "domain": "self.golang", 
            "id": "70m4ad", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70m4ad/need_a_project_euler_alternative_without_much_math/", 
            "score": 3, 
            "selftext": "Something as beginner friendly as coderbyte (but free) that gradually get hard.", 
            "subreddit": "golang", 
            "title": "Need a Project Euler alternative without much math", 
            "url": "https://www.reddit.com/r/golang/comments/70m4ad/need_a_project_euler_alternative_without_much_math/"
        }, 
        {
            "author": "sahilmuthoo", 
            "created_utc": 1505613890.0, 
            "domain": "sahilm.com", 
            "id": "70kxu9", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70kxu9/tcp_servers_that_run_like_clockwork/", 
            "score": 68, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "TCP servers that run like clockwork", 
            "url": "https://sahilm.com/tcp-servers-that-run-like-clockwork/"
        }, 
        {
            "author": "daenney", 
            "created_utc": 1505590567.0, 
            "domain": "matthias-endler.de", 
            "id": "70iwcd", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 70, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70iwcd/go_vs_rust_choose_go/", 
            "score": 46, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go vs Rust? Choose Go.", 
            "url": "https://matthias-endler.de/2017/go-vs-rust/"
        }, 
        {
            "author": "kjell_k", 
            "created_utc": 1505588065.0, 
            "domain": "self.golang", 
            "id": "70inw5", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70inw5/autocomplete_for_godoc_bash_commandline/", 
            "score": 7, 
            "selftext": "I use godoc from cli, but often miss autocompletion.\n\nI now created a sollution for this using bash_completion. I have put it out there: https://gitlab.com/kjell/godoc-ac/\nin case this could be useful for some of you.\n\n(its tested on debian and ubuntu)\n\n", 
            "subreddit": "golang", 
            "title": "Autocomplete for godoc - (bash) commandline.", 
            "url": "https://www.reddit.com/r/golang/comments/70inw5/autocomplete_for_godoc_bash_commandline/"
        }, 
        {
            "author": "shark1337", 
            "created_utc": 1505583077.0, 
            "domain": "self.golang", 
            "id": "70i652", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70i652/implementing_a_workers_pool_when_dealing_with/", 
            "score": 1, 
            "selftext": "First of all, I need to fetch 4 images and apply them on a canvas images. Here's what I'm working with\n-----------------------------------\nreadCanvas() -> async, returns []byte \n\nfetchImg() -> async, returns []byte\n\napplyOnCavas(canvas, img []byte, options struct{}) -> non blocking, returns []byte\n-----------------------------------\nWhat I'm looking to do with the following. Start reading the canvas and fetching the images one by one all in the same time. When a fetch is done, apply the fetched image directly on the canvas  and assign the new []byte result. So on until all the fetching is done. I've been reading about how a working pool example works, but really couldn't grasp it yet. There's also sync.Pool.\n\nJust looking for a basic example that could help me start it out, thnaks!", 
            "subreddit": "golang", 
            "title": "Implementing a workers pool when dealing with reading and fetching", 
            "url": "https://www.reddit.com/r/golang/comments/70i652/implementing_a_workers_pool_when_dealing_with/"
        }, 
        {
            "author": "Kraigius", 
            "created_utc": 1505577953.0, 
            "domain": "self.golang", 
            "id": "70hoj7", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70hoj7/is_there_any_library_for_building_a_cli_app_with/", 
            "score": 8, 
            "selftext": "Yesterday I moved one of my software to spf13/cobra and apart from a few things I'm satisfied with the result and the cobra library.\n\nHowever, for a different software I want to build rich menus where after a user inputted a command + flag, a menu with different options will appear. Is there any library that can help me do that?", 
            "subreddit": "golang", 
            "title": "Is there any library for building a CLI app with rich menus?", 
            "url": "https://www.reddit.com/r/golang/comments/70hoj7/is_there_any_library_for_building_a_cli_app_with/"
        }, 
        {
            "author": "AssasinPenguins", 
            "created_utc": 1505548644.0, 
            "domain": "github.com", 
            "id": "70fqdu", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70fqdu/i_wrote_a_little_encryptiondecryption_cli_tool_as/", 
            "score": 12, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "I wrote a little encryption/decryption cli tool as my first major Go project. Thoughts and Criticisms are welcome (:", 
            "url": "https://github.com/PenguinGovernor/goxor"
        }, 
        {
            "author": "Tomnnn", 
            "created_utc": 1505545046.0, 
            "domain": "self.golang", 
            "id": "70fjlm", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 23, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70fjlm/kill_child_goroutines_on_sigkill_detect_main/", 
            "score": 3, 
            "selftext": "** --final edit:  **\n\nHere is the issue still happening on a windows 7 machine. https://imgur.com/a/K1XRY\n\nWhen I tried searching for this issue, the only thing I came across was that older versions of mingw bash send SIGKILL instead of SIGTERM when you ctrl-c. My issue has been resolved by running go with native terminals / modern operating systems, but there's the screenshot to show the issue caused by the linked go code when SIGKILL happens. \n\n**rest of the post**\n\n--edit: Here is a code sample to demonstrate what I'm doing. It's in its early phases now so this is basically the entire thing, haha.\n\nhttps://play.golang.org/p/60ucZvDhEA\n\n--edit2: wow, the go playground is very impressive. It even prints the messages back with the delay. That's good to demonstrate my concern - if I SIGKILL a program, you will keep seeing those messages until the resource count is 0 - but in the next phase there will be a variable amount of goroutines and some increment that counter instead of decrementing it. I CAN use a platform native shell so ctrl-c is SIGINT instead of SIGKILL but I am just curious at this point. \n\n--edit3: **ISSUE RESOLVED**\nWell, I did not find a way to trap/detect SIGKILL, but I did test the mingw bug on my windows 10 machine and it appears to have been fixed. My windows 7 machine is what originally had the issue. I'll get a screenshot monday when I have access to that machine just so anyone curious can see the issue. It's pretty amusing to see the ctrl-c, the terminal prompt, and then the goroutines continuing to run in the background and print to the screen after that point. \n\n**Original Post**\n\nHey, I have a ridiculous edge / use case. I am running a little simulation that may turn into a sort of game in the future. I have a struct with a mutex and a count. Several goroutines take turns at different random intervals locking the mutex, decrementing the counter, incrementing their own counter, and finally unlocking the mutex. When the count is 0, the goroutines break their infinite loop and send their own little kill signal to the main thread which closes a for-range loop that is logging messages from the many child processes decrementing the counter. \n\nI hit ctrl-c when running via git bash on a windows OS and this sends SIGKILL instead of SIGINT (documented mingw64 bug, probably not getting fixed anytime soon). I could just use a native windows terminal/cmd, but I'm concerned about what happens if the program crashes or is killed for any other reason. When I killed the main process attached to the terminal, the goroutines were still running and the logic inside the main thread/program/whatever (relatively new to go, my terminology is weak) was still receiving and printing messages to the terminal! Originally I let each goroutine print to the console and thought that was a reasonable case for them to continue printing after the main program died. Now I have the main thread block and read messages from the channels... but that also appears to live on and continue running after the process is killed. \n\nMy larger concern is about the next phase of the project. An unknown number of child processes in the simulation and some that can add to the counter instead of taking from it. It could go on until it is killed.... but tracking down and killing a few thousand goroutines sounds unreasonable. \n\nThere is a lot of noise when searching for this issue because my intentions are a little different. I really hope someone knows of a way to either capture the SIGKILL so I can tell my goroutines to die / panic or detect that the main thread is no longer running. And maybe also get an explanation of how the channel code was still running after receiving a SIGKILL - maybe something to do with how go allocated memory to the heap instead of the stack when it is uncertain about the scope of a variable?\n\nIdeas I've had so far but haven't worked out...\n\n- use os.signal and notify to observe the kill signal and break from the goroutines, failed\n\n- use os.signal and notify to mutate a global variable the goroutines observe and break if it changes, failed (because we can't observe / do anything when SIGKILL happens :( )\n\n- communicate with the main thread with a channel so when it dies the goroutines panic, which kills them all, failed because the channel & logic remained open after the program terminated... somehow....\n\n- communicate via a system file that is updated by the main thread and checked by the goroutines so when it stops getting updated they know the program died, failed because the main thread is already blocked from reading channels and if I move either of those out of the main thread I won't be able to observe the kill signal / thread termination\n\n- do some platform specific crap to monitor the main PID from the goroutines and die if the main one dies, failed because it is a stupid idea since PIDs can be reused and the solution requires a different implementation per OS...\n\n= \n\nAny help would be greatly appreciated :) I know I can do something like a server to tell the goroutines to die / control them manually, but there MUST be something I can do, right? ", 
            "subreddit": "golang", 
            "title": "Kill child goroutines on SIGKILL / detect main thread has been terminated?", 
            "url": "https://www.reddit.com/r/golang/comments/70fjlm/kill_child_goroutines_on_sigkill_detect_main/"
        }, 
        {
            "author": "aristofanio", 
            "created_utc": 1505541533.0, 
            "domain": "self.golang", 
            "id": "70fcck", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70fcck/code_review_simpleeventbus/", 
            "score": 4, 
            "selftext": "Hi! I have a project that is working cool, but I will like to expand. To start I am opening for code review.\n\n[GoEventBus](https://github.com/aristofanio/eventbus)", 
            "subreddit": "golang", 
            "title": "Code Review - SimpleEventBus", 
            "url": "https://www.reddit.com/r/golang/comments/70fcck/code_review_simpleeventbus/"
        }, 
        {
            "author": "puzz", 
            "created_utc": 1505540988.0, 
            "domain": "github.com", 
            "id": "70fb96", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70fb96/golongfuncs_a_helper_tool_for_finding_longcomplex/", 
            "score": 8, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "golongfuncs: a helper tool for finding long/complex functions", 
            "url": "https://github.com/tkrajina/golongfuncs"
        }, 
        {
            "author": "sohamkamani", 
            "created_utc": 1505538297.0, 
            "domain": "youtube.com", 
            "id": "70f52t", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "JustForFunc: Programming in Go", 
                    "author_url": "https://www.youtube.com/channel/UC_BzFbxG2za3bp5NRRRXJSw", 
                    "height": 344, 
                    "html": "<iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/aYkxFbd6luY?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/aYkxFbd6luY/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "justforfunc #6: Flappy Gopher", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 459
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70f52t/creating_flappy_bird_in_go/", 
            "score": 85, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Creating flappy bird in Go", 
            "url": "https://www.youtube.com/watch?v=aYkxFbd6luY"
        }, 
        {
            "author": "losingthefight", 
            "created_utc": 1505520977.0, 
            "domain": "self.golang", 
            "id": "70dtvc", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70dtvc/question_about_security_scanners/", 
            "score": 2, 
            "selftext": "Hello Gophers!\n\nI have been using Go for some side projects since pre 1.0 days, and love the language. I have finally been able to use it full time for backend (React on the front end) professionally, and happy to do so. However, I had a question about some security tools.\n\nGiven the Equifax breach, I am sure security is on the forefront of all of our minds. I wanted to see if any of our repos have potentially vulnerable dependencies. We updated all of our repos to Go 1.9 and we use Glide for our vendor management. \n\nAre there any tools, preferably free, that will scan the dependencies we have for vulnerabilities? We use Chi for our router, and some third party libraries, so we are pretty lean, but I would love to see if there was a tool similar to NSP in the Node ecosystem. My Google skills did not come up with anything; maybe it's not needed? I know scans won't find everything, but anything would be a helpful start.\n\nThanks!", 
            "subreddit": "golang", 
            "title": "Question about Security Scanners", 
            "url": "https://www.reddit.com/r/golang/comments/70dtvc/question_about_security_scanners/"
        }, 
        {
            "author": "sc_levine", 
            "created_utc": 1505517848.0, 
            "domain": "github.com", 
            "id": "70dk3w", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 15, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70dk3w/a_simple_bddstyle_test_organizer_that_embraces/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A simple BDD-style test organizer that embraces the standard library testing package", 
            "url": "https://github.com/sclevine/spec"
        }, 
        {
            "author": "jayposs", 
            "created_utc": 1505513737.0, 
            "domain": "self.golang", 
            "id": "70d66c", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70d66c/errors_type_assertion_mgobulk/", 
            "score": 5, 
            "selftext": "While working with the MongoDB driver, mgo, it occurred to me that the topic of errors with type assertion can be somewhat unclear. Consider the following code which performs a bulk insert of documents into the database.  \n  \n    ... \n    var bulkErrs []mgo.BulkErrorCase\n    var err error\n    _, err = bulk.Run()\n    if err != nil {\n        bulkErrs = err.(*mgo.BulkError).Cases()\n        for _, case := range bulkErrs {\n            log.Println(case.Index, case.Err)\n        }\n    }\n  \nIn this example the returned err contains information on all the errors that occurred during the bulk.Run() process.  \n  \nThe type of variable \"err\" is \"error\", but in this example type assertion is used so features of the underlying actual concrete type can be used.  \n  \nSince the built-in type \"error\" is an interface type, error values can be any concrete type that has a method with the following signature: Error() string.  \n\n", 
            "subreddit": "golang", 
            "title": "Errors, Type Assertion, mgo.Bulk", 
            "url": "https://www.reddit.com/r/golang/comments/70d66c/errors_type_assertion_mgobulk/"
        }, 
        {
            "author": "PifPoof", 
            "created_utc": 1505501914.0, 
            "domain": "sites.google.com", 
            "id": "70by56", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70by56/energy_efficiency_and_go/", 
            "score": 22, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Energy Efficiency and Go", 
            "url": "https://sites.google.com/view/energy-efficiency-languages/"
        }, 
        {
            "author": "ju6ju8Oo", 
            "created_utc": 1505478334.0, 
            "domain": "self.golang", 
            "id": "709hs4", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/709hs4/question_open_source_projects_built_with_chi_gin/", 
            "score": 9, 
            "selftext": "Are there any full projects (like https://github.com/sosedoff/pgweb), or boilerplate (like https://github.com/Massad/gin-boilerplate) that are built with gin, chi, sqlx, or upper/db?\n\nI want to learn how to structure a chi/gin project in an idiomatic way.\nIdeally it's a REST API backend project.\n\nThank you!", 
            "subreddit": "golang", 
            "title": "[Question] open source projects built with chi / gin", 
            "url": "https://www.reddit.com/r/golang/comments/709hs4/question_open_source_projects_built_with_chi_gin/"
        }, 
        {
            "author": "mwholt", 
            "created_utc": 1505448361.0, 
            "domain": "github.com", 
            "id": "707iy0", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/707iy0/merged_revert_implement_caddysponsors_http/", 
            "score": 34, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Merged: Revert \"Implement Caddy-Sponsors HTTP response header\"", 
            "url": "https://github.com/mholt/caddy/pull/1866"
        }, 
        {
            "author": "mc__lovin", 
            "created_utc": 1505447168.0, 
            "domain": "github.com", 
            "id": "707ffk", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/707ffk/simple_pub_sub_in_go_i_read_about_the_pattern_and/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Simple Pub Sub in go I read about the pattern and decided to implement in go as an opportunity to learn go and I am already in love with the language. Feedback appreciated.", 
            "url": "https://github.com/mc-lovin/mcpubsub"
        }, 
        {
            "author": "neurocroc", 
            "created_utc": 1505444120.0, 
            "domain": "medium.com", 
            "id": "7076e7", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7076e7/writing_alfred_workflows_in_go/", 
            "score": 7, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Writing Alfred Workflows in Go", 
            "url": "https://medium.com/@NikitaVoloboev/writing-alfred-workflows-in-go-2a44f62dc432"
        }, 
        {
            "author": "Xavier513", 
            "created_utc": 1505440682.0, 
            "domain": "github.com", 
            "id": "706vll", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/706vll/a_new_tool_similar_with_grpcgateway/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A new tool similar with \"grpc-gateway\"", 
            "url": "https://github.com/vaporz/turbo"
        }, 
        {
            "author": "orthodox_caveman_", 
            "created_utc": 1505439983.0, 
            "domain": "self.golang", 
            "id": "706thl", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/706thl/retrieving_data_from_mysql_using_golang_minor/", 
            "score": 2, 
            "selftext": "Hello Everyone,\n\nI'm a database administrator and I'm starting to learn Golang.\n\nI'm trying to learn how to retrieve an unknown number of rows from an unknown number of columns within in MySQL database table.\n\nI have the following [MySQL Test Table](https://gist.github.com/akalaj/015aa79b5854b728af0baf884f50b827)\n\nI am trying to fetch all the data in the above table using the instructions from the bottom of  [This Guide](http://go-database-sql.org/varcols.html)\n\nI want to run *fmt.Println(values)* against all the values from my example table. But I'm lost as to how to print the values.\n\nHere's the code I've sewn together => [MyCode](https://gist.github.com/akalaj/28684690c42da8e9aa0cea5bd7340b1c)\n\nCan anyone look at \"MyCode\" and tell me how I can simply print the values to the terminal?\n\nAny help would be greatly appreciated.", 
            "subreddit": "golang", 
            "title": "Retrieving Data From MySQL Using Golang [Minor Coding Tip Wanted]", 
            "url": "https://www.reddit.com/r/golang/comments/706thl/retrieving_data_from_mysql_using_golang_minor/"
        }, 
        {
            "author": "farslan", 
            "created_utc": 1505419565.0, 
            "domain": "arslan.io", 
            "id": "704ske", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/704ske/the_ultimate_guide_to_writing_a_go_tool/", 
            "score": 207, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "The ultimate guide to writing a Go tool", 
            "url": "https://arslan.io/2017/09/14/the-ultimate-guide-to-writing-a-go-tool/"
        }, 
        {
            "author": "microo8", 
            "created_utc": 1505417795.0, 
            "domain": "medium.com", 
            "id": "704ldl", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/704ldl/web_components_in_go/", 
            "score": 13, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Web components in go", 
            "url": "https://medium.com/@magyarvladimir/web-components-in-go-3a2488725f68"
        }, 
        {
            "author": "igknighted", 
            "created_utc": 1505415187.0, 
            "domain": "self.golang", 
            "id": "704bjn", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/704bjn/my_first_attempt_at_a_p2p_networking_api_but_its/", 
            "score": 3, 
            "selftext": "So I made this: https://github.com/Animus-Network/p2p/  \n  \nI could definitely use feedback. It's pretty bad IMHO. My end goal is to implement a completely easy to plug (modularized) cryptocurrency purely in GoLang under an MIT license and I have everything else pretty well under hand, but I've been stuck on p2p networking.  \n  \nCurrently I have this API built out to be pluggable with registered functions, much like the HTTP package. However I'm not sure it can handle consensus well.  \n  \nIf anyone else has some experience and can dump some knowledge on me, that would help a boatload.", 
            "subreddit": "golang", 
            "title": "My first attempt at a p2p networking api but it's bad :(", 
            "url": "https://www.reddit.com/r/golang/comments/704bjn/my_first_attempt_at_a_p2p_networking_api_but_its/"
        }, 
        {
            "author": "Eyesbear", 
            "created_utc": 1505414445.0, 
            "domain": "self.golang", 
            "id": "7048sq", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7048sq/does_it_make_sense_to_create_your_own_http/", 
            "score": 3, 
            "selftext": "Often I just want to send a request to an URL and get the response, I find myself repeating a lot of lines with regards to setting headers, parsing the response body, etc... So I am wondering is it ok to create my own wrapper to act as syntactic sugar?", 
            "subreddit": "golang", 
            "title": "Does it make sense to create your own http request wrapper?", 
            "url": "https://www.reddit.com/r/golang/comments/7048sq/does_it_make_sense_to_create_your_own_http/"
        }, 
        {
            "author": "pablostarter", 
            "created_utc": 1505411778.0, 
            "domain": "stackoverflow.com", 
            "id": "703y3r", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/703y3r/question_correct_way_to_import_numeric_csv_data/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "[Question] Correct way to import numeric csv data in go", 
            "url": "https://stackoverflow.com/questions/46225426/correct-way-to-import-numeric-csv-data-in-go"
        }, 
        {
            "author": "GoodKn1ght", 
            "created_utc": 1505409679.0, 
            "domain": "self.golang", 
            "id": "703ppa", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/703ppa/is_there_a_json_field_coverage_verification_tool/", 
            "score": 1, 
            "selftext": "Hey there,\n\nI was wondering if anyone knows of a tool that can take a json string and a struct and verify that the struct has all the fields of the json string. It would be greatly helpful for some integration test suites I'm writing.\n\nIf not, would anyone be interested in such a tool? I'm newish to go but it seems like it could be done relatively simply with something like [jsonparser]\n (https://github.com/buger/jsonparser) and [structs](https://github.com/fatih/structs).", 
            "subreddit": "golang", 
            "title": "Is there a JSON Field Coverage Verification Tool", 
            "url": "https://www.reddit.com/r/golang/comments/703ppa/is_there_a_json_field_coverage_verification_tool/"
        }, 
        {
            "author": "sbinet", 
            "created_utc": 1505407587.0, 
            "domain": "self.golang", 
            "id": "703gwn", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/703gwn/iterm2like_terminal_in_purego/", 
            "score": 6, 
            "selftext": "hi there,\n\nI guess by now everybody has seen the great just-for-func post from Francesc:\n\nhttps://www.reddit.com/r/golang/comments/6zdu89/justforfunc_19_mastering_iopipes/\n\nBeing a Linux user, I was wondering whether anybody had started implementing a pure-Go terminal (like `xterm`, `urxvt`, `iTerm2`, ...) with support for inline images :)", 
            "subreddit": "golang", 
            "title": "iterm2-like terminal, in pure-Go ?", 
            "url": "https://www.reddit.com/r/golang/comments/703gwn/iterm2like_terminal_in_purego/"
        }, 
        {
            "author": "NichtMitCommander", 
            "created_utc": 1505404453.0, 
            "domain": "medium.com", 
            "id": "703463", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 27, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/703463/the_new_kid_in_town_gos_syncmap/", 
            "score": 27, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "The new kid in town \u2014 Go's sync.Map", 
            "url": "https://medium.com/@deckarep/the-new-kid-in-town-gos-sync-map-de24a6bf7c2c"
        }, 
        {
            "author": "joncalhoun", 
            "created_utc": 1505403736.0, 
            "domain": "calhoun.io", 
            "id": "7031ca", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 37, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/7031ca/building_caddy_server_from_source_to_avoid_the/", 
            "score": 31, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Building Caddy Server From Source to avoid the EULA changes", 
            "url": "https://www.calhoun.io/building-caddy-server-from-source/"
        }, 
        {
            "author": "Asoseil", 
            "created_utc": 1505400333.0, 
            "domain": "self.golang", 
            "id": "702o74", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/702o74/listening_for_variable_changes/", 
            "score": 0, 
            "selftext": "Is there a way to define an event that fires when the value of a variable changes?", 
            "subreddit": "golang", 
            "title": "Listening for variable changes", 
            "url": "https://www.reddit.com/r/golang/comments/702o74/listening_for_variable_changes/"
        }, 
        {
            "author": "Traim", 
            "created_utc": 1505390853.0, 
            "domain": "self.golang", 
            "id": "701sea", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/701sea/i_am_interested_into_isomorphic_react_with_go_and/", 
            "score": 5, 
            "selftext": "Thanks :)", 
            "subreddit": "golang", 
            "title": "I am interested into Isomorphic React with Go and I am looking for some good info for that topic, would appreciate your input.", 
            "url": "https://www.reddit.com/r/golang/comments/701sea/i_am_interested_into_isomorphic_react_with_go_and/"
        }, 
        {
            "author": "dareid", 
            "created_utc": 1505387468.0, 
            "domain": "self.golang", 
            "id": "701j7u", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/701j7u/remote_job_backend_machine_learning_engineers/", 
            "score": 4, 
            "selftext": "We are hiring for several positions at Senseye - Backend, Data Integration and Machine Learning Engineer.\n\nSenseye is an exciting and rapidly expanding start up in the field of condition monitoring and prognostics. We are developing a cutting edge cloud product to provide scalable prognostics and advanced condition monitoring to the manufacturing sector. Our team of engineers consist of software engineers, data scientists, UI experts, physicists and mechanical engineers. Following successful investment funding and strong traction from large multi-national clients, we are looking to expand the engineering team.\n\nOur Stack:\n\n - Predominantly Golang backend, with some Node, Java, R and Python\n - Mongo, Redis, Neo4j and InfluxDB data storage\n - Microservice architecture\n - AWS\n - Docker + ECS orchestration\n\nMore Information:\n\n - https://www.senseye.io/career/data-integration-engineer/\n - https://www.senseye.io/career/machine-learning-engineer/\n - https://www.senseye.io/career/software-engineer/", 
            "subreddit": "golang", 
            "title": "[Remote Job] Backend + Machine Learning Engineers, Industrial IoT", 
            "url": "https://www.reddit.com/r/golang/comments/701j7u/remote_job_backend_machine_learning_engineers/"
        }, 
        {
            "author": "vassyz", 
            "created_utc": 1505378151.0, 
            "domain": "self.golang", 
            "id": "700yud", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/700yud/question_would_you_recommend_go_for_web/", 
            "score": 15, 
            "selftext": "I know this is a general question, but maybe someone can help. I've been using primarily Ruby for the past few years, but I worked on a few Node projects and wrote some scripts in Go. I'll soon start working on a greenfield project and the only two language options (imposed by the company) are Node and Go. I'm not sure which one to pick. coming from the Ruby on Rails landscape, I find it very hard to switch to either of them as I'm not impressed with the quality of libraries and frameworks. I am tempted to pick [Beego](https://beego.me/), but I'm scared at some point I will not find the libraries I need and get stuck. They don't even mention testing on their website. The project I have to work on is a dashboard that will be using React for the frontend.", 
            "subreddit": "golang", 
            "title": "[Question] Would you recommend Go for web development?", 
            "url": "https://www.reddit.com/r/golang/comments/700yud/question_would_you_recommend_go_for_web/"
        }, 
        {
            "author": "fark_blarneywine", 
            "created_utc": 1505374110.0, 
            "domain": "github.com", 
            "id": "700qqb", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/700qqb/args_a_minimalist_argumentparsing_library_for_go/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Args: a minimalist argument-parsing library for Go", 
            "url": "https://github.com/dmulholland/args"
        }, 
        {
            "author": "caymanbruce", 
            "created_utc": 1505359345.0, 
            "domain": "self.golang", 
            "id": "6zzq0g", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zzq0g/when_and_how_should_i_read_effective_go/", 
            "score": 5, 
            "selftext": "I am a Golang beginner and just have been learning it for a few days. I've read a few books and some source code and I saw many people recommend [\"Effective Go\"](https://golang.org/doc/effective_go.html). But I am not sure if it is just for me or for other people as well, I find \"Effective Go\" hard to comprehend. I have read most of the contents of the book. There is no doubt it covers many very important concepts and topics. But its language and structure are more like a collection of conference talks rather than a book. How should I read this book? Or should I just leave it now and pick it up later when I know more about Go?", 
            "subreddit": "golang", 
            "title": "When and how should I read Effective Go?", 
            "url": "https://www.reddit.com/r/golang/comments/6zzq0g/when_and_how_should_i_read_effective_go/"
        }, 
        {
            "author": "Rhelza", 
            "created_utc": 1505348450.0, 
            "domain": "self.golang", 
            "id": "6zyqwz", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zyqwz/how_to_cast_int_to_int32/", 
            "score": 1, 
            "selftext": "I have the following function, it works flawlessly\n\n    func (r *system) Quantity() int32 {\n        // r.info.Quantity is type int\n\t    return int32(r.info.Quantity)\n    }\n\nNow I'm trying to cast it to *int32\n\n\n    func (r *system) Quantity() *int32 {\n        // r.info.Quantity is type int\n\t    return int32(&r.info.Quantity)\n    }\n\nBut i get the following error `cannot use &r.info.Quantity (type *int) as type *int32 in return argument`, and of course it seems logic...is there a way to achieve this?", 
            "subreddit": "golang", 
            "title": "how to cast *int to *int32?", 
            "url": "https://www.reddit.com/r/golang/comments/6zyqwz/how_to_cast_int_to_int32/"
        }, 
        {
            "author": "macpla", 
            "created_utc": 1505347747.0, 
            "domain": "self.golang", 
            "id": "6zyoem", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zyoem/dockerfiles_and_go_microservices_what_layout/", 
            "score": 2, 
            "selftext": "Guys how to organize files layout when you designing small containered  ecosystem. Let's say few applications in different containers communicating via ipc. How this cooperate with this go-layout pattern: https://medium.com/golang-learn/go-project-layout-e5213cdcfaa2 ? What's the best practice ? ", 
            "subreddit": "golang", 
            "title": "Dockerfiles and Go microservices. What layout ?", 
            "url": "https://www.reddit.com/r/golang/comments/6zyoem/dockerfiles_and_go_microservices_what_layout/"
        }, 
        {
            "author": "ArneVogel", 
            "created_utc": 1505345627.0, 
            "domain": "caddyserver.com", 
            "id": "6zyhb0", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 51, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zyhb0/caddy_business_use_now_requires_a_commercial/", 
            "score": 51, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Caddy: business use now requires a commercial license", 
            "url": "https://caddyserver.com/blog/accouncing-caddy-commercial-licenses.html"
        }, 
        {
            "author": "cenuij", 
            "created_utc": 1505319717.0, 
            "domain": "groups.google.com", 
            "id": "6zvmuk", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 41, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zvmuk/go_is_being_ported_to_fuchsia_os_core_services/", 
            "score": 165, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go is being ported to Fuchsia OS, core services including network stack will be implemented in Go", 
            "url": "https://groups.google.com/forum/#!topic/golang-dev/2xuYHcP0Fdc"
        }, 
        {
            "author": "mcouturier", 
            "created_utc": 1505315798.0, 
            "domain": "self.golang", 
            "id": "6zv74i", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 28, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zv74i/anyone_tried_sublime_text_3_with_golang/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Anyone tried Sublime Text 3 with golang?", 
            "url": "https://www.reddit.com/r/golang/comments/6zv74i/anyone_tried_sublime_text_3_with_golang/"
        }, 
        {
            "author": "globalgobble", 
            "created_utc": 1505315344.0, 
            "domain": "self.golang", 
            "id": "6zv58r", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zv58r/question_xml_to_json_and_parsing/", 
            "score": 0, 
            "selftext": "I need to parse variety of XMLs that can look like this (simplified):\n\n<configuration> <connections> <add key=\"foo\" connection=\"bar\" /> </connections> <appSetting> <add name=\"foo\" value=\"bar\" /> ... </appSetting>\n\n    others that are specific to some other XMLs\n\nI am interested in collecting the file path+filename,xml attributes and values and transforming it all to simple json { \"k\":\"v\"}.\n\nTo me the easiest way would be to use something like this https://github.com/clbanning/mxj\n\n\n", 
            "subreddit": "golang", 
            "title": "[Question] XML to JSON and parsing", 
            "url": "https://www.reddit.com/r/golang/comments/6zv58r/question_xml_to_json_and_parsing/"
        }, 
        {
            "author": "rmars", 
            "created_utc": 1505311821.0, 
            "domain": "medium.com", 
            "id": "6zurpd", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zurpd/going_total_decoupled_with_type_alias/", 
            "score": 22, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Going total decoupled with type alias", 
            "url": "https://medium.com/@rmars/going-total-decoupled-with-type-alias-824ffd609e36"
        }, 
        {
            "author": "speckz", 
            "created_utc": 1505303228.0, 
            "domain": "foresthoffman.com", 
            "id": "6zu0ct", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zu0ct/localizing_go_to_javascript/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Localizing Go to JavaScript", 
            "url": "http://foresthoffman.com/localizing-go-to-javascript/"
        }, 
        {
            "author": "nefaspartim", 
            "created_utc": 1505290613.0, 
            "domain": "self.golang", 
            "id": "6zt8d9", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zt8d9/newbie_question_properly_reading_xml_from_an_http/", 
            "score": 1, 
            "selftext": "Hi folks,\n\nRelatively new gopher here, but long time reader. I've written a few projects in Go but nothing too major, and definitely nothing that parses xml. So I have an app that sends XML similar to this:\n\n    <Activity>\n        <Type>dancing</Type>\n        <Timestamp>1238138422</Timestamp>\n        <Fruit>Banana</Fruit>\n    </Activity>\n    \n\nThe dilemma is that since I'm reading from an HTTP stream, the XML can get cut off arbitrarily after read. I've so far come up with a hack to check if we're \"inside\" of the stanza by doing a Contains to see if the <Activity> or </Activity> tags are there and having a little flag, but I know there has to be a better way. \n\nCan anyone lend any suggestions? (PS. This is a little side project for myself to learn more Go, its not homework, work work, or otherwise production in any way)", 
            "subreddit": "golang", 
            "title": "[newbie question] Properly reading XML from an HTTP stream and correct way to demarcate packets?", 
            "url": "https://www.reddit.com/r/golang/comments/6zt8d9/newbie_question_properly_reading_xml_from_an_http/"
        }, 
        {
            "author": "ddooo", 
            "created_utc": 1505286208.0, 
            "domain": "github.com", 
            "id": "6zszce", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zszce/a_simple_golang_gorillamux_mvc_template/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "a simple golang gorilla/mux mvc template", 
            "url": "https://github.com/ddo/go-mux-mvc"
        }, 
        {
            "author": "macpla", 
            "created_utc": 1505286131.0, 
            "domain": "self.golang", 
            "id": "6zsz5v", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zsz5v/the_best_go_community_siteschannels/", 
            "score": 1, 
            "selftext": "Hi Gophers I am a newbie with reddit and Go as well so give me some credit if I am asking for some well known knowledge. \n\nI am still on a learning curve with Go, so I end up searching a lot on web about certain problems I have to solve. I would like to consolidate Go community channels to be more productive. On https://golang.org/help/ there is a list of many different sources. Which by your knowledge is the best for asking community about certain problems? Like reddit/stackoverflow/Go Forum/Slack. Which one you use the most? Cheers.", 
            "subreddit": "golang", 
            "title": "The best go community sites/channels.", 
            "url": "https://www.reddit.com/r/golang/comments/6zsz5v/the_best_go_community_siteschannels/"
        }, 
        {
            "author": "claudiofahey", 
            "created_utc": 1505276830.0, 
            "domain": "medium.com", 
            "id": "6zscz1", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zscz1/pipeline_patterns_in_go/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Pipeline Patterns in Go", 
            "url": "https://medium.com/@claudiofahey/pipeline-patterns-in-go-a37bb3a7e61d"
        }, 
        {
            "author": "marksteve4", 
            "created_utc": 1505273072.0, 
            "domain": "self.golang", 
            "id": "6zs28b", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zs28b/why_is_golang_interface_internally_an_int/", 
            "score": 0, 
            "selftext": "This is totally different from java.  I've read many articles, but seems like none of them dealing with the design purpose. Is there a TL;DR version of why is this?", 
            "subreddit": "golang", 
            "title": "why is golang interface internally an int", 
            "url": "https://www.reddit.com/r/golang/comments/6zs28b/why_is_golang_interface_internally_an_int/"
        }, 
        {
            "author": "Simerty", 
            "created_utc": 1505259124.0, 
            "domain": "self.golang", 
            "id": "6zqtko", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 42, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zqtko/i_often_see_people_refer_to_go_as_a_new_language/", 
            "score": 21, 
            "selftext": "I see people complain that Go is still too new or too small. What are some tools/libraries/projects that other languages have that Go is missing? What needs to happen for Go to be considered a language with a robust and thriving ecosystem?", 
            "subreddit": "golang", 
            "title": "I often see people refer to Go as a new language with a budding ecosystem. What are some projects or libraries that are missing?", 
            "url": "https://www.reddit.com/r/golang/comments/6zqtko/i_often_see_people_refer_to_go_as_a_new_language/"
        }, 
        {
            "author": "bordanin", 
            "created_utc": 1505256330.0, 
            "domain": "self.golang", 
            "id": "6zqk1v", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zqk1v/any_recommendation_for_golang_gc_tuning_resources/", 
            "score": 1, 
            "selftext": "I am looking for resources that explains golang garbage collector and  how to tune gc.\n\nDoes golang have the concept of eden and survivor space? And can golang switch gc strategy like concurrent mark sweep vs g1?\n\n", 
            "subreddit": "golang", 
            "title": "Any recommendation for golang gc tuning resources?", 
            "url": "https://www.reddit.com/r/golang/comments/6zqk1v/any_recommendation_for_golang_gc_tuning_resources/"
        }, 
        {
            "author": "powerage99", 
            "created_utc": 1505243308.0, 
            "domain": "github.com", 
            "id": "6zp4mx", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zp4mx/grv_a_terminal_interface_for_viewing_git/", 
            "score": 9, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "GRV - A terminal interface for viewing git repositories", 
            "url": "https://github.com/rgburke/grv"
        }, 
        {
            "author": "throwawaybeginr", 
            "created_utc": 1505242613.0, 
            "domain": "self.golang", 
            "id": "6zp1p8", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 30, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zp1p8/after_several_months_do_you_still_find_it/", 
            "score": 0, 
            "selftext": "So this is a simple question - it would be better for people to answer either way.  (So that answers don't self-select just for people who are/aren't annoyed by it.)\n\nQuestion: if you have programmed in Go for several months (i.e. written at least thousands or tens of thousands of lines of Go) - do you (still) find it annoying that Go's type declarations go after, not before as with other languages?\n\nSimple question, simple answer.  (By the way my expectation is that most answers would be  'not at all, got totally used to it.')", 
            "subreddit": "golang", 
            "title": "after several months do you (still) find it annoying that types come after (not before, like C)?", 
            "url": "https://www.reddit.com/r/golang/comments/6zp1p8/after_several_months_do_you_still_find_it/"
        }, 
        {
            "author": "twek", 
            "created_utc": 1505241994.0, 
            "domain": "self.golang", 
            "id": "6zoz8h", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zoz8h/help_naive_first_run_at_a_flow_based_programing/", 
            "score": 1, 
            "selftext": "Hello gophers, I'm toying with the idea of creating an at runtime reconfigurable gui driven flow based programing framework (basically a [nodered](https://nodered.org/) like system). \n\nWhile this is mostly an academic I plan on using it to run some home automation features.\n\nAnyways, I was hoping to get some feedback on the programing API visa vi what its like to define a \"Node\"\n\n*DISCLAIMER* this code is pretty rough but I would like any feedback you can give me!\n\n[https://github.com/pborges/flow/](https://github.com/pborges/flow/)", 
            "subreddit": "golang", 
            "title": "Help: Naive first run at a flow based programing framework", 
            "url": "https://www.reddit.com/r/golang/comments/6zoz8h/help_naive_first_run_at_a_flow_based_programing/"
        }, 
        {
            "author": "borderline1p", 
            "created_utc": 1505239162.0, 
            "domain": "self.golang", 
            "id": "6zoo4y", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zoo4y/exercises_for_learning_go_channel/", 
            "score": 2, 
            "selftext": "Is there a list of exercise that once can tackle for getting deep understanding of channel? Kind of like the famous [99 problem](http://aperiodic.net/phil/scala/s-99/) or project euler\n\n\n\n", 
            "subreddit": "golang", 
            "title": "Exercises for learning go channel?", 
            "url": "https://www.reddit.com/r/golang/comments/6zoo4y/exercises_for_learning_go_channel/"
        }, 
        {
            "author": "funny_falcon", 
            "created_utc": 1505237173.0, 
            "domain": "go-review.googlesource.com", 
            "id": "6zoggw", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zoggw/go_110_will_include_significantly_improved_timer/", 
            "score": 140, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go 1.10 will include \"Significantly improved timer performance for multi-core machines\"", 
            "url": "https://go-review.googlesource.com/c/go/+/34784"
        }, 
        {
            "author": "emergebtc", 
            "created_utc": 1505233880.0, 
            "domain": "self.golang", 
            "id": "6zo3q0", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 27, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zo3q0/help_is_it_me_or_are_godocs_hard_to_read/", 
            "score": 3, 
            "selftext": "I come from Python and most libraries are really WELL documented, and even beginners could understand what functions do.\n\nIs there a trick or a standard in reading the docs? or are the docs im reading just real bad?\n\n(golos-go)", 
            "subreddit": "golang", 
            "title": "HELP! Is it me or are godocs hard to read?", 
            "url": "https://www.reddit.com/r/golang/comments/6zo3q0/help_is_it_me_or_are_godocs_hard_to_read/"
        }, 
        {
            "author": "neuralprison", 
            "created_utc": 1505224998.0, 
            "domain": "github.com", 
            "id": "6zn4u7", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 24, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zn4u7/go_110_will_include_a_shuffle_function_in_mathrand/", 
            "score": 71, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go 1.10 will include a Shuffle function in math/rand", 
            "url": "https://github.com/golang/go/issues/20480"
        }, 
        {
            "author": "TheMerovius", 
            "created_utc": 1505207513.0, 
            "domain": "blog.merovius.de", 
            "id": "6zlu7l", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 51, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zlu7l/diminishing_returns_of_static_typing/", 
            "score": 41, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Diminishing returns of static typing", 
            "url": "https://blog.merovius.de/2017/09/12/diminishing-returns-of-static-typing.html"
        }, 
        {
            "author": "marksteve4", 
            "created_utc": 1505193836.0, 
            "domain": "self.golang", 
            "id": "6zkzwu", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 37, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zkzwu/is_contextcontext_passbyvalue/", 
            "score": 2, 
            "selftext": "I see a lot of code has \"ctx context.Context()\" as parameter. e.g., https://github.com/bborbe/cron/blob/20d491ed207180aacf635b2006c0c293fd2ab9e1/cron.go#L6\n\nIf this is pass-by-value, isn't it not efficient?", 
            "subreddit": "golang", 
            "title": "is context.Context() pass-by-value?", 
            "url": "https://www.reddit.com/r/golang/comments/6zkzwu/is_contextcontext_passbyvalue/"
        }, 
        {
            "author": "zpatrick319", 
            "created_utc": 1505174911.0, 
            "domain": "github.com", 
            "id": "6zjdus", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zjdus/context_cli_tool_to_make_it_easier_to_update_your/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "context: cli tool to make it easier to update your shell environment for different contexts/projects", 
            "url": "https://github.com/zpatrick/context"
        }, 
        {
            "author": "bloomt1990", 
            "created_utc": 1505167356.0, 
            "domain": "self.golang", 
            "id": "6zinz7", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zinz7/graphql_server_written_in_go/", 
            "score": 15, 
            "selftext": "Has anyone created a graphql server written in golang? \n\nHere are couple of github pages for implementing graphql\n\nhttps://github.com/graphql-go/graphql\nhttps://github.com/neelance/graphql-go\n\nI am wondering if anyone has used them and what there experience is like.", 
            "subreddit": "golang", 
            "title": "Graphql server written in go?", 
            "url": "https://www.reddit.com/r/golang/comments/6zinz7/graphql_server_written_in_go/"
        }, 
        {
            "author": "nesigma", 
            "created_utc": 1505166008.0, 
            "domain": "self.golang", 
            "id": "6ziix2", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ziix2/question_about_ranging_over_channels/", 
            "score": 5, 
            "selftext": "Hey all! I am writing a function that will read messages sent to a channel and used like this:\n\n    go readMessages(messenger)\n\nWhere `messenger` is the channel of string messages.\n\nI am confused about the difference between this:\n\n    func readMessages(messenger <-chan string) {\n    \tfor {\n    \t\tselect {\n    \t\tcase msg := <-messenger:\n    \t\t\tfmt.Println(msg)\n    \t\t}\n    \t}\n    }\n\nand this:\n\n    func readMessages(messenger <-chan string) {\n    \tfor msg := range messenger {\n    \t\tfmt.Println(msg)\n    \t}\n    }\n\nAre they equivalent? Or Should I prefer one over the other and why?", 
            "subreddit": "golang", 
            "title": "Question about ranging over channels", 
            "url": "https://www.reddit.com/r/golang/comments/6ziix2/question_about_ranging_over_channels/"
        }, 
        {
            "author": "kylequest", 
            "created_utc": 1505165505.0, 
            "domain": "medium.com", 
            "id": "6zih3o", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 23, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zih3o/go_project_layout_for_new_go_devs/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go Project Layout for new Go Devs", 
            "url": "https://medium.com/golang-learn/go-project-layout-e5213cdcfaa2"
        }, 
        {
            "author": "ddooo", 
            "created_utc": 1505162375.0, 
            "domain": "github.com", 
            "id": "6zi53d", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zi53d/host_vue_app_with_router_history_mode_in_golang/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Host Vue app with Router history mode in Golang \ud83d\udc4c", 
            "url": "https://github.com/ddo/go-vue-handler"
        }, 
        {
            "author": "julianxxxx", 
            "created_utc": 1505160161.0, 
            "domain": "self.golang", 
            "id": "6zhwj7", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zhwj7/serving_static_content_and_access_to_http_request/", 
            "score": 0, 
            "selftext": "I'm running a website with a very basic webserver\n\n    http.Handle(\"/\", http.FileServer(http.Dir(\"static\")))\n    http.Handle(\"/ws\", websocket.Handler(EchoServer)) \n\n    log.Println(\"Listening at 3000...\")\n    if err := http.ListenAndServe(\":3000\", nil); err != nil {\n        log.Fatal(\"ListenAndServe:\", err)\n    }\n\nI need access to http.responseWriter in particular for the IP's of connecting client. I thought about using http.HandlerFunc, but nothing is served when I visit localhost:3000.\n\n    http.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\n         http.FileServer(http.Dir(\"static\"))\n     })\n    http.Handle(\"/ws\", websocket.Handler(EchoServer)) \n    log.Println(\"Listening at 3000...\")\n    if err := http.ListenAndServe(\":3000\", nil); err != nil {\n        log.Fatal(\"ListenAndServe:\", err)\n    }\n\nHow can I server static files and still have access to http.request?\nThanks!", 
            "subreddit": "golang", 
            "title": "Serving static content and access to http request by client?", 
            "url": "https://www.reddit.com/r/golang/comments/6zhwj7/serving_static_content_and_access_to_http_request/"
        }, 
        {
            "author": "lyoshenka", 
            "created_utc": 1505148159.0, 
            "domain": "gist.github.com", 
            "id": "6zgkwp", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zgkwp/simple_wrapper_for_committingrollbacking_and/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Simple wrapper for committing/rollbacking and error handling of *sql.Tx transactions", 
            "url": "https://gist.github.com/lyoshenka/2b969e6461978e6a096501bca5cdb369"
        }, 
        {
            "author": "Alvarowolfx", 
            "created_utc": 1505147834.0, 
            "domain": "medium.com", 
            "id": "6zgjm0", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zgjm0/getting_started_with_onion_omega2_and_golang/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Getting started with Onion omega2 and Golang", 
            "url": "https://medium.com/@alvaroviebrantz/getting-started-with-onion-omega2-and-golang-d625bb20554"
        }, 
        {
            "author": "Aetheus", 
            "created_utc": 1505143877.0, 
            "domain": "self.golang", 
            "id": "6zg43a", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zg43a/golang_packagedirectory_conventions_for/", 
            "score": 0, 
            "selftext": "Let's consider your typical web application. In an MVC application, you may eventually want to introduce a \"Service\" layer that abstracts complex business logic such as user registration. So in your controller, you'd pass an instance of a `services.User` struct and simply call the `Register()` method on it. \n\nNow, if `services.User` was simply a struct, we could have a relatively simple source code structure, like so:\n\n    - [other directories here]/\n    - services/\n        - user.go\n        - [other service structs here]\n    - main.go\n\nAnd the `services/user.go` would look like so : \n\n    package services\n    \n    type User struct { ... }\n    func NewUserService(){ ... }\n    func (u User) Register() { ... }\n\nWhich is all reasonably easy to read, so far. Let's say we take it one step further. In the spirit of making our web app easily testable, we'll turn all our Service structs into Service interfaces. That way, we can easily mock them for unit tests. For that purpose, we'll create a \"AppUser\" struct (for use in the actual application) and a \"MapUser\" struct (for mocking purposes). Placing the interfaces and the implementations in the same `services` directory makes sense - they're all still `service` code, after all.\n\nOur `services` folder now looks like this:\n\n    - services/\n        - app_user.go // the AppUser struct\n        - [other services here]\n        - map_user.go // the MapUser struct\n        - [other services here]\n        - user.go  // the User interface\n        - [other service structs here]\n\nAs you can tell, this makes the `services` package and directory a lot more difficult to handle - you can easily imagine how chaotic it would look with a dozen different interfaces, each of which at least have at least 1 implementation. If I change the `User` interface in `user.go`, I'd have to dart all across the directory listing to find all it's implementations to change, which is not at all ideal.\n\nAdditionally, it becomes pretty crazy when you type `services.New(...)` and you're greeted with perhaps 50 or so autocomplete suggestions ; the `services` package has become nothing but a shambling monster.\n\nOne of the simplest ideas I had to solve this is to go against convention and embrace repetition: \n\n    - services/\n        - userService/\n            - app.go // the AppUser struct\n            - map.go // the MapUser struct\n            - interface.go  // the User interface\n        - [other services here]\n        \nThis keeps all the UserService related code in a logical, self contained package. But having to constantly refer to `userService.UserService` is pretty darn ugly.\n\nI've looked at all kinds of web application templates, and none of them (beyond the ones that are incredibly barebones) have an elegant solution to this structural. Most (if not all) of them simply omit interfaces completely to solve it, which is unacceptable. \n\nAny tips or hints?", 
            "subreddit": "golang", 
            "title": "Golang package/directory conventions for Interfaces and their implementations?", 
            "url": "https://www.reddit.com/r/golang/comments/6zg43a/golang_packagedirectory_conventions_for/"
        }, 
        {
            "author": "floe_", 
            "created_utc": 1505138315.0, 
            "domain": "self.golang", 
            "id": "6zfjqy", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zfjqy/we_need_a_dedicated_golang_ide_on_android/", 
            "score": 0, 
            "selftext": "If I'm not wrong, there is no dedicated golang IDE on android. There are other ide's like Dcodr and Online Compiler, but they use very old golang releases and incorporate golang very poorly when compared to other languages. Almost like they are including it for the sake of it.\n\nA Golang IDE on a mobile will be better for quick coding on the go, and could serve beginners better that the heavily restricted Go playground.", 
            "subreddit": "golang", 
            "title": "We need a dedicated Golang IDE on android!", 
            "url": "https://www.reddit.com/r/golang/comments/6zfjqy/we_need_a_dedicated_golang_ide_on_android/"
        }, 
        {
            "author": "throwawaybeginr", 
            "created_utc": 1505126729.0, 
            "domain": "self.golang", 
            "id": "6zelpj", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zelpj/how_far_along_is_go_2_too_late_for_basic_syntax/", 
            "score": 0, 
            "selftext": "I'm curious whether the Go 2 process is far enough to entirely change the look of the language or not.  (I mean its syntax).  I am just asking a factual question - not whether it's a good or bad idea.", 
            "subreddit": "golang", 
            "title": "how far along is go 2? too late for basic syntax?", 
            "url": "https://www.reddit.com/r/golang/comments/6zelpj/how_far_along_is_go_2_too_late_for_basic_syntax/"
        }, 
        {
            "author": "chewxy", 
            "created_utc": 1505125686.0, 
            "domain": "blog.chewxy.com", 
            "id": "6zejeo", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 31, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zejeo/tensor_refactor_a_go_experience_report_may/", 
            "score": 56, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Tensor Refactor: A Go Experience Report (May Contain Thoughts about Generics In Go)", 
            "url": "https://blog.chewxy.com/2017/09/11/tensor-refactor/"
        }, 
        {
            "author": "campoy", 
            "created_utc": 1505113678.0, 
            "domain": "youtube.com", 
            "id": "6zdu89", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "JustForFunc: Programming in Go", 
                    "author_url": "https://www.youtube.com/channel/UC_BzFbxG2za3bp5NRRRXJSw", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/videoseries?list=PL64wiCrrxh4Jisi7OcCJIUpguV_f5jGnZ\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/LHZ2CAZE6Gs/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "justforfunc #19: mastering io.Pipes", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 21, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zdu89/justforfunc_19_mastering_iopipes/", 
            "score": 67, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "justforfunc #19: mastering io.Pipes", 
            "url": "https://www.youtube.com/watch?v=LHZ2CAZE6Gs&list=PL64wiCrrxh4Jisi7OcCJIUpguV_f5jGnZ"
        }, 
        {
            "author": "digitalcraftsman_", 
            "created_utc": 1505112259.0, 
            "domain": "gohugo.io", 
            "id": "6zdr6f", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zdr6f/hugo_027_has_been_released_fast_and_flexible/", 
            "score": 29, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Hugo 0.27 has been released: Fast and Flexible Related Content!", 
            "url": "https://gohugo.io/news/0.27-relnotes/"
        }, 
        {
            "author": "gohacker", 
            "created_utc": 1505111225.0, 
            "domain": "godoc.org", 
            "id": "6zdp0g", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zdp0g/the_plugin_packageis_it_a_failure/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "The plugin package\u2014is it a failure?", 
            "url": "https://godoc.org/plugin?importers"
        }, 
        {
            "author": "Indu_Pillai", 
            "created_utc": 1505102664.0, 
            "domain": "self.golang", 
            "id": "6zd3rw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zd3rw/why_does_the_following_go_program_need_the/", 
            "score": 0, 
            "selftext": "I'm following a book which shows the following example.\n\n    package main\n\n    import (\n        \"fmt\"\n    )\n\n    const (\n        KB = 1024\n        MB = 1048576          //KB * 1024\n        GB = 1073741824       //MB * 1024\n        TB = 1099511627776    //GB * 1024\n        PB = 1125899906842624 //TB * 1024\n    )\n\n    type ByteSize float64\n\n    func (b ByteSize) String() string {\n        switch {\n        case b >= PB:\n            return \"Very Big\"\n        case b >= TB:\n            return fmt.Sprintf(\"%.2fTB\", b/TB)\n        case b >= GB:\n            return fmt.Sprintf(\"%.2fGB\", b/GB)\n        case b >= MB:\n            return fmt.Sprintf(\"%.2fMB\", b/MB)\n        case b >= KB:\n            return fmt.Sprintf(\"%.2fKB\", b/KB)\n        }\n        return fmt.Sprintf(\"%dB\", b)\n    }\n\n    func main() {\n        fmt.Println(ByteSize(2048))\n        fmt.Println(ByteSize(3292528.64))\n    }\n\nWhen I run this program it gives me the following output (in human readable data size units).\n\n\n    2.00KB\n    3.14MB\n\nBut when I change the name of the function called String() to anything else, or if I lower-case the S in String, it gives me the following output.\n\n\n    2048\n    3.29252864e+06\n\n\nWhat is the reason behind that? Is there some String() function attached to some interface and our ByteSize type satisfies that interface? I mean what the hell?", 
            "subreddit": "golang", 
            "title": "Why does the following Go program need the function's name to be String() and not anything else?", 
            "url": "https://www.reddit.com/r/golang/comments/6zd3rw/why_does_the_following_go_program_need_the/"
        }, 
        {
            "author": "MapsNApps", 
            "created_utc": 1505078952.0, 
            "domain": "github.com", 
            "id": "6zb0z7", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zb0z7/a_quadtree_implemented_in_go/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A Quadtree implemented in Go", 
            "url": "https://github.com/JamesMilnerUK/quadtree-go"
        }, 
        {
            "author": "paradoxops", 
            "created_utc": 1505067312.0, 
            "domain": "self.golang", 
            "id": "6z9uhy", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z9uhy/what_is_the_purpose_of_the_return_statement_in/", 
            "score": 0, 
            "selftext": "Hey guys, I'm going through [this exercise](https://tour.golang.org/concurrency/5) in a **A Tour of Go**. Can someone explain to me what is the purpose of the **return** statement in this snippet?\n\n\tfunc fibonacci(c, quit chan int) {\n\t\tx, y := 0, 1\n\t\tfor {\n\t\t\tselect {\n\t\t\tcase c <- x:\n\t\t\t\tx, y = y, x+y\n\t\t\tcase <-quit:\n\t\t\t\tfmt.Println(\"quit\")\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\nWhat is it returning? The fibonacci function doesn't even specify a a return type (I thought you had to specify a return type if you're going to return something). Can someone please help me understand why that isn't just a random return statement?\n\nThanks", 
            "subreddit": "golang", 
            "title": "What is the purpose of the return statement in this code?", 
            "url": "https://www.reddit.com/r/golang/comments/6z9uhy/what_is_the_purpose_of_the_return_statement_in/"
        }, 
        {
            "author": "acisternino", 
            "created_utc": 1505066655.0, 
            "domain": "github.com", 
            "id": "6z9s4a", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z9s4a/thestruktureide_ide_built_for_go_with_go/", 
            "score": 7, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "thestrukture/IDE - IDE built for Go with Go", 
            "url": "https://github.com/thestrukture/IDE"
        }, 
        {
            "author": "tim-tosi", 
            "created_utc": 1505064890.0, 
            "domain": "github.com", 
            "id": "6z9lml", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z9lml/bully_algorithm_visualization/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Bully algorithm & visualization", 
            "url": "https://github.com/TimTosi/bully-algorithm"
        }, 
        {
            "author": "msgtonaveen", 
            "created_utc": 1505060207.0, 
            "domain": "golangbot.com", 
            "id": "6z94lb", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 15, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z94lb/composition_using_go/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Composition using Go", 
            "url": "https://golangbot.com/inheritance/"
        }, 
        {
            "author": "teh_cmc", 
            "created_utc": 1505048415.0, 
            "domain": "github.com", 
            "id": "6z83ng", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z83ng/gosfml_uptodate_go_bindings_for_sfml/", 
            "score": 19, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "go-sfml: up-to-date Go bindings for SFML", 
            "url": "https://github.com/teh-cmc/go-sfml"
        }, 
        {
            "author": "cakula", 
            "created_utc": 1505047038.0, 
            "domain": "stackoverflow.com", 
            "id": "6z80db", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z80db/parallel_saxpy_implementation_in_go_isnt_scaling/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Parallel saxpy implementation in Go isn't scaling well across cores", 
            "url": "https://stackoverflow.com/q/46140741/3358087"
        }, 
        {
            "author": "vehlad_durjan", 
            "created_utc": 1505045347.0, 
            "domain": "self.golang", 
            "id": "6z7wk3", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z7wk3/why_is_this_code_snippet_blocking/", 
            "score": 2, 
            "selftext": "Sorry if a noob question. I just started learning Go yesterday, went through go tour, a bunch of blog posts, some example repos; and was feeling comfortable giving it a shot. \n\nI am trying to read a file of email addresses, and return a channel from a function of `mail.Address` type. I can't understand why it blocks without any output or `deadlock` failure. Here is the code\n\n    package main\n    \n    import (\n    \t\"bufio\"\n    \t\"fmt\"\n    \t\"net/mail\"\n    \t\"os\"\n    )\n    \n    const addressListFile = \"./emails.txt\"\n    \n    func GetAddressChan(path string) <-chan *mail.Address {\n    \taddrFile, err := os.Open(path)\n    \tdefer addrFile.Close()\n    \n    \tif err != nil {\n    \t\tpanic(err)\n    \t}\n    \n    \tscanner := bufio.NewScanner(addrFile)\n    \tif err := scanner.Err(); err != nil {\n    \t\tpanic(err)\n    \t}\n    \n    \taddrCh := make(chan *mail.Address)\n    \tfor scanner.Scan() {\n    \t\taddr, err := mail.ParseAddress(scanner.Text())\n    \t\tif err != nil {\n    \t\t\tpanic(err)\n    \t\t}\n    \n    \t\taddrCh <- addr\n    \t}\n    \tclose(addrCh)\n    \n    \treturn addrCh\n    }\n    \n    func main() {\n    \taddrCh := GetAddressChan(addressListFile)\n    \n    \tgo func() {\n    \t\tfor addr := range addrCh {\n    \t\t\tfmt.Println(addr)\n    \t\t}\n    \t}()\n    }\n    \nIt works if instead of return a channel from `GetAddressChan`, I pass it one as an argument and run `GetAddressChan` as a goroutine.\n\nAny comments on how I am not writing idiomatic Go are welcome as well.\n\nEdit: I've also tried putting the goroutine inside `GetAddressChan` instead of `main` as well, in which case the program exits without printing anything:\n\n\taddrCh := make(chan *mail.Address)\n\tgo func() {\n\t\tfor scanner.Scan() {\n\t\t\taddr, err := mail.ParseAddress(scanner.Text())\n\t\t\tif err != nil {\n\t\t\t\tpanic(err)\n\t\t\t}\n\n\t\t\taddrCh <- addr\n\t\t}\n\t\tclose(addrCh)\n\t}()\n\n\treturn addrCh\n\nUpdate: It is `bufio.Scan` that is causing this issue I think. It works as expected if I use a normal slice/array of strings instead of reading using `bufio.Scanner`", 
            "subreddit": "golang", 
            "title": "Why is this code snippet blocking?", 
            "url": "https://www.reddit.com/r/golang/comments/6z7wk3/why_is_this_code_snippet_blocking/"
        }, 
        {
            "author": "chocol4tebubble5", 
            "created_utc": 1505035874.0, 
            "domain": "isitabird.mckeogh.tech", 
            "id": "6z7e1e", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z7e1e/tensorflow_bird_detector/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "TensorFlow Bird Detector", 
            "url": "https://isitabird.mckeogh.tech"
        }, 
        {
            "author": "walden_or", 
            "created_utc": 1505020737.0, 
            "domain": "self.golang", 
            "id": "6z6l8f", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z6l8f/kth_highest_of_two_sorted_arrays/", 
            "score": 1, 
            "selftext": "I'm new to Go and I need another set of eyes. Here's a link to the code https://stackoverflow.com/questions/46137083/kth-highest-of-two-sorted-arrays\n\nWhen the value of k is set to 2 through 6, it seems to work, but when it's set to 1, the result is set to 0, when it should be 1. When it's set to 7 the result is 3 and setting it higher than 7, the execution times out. Am I just totally over looking an error in my logic?\n\nAny help is appreciated. Thanks!", 
            "subreddit": "golang", 
            "title": "k'th highest of two sorted arrays", 
            "url": "https://www.reddit.com/r/golang/comments/6z6l8f/kth_highest_of_two_sorted_arrays/"
        }, 
        {
            "author": "Agasw", 
            "created_utc": 1505012239.0, 
            "domain": "morpheusdata.com", 
            "id": "6z5zne", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z5zne/what_does_the_future_hold_for_dbas/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "What Does the Future Hold for DBAs?", 
            "url": "https://morpheusdata.com/blog/2017-09-08-what-does-the-future-hold-for-dbas-"
        }, 
        {
            "author": "dinkumator", 
            "created_utc": 1505011652.0, 
            "domain": "github.com", 
            "id": "6z5y2z", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z5y2z/a_1function_crossplatform_package_to_report/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A 1-function cross-platform package to report system memory", 
            "url": "https://github.com/pbnjay/memory"
        }, 
        {
            "author": "earthboundkid", 
            "created_utc": 1504998488.0, 
            "domain": "github.com", 
            "id": "6z4vwp", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z4vwp/password_generator_cli_and_website_in_go/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Password generator CLI and website in Go", 
            "url": "https://github.com/carlmjohnson/opensesame"
        }, 
        {
            "author": "lukechampine", 
            "created_utc": 1504993914.0, 
            "domain": "github.com", 
            "id": "6z4h6u", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z4h6u/jsteg_hide_secrets_in_jpeg_images/", 
            "score": 43, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "jsteg - hide secrets in JPEG images", 
            "url": "https://github.com/lukechampine/jsteg"
        }, 
        {
            "author": "idenxx", 
            "created_utc": 1504992371.0, 
            "domain": "github.com", 
            "id": "6z4c3x", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 16, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z4c3x/100_typesafe_go_orm_with_code_generation_and/", 
            "score": 35, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "100% typesafe Go ORM with code generation and MySQL, PostgreSQL, Sqlite3, SQL Server support", 
            "url": "https://github.com/jirfag/go-queryset"
        }, 
        {
            "author": "Rhelza", 
            "created_utc": 1504979793.0, 
            "domain": "self.golang", 
            "id": "6z34wr", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z34wr/graphql_docker_api_written_in_golang/", 
            "score": 28, 
            "selftext": "On my learning process of GraphQL, i was looking for a use-case to get started, so I decided to write a wrapper in Golang for the Docker API.\n\nThen I found myself learning two things at once, GraphQL and the Docker API, pretty exciting though.\n\nSo here's the project in case someone wants to give it a try, it's not fully implemented. Query-ready fields can be found in the description, on the TODO list. Of course it is available as a docker image as well :) \n\nProject: https://github.com/klud1/graphql-docker-api", 
            "subreddit": "golang", 
            "title": "GraphQL Docker API written in golang", 
            "url": "https://www.reddit.com/r/golang/comments/6z34wr/graphql_docker_api_written_in_golang/"
        }, 
        {
            "author": "SamJTWIV", 
            "created_utc": 1504979434.0, 
            "domain": "self.golang", 
            "id": "6z33na", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z33na/im_having_problems_with_osopenfile_help/", 
            "score": 5, 
            "selftext": "I am pretty sure that its the perm FileMode that is tripping me up. I don't really understand it. It seems to be a system of numbers to tell the file what you are allowed to do. How are you supposed to know which numbers will allow what you want? and isn't this just and more complicated repetition of the flag you pass to the function? This has been frustrating and confusing.", 
            "subreddit": "golang", 
            "title": "Im having problems with os.OpenFile help appreciated.", 
            "url": "https://www.reddit.com/r/golang/comments/6z33na/im_having_problems_with_osopenfile_help/"
        }, 
        {
            "author": "m4ng0squ4sh", 
            "created_utc": 1504960556.0, 
            "domain": "github.com", 
            "id": "6z1glq", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z1glq/event_a_simple_event_emitter_for_go/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Event - A simple event emitter for Go", 
            "url": "https://github.com/desertbit/event"
        }, 
        {
            "author": "0xjnml", 
            "created_utc": 1504959719.0, 
            "domain": "github.com", 
            "id": "6z1en5", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6z1en5/cznicfile_support_write_ahead_logging/", 
            "score": 22, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "cznic/file: Support write ahead logging", 
            "url": "https://github.com/cznic/file"
        }, 
        {
            "author": "Kraigius", 
            "created_utc": 1504923686.0, 
            "domain": "self.golang", 
            "id": "6yz9vj", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yz9vj/can_you_help_me_figure_out_why_some_files_are/", 
            "score": 3, 
            "selftext": "Hello,\nBasically I have a few hundred data entry that contain links to images that I want to queue up and download in parallel.\n\nHowever, I always end up with one of them being corrupted. My guess is that there's some flaw in my logic and maybe the last one in the queue is getting the hammer.\n\nHere's some code snippet: https://play.golang.org/p/E0Dd4bm4Vt\nDo keep in mind that I actually queue up hundred of different links.\n\n\nI also have another problem that maybe you can help me with.\nFor a few of them I always get a tls handshake timeout error. I tried to get rid of it by defining some timeout with my own http.Client instead of using the default one. However, I ended up with lots of error about sockets being already closed and what not.\n\nAs per jerf comment, I came up with this awful code that limit to 50 downloads (the const says 25 but the code does 50): https://play.golang.org/p/N7zujDQ-Xy it doesn't seems to corrupt so far.", 
            "subreddit": "golang", 
            "title": "Can you help me figure out why some files are corrupted when downloading with http.Get?", 
            "url": "https://www.reddit.com/r/golang/comments/6yz9vj/can_you_help_me_figure_out_why_some_files_are/"
        }, 
        {
            "author": "jdevelop", 
            "created_utc": 1504921762.0, 
            "domain": "github.com", 
            "id": "6yz4j6", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yz4j6/simple_tool_to_refresh_an_mfa_session_token_for/", 
            "score": 7, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Simple tool to refresh an MFA session token for AWS IAM account (using STS)", 
            "url": "https://github.com/jdevelop/go-aws-mfa"
        }, 
        {
            "author": "icholy", 
            "created_utc": 1504912690.0, 
            "domain": "github.com", 
            "id": "6yyd3j", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yyd3j/implementation_of_martin_fowlers_recurring_events/", 
            "score": 18, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Implementation of Martin Fowler's Recurring Events for Calendars", 
            "url": "https://github.com/icholy/recurring"
        }, 
        {
            "author": "alash3al", 
            "created_utc": 1504910952.0, 
            "domain": "github.com", 
            "id": "6yy78h", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yy78h/ssh_into_any_container_on_your_server_from/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "SSH into any container on your server from anywhere", 
            "url": "https://github.com/alash3al/dockssh"
        }, 
        {
            "author": "posener", 
            "created_utc": 1504904718.0, 
            "domain": "gist.github.com", 
            "id": "6yxlhm", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 19, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yxlhm/story_writing_scripts_with_go/", 
            "score": 37, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Story: Writing Scripts with Go", 
            "url": "https://gist.github.com/posener/73ffd326d88483df6b1cb66e8ed1e0bd"
        }, 
        {
            "author": "chocol4tebubble5", 
            "created_utc": 1504901393.0, 
            "domain": "self.golang", 
            "id": "6yx97f", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yx97f/statically_linking_tensorflow/", 
            "score": 7, 
            "selftext": "Hello!\n\nI am trying to make a completely self contained executable for my project, but I am unable to statically link TensorFlow. No linking flags or bazel build options help.\n\nAny advice?\n\nThanks!", 
            "subreddit": "golang", 
            "title": "Statically linking TensorFlow?", 
            "url": "https://www.reddit.com/r/golang/comments/6yx97f/statically_linking_tensorflow/"
        }, 
        {
            "author": "mrkaspa", 
            "created_utc": 1504896601.0, 
            "domain": "self.golang", 
            "id": "6ywr5r", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 15, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ywr5r/is_there_a_programming_language_that_transpiles/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Is there a programming language that transpiles to golang and remove all the quirks of it?", 
            "url": "https://www.reddit.com/r/golang/comments/6ywr5r/is_there_a_programming_language_that_transpiles/"
        }, 
        {
            "author": "whitesoapchicken", 
            "created_utc": 1504887660.0, 
            "domain": "self.golang", 
            "id": "6yvswu", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yvswu/questiongothic_in_gothmultiple_sessions/", 
            "score": 3, 
            "selftext": "It is claimed that gothic is a easy to use version of goth but I found from the code that it only has one session for each provider. It uses providerName+SessionName as session key and the sessionname is const. What if I want to manage multiple sessions as I want to let multiple users login. Do I have to go back to use goth? one session per user right?", 
            "subreddit": "golang", 
            "title": "[question]Gothic in Goth:multiple sessions", 
            "url": "https://www.reddit.com/r/golang/comments/6yvswu/questiongothic_in_gothmultiple_sessions/"
        }, 
        {
            "author": "AlekSilver", 
            "created_utc": 1504886879.0, 
            "domain": "medium.com", 
            "id": "6yvq1v", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yvq1v/go_concurrency_considered_harmful/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go concurrency considered harmful", 
            "url": "https://medium.com/@sargun/go-concurrency-considered-harmful-26499a422830"
        }, 
        {
            "author": "cep221", 
            "created_utc": 1504886550.0, 
            "domain": "medium.com", 
            "id": "6yvost", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yvost/go_experience_report_gos_type_system_when_gos/", 
            "score": 16, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go Experience report: Go's type system : When Go's type system impedes library interoperability", 
            "url": "https://medium.com/@cbca96ef73b8/c4d4dfcc964c"
        }, 
        {
            "author": "Aetheus", 
            "created_utc": 1504877240.0, 
            "domain": "self.golang", 
            "id": "6yur14", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yur14/within_the_handler_of_a_typical_web_application/", 
            "score": 8, 
            "selftext": "My gut says \"yes\", but having taken a look at several web application examples and boilerplates, the approach they take tends to be in the form of this (I'm using a Gin handler here as an example, and imaginary User and Billing \"repository\" structs that fetch data from either a database or an external API. I omitted error handling to make the example shorter) :\n\n    func GetUserDetailsHandler(c *gin.Context) {\n        //this result presumably comes from the app's database\n        var userResult = UserRepository.FindById( c.getInt(\"user_id\") )\n        \n        //assume that this result comes from a different data source (e.g: a different database) all together, hence why we're not just doing a join query with \"User\"\n        var billingInfo = BillingRepository.FindById(  c.getInt(\"user_id\")  )\n        \n        c.JSON(http.StatusOK, gin.H {\n            user_data : userResult,\n            billing_data : billingInfo,\n        })\n\n        return\n    }\n\nIn the above scenario, the call to \"User.FindById\" might use some kind of database driver, but as far as I'm aware, all available Golang database/ORM libraries return data in a \"synchronous\" fashion (e.g: as return values, not via channels). As such, the call to \"User.FindById\" will block until it's complete, before I can move on to executing \"BillingInfo.FindById\", which is not at all ideal since they can both work in parallel.\n\nSo I figured that the best idea was to make use of go routines + syncGroup to solve the problem. Something like this:\n\n    func GetUserDetailsHandler(c *gin.Context) {\n        var waitGroup sync.WaitGroup\n \n        userChannel := make(chan User);\n        billingChannel := make(chan Billing)\n        \n        waitGroup.Add(1)\n        go func() {\n                defer waitGroup.Done()\n                userChannel <- UserRepository.FindById( c.getInt(\"user_id\") )               \n        }()\n\n        waitGroup.Add(1)\n        go func(){\n                defer waitGroup.Done()\n                billingChannel <- BillingRepository.FindById(  c.getInt(\"user_id\") )\n        }()\n\n        waitGroup.Wait()\n        \n        userInfo := <- userChannel\n        billingInfo = <- billingChannel\n        \n        c.JSON(http.StatusOK, gin.H {\n            user_data : userResult,\n            billing_data : billingInfo,\n        })\n\n        return\n    }\n\nNow, this presumably does the job. But it seems unnecessarily verbose to me, and potentially error prone (if I forget to \"Add\" to the waitGroup before any go routine, or if I forget to \"Wait\", then it all falls apart). Is there a better way to do this? \n\nEdit: fixed a mistake in the mock code", 
            "subreddit": "golang", 
            "title": "Within the handler of a typical web application, is it advisable to execute multiple long-running functions (e.g: database queries) in separate goroutines? And if so, is syncGroup the only way to wait for all those goroutines to finish their jobs?", 
            "url": "https://www.reddit.com/r/golang/comments/6yur14/within_the_handler_of_a_typical_web_application/"
        }, 
        {
            "author": "HugoWeb", 
            "created_utc": 1504876172.0, 
            "domain": "self.golang", 
            "id": "6yunhk", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yunhk/how_to_avoid_type_duplication_in_a_json_api_with/", 
            "score": 3, 
            "selftext": "Hi guys,\n\nHow do you guys deal with the following:\n\n- a very similar type (struct) is received both in the HTTP JSON api AND inserted/retrieved from the database;\n- but the database model has internal IDs (say) while;\n- the JSON api has an extra field \"token\"  for auth.\n\nI have been using 2 similar structs, say:\n\n- Sensor (for db)\n- SensorRequest (for api)\n\nBut I don't like it..\n\n", 
            "subreddit": "golang", 
            "title": "How to avoid type duplication in a JSON api with database?", 
            "url": "https://www.reddit.com/r/golang/comments/6yunhk/how_to_avoid_type_duplication_in_a_json_api_with/"
        }, 
        {
            "author": "ChristophBerger", 
            "created_utc": 1504871530.0, 
            "domain": "self.golang", 
            "id": "6yua1e", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 28, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yua1e/boltdb_is_now_bbolt/", 
            "score": 42, 
            "selftext": "**UPDATE 2**\n\nBased on a few more comments, here is an updated version:\n\n* The author of BoltDB [declared BoltDB as complete](https://github.com/boltdb/bolt/commit/fa5367d20c994db73282594be0146ab221657943) and will not maintain the project anymore.\n* BoltDB may or may not receive further bug fixes from now on. There is no clear statement on this at this moment. I suppose this is up to the BoltDB community now.\n* CoreOS have [forked BoltDB](https://github.com/coreos/bbolt) with the intention to add new functionality without breaking the API.\n* However, it appears that some of the planned changes have the potential of affecting the existing user base adversely.\n* The author advises that users who want a stable database may want to stay with BoltDB, and users who look for new functionality may want to have a look at CoreOS's fork `bbolt`.\n* The title unfortunately seems to indicate that BoltDB has been renamed to bbolt. What I meant to say is that BoltDB has been handed over to the bbolt project, which, as it seems, is also not true. I cannot change the title, so we have to live with that. I apologize if the title creates unnecessary confusion.\n\n\n**Please ignore everything below this line, but be aware that many of the comments below refer to the original version of this post and the first update.**\n\n- - -\n\n[This](https://github.com/boltdb/bolt/commit/fa5367d20c994db73282594be0146ab221657943) might be of interest to BoltDB users. \n\nTL;DR: [BoltDB](https://github.com/boltdb/bolt) is not maintained anymore, but a fork called [bbolt](https://github.com/coreos/bbolt) continues to be maintained by CoreOS.\n\n(Now if someone could just tell me what the first \"b\" in \"bbolt\" means...?!? Ben's Bolt? Be bold?) ;)\n\nUPDATE to clarify the situations based on the comments (special thanks to /u/benbjohnson and /u/natefinch):\n\n* BoltDB has not been renamed to bbolt, as the title misleadingly might suggest. BoltDB still exists under its own name and URL. \n* bbolt is a disruptive fork of BoltDB that does not intend to maintain backwards compatibility. \n* Users who want stability may stay with BoltDB that continues to receive bug fixes; it only gets no new features (which can be a good thing).", 
            "subreddit": "golang", 
            "title": "BoltDB is now bbolt", 
            "url": "https://www.reddit.com/r/golang/comments/6yua1e/boltdb_is_now_bbolt/"
        }, 
        {
            "author": "eoin_ahern", 
            "created_utc": 1504862032.0, 
            "domain": "self.golang", 
            "id": "6ytod2", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ytod2/golang_rpc/", 
            "score": 6, 
            "selftext": "Hi, Ive been reading about golang rpc and I dont really understand it. I downloaded a talk on it this morning and just didnt understand what the speaker was talking about at all. \n\nhttps://www.youtube.com/watch?v=KjI0OwdiABo&t=4s\n\ncan anyone tell me in what context id use this library and how it would be applied to the implementation of a rest api if at all. pardon my ignorance and thanks", 
            "subreddit": "golang", 
            "title": "golang rpc", 
            "url": "https://www.reddit.com/r/golang/comments/6ytod2/golang_rpc/"
        }, 
        {
            "author": "indil7", 
            "created_utc": 1504851574.0, 
            "domain": "self.golang", 
            "id": "6yt1r5", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yt1r5/how_do_you_get_an_astpackage/", 
            "score": 6, 
            "selftext": "No, really. How do you get one?\n\nAccording to `go doc go/ast | grep Package`...\n\n    Package ast declares the types used to represent syntax trees for Go\n    func FilterPackage(pkg *Package, f Filter) bool\n    func PackageExports(pkg *Package) bool\n        func MergePackageFiles(pkg *Package, mode MergeMode) *File\n    type Package struct{ ... }\n        func NewPackage(fset *token.FileSet, files map[string]*File, importer Importer, ...) (*Package, error)\n\n...there's only one way:\n\n    func NewPackage(fset *token.FileSet, files map[string]*File, importer Importer, universe *Scope) (*Package, error)\n\nI tried passing nil for importer and universe, but I got parse errors like  \"undeclared name: string\". So, how do I get an ast.Importer and the universe *ast.Scope that will work in the general case?\n\nI grepped stdlib and golang.org/x/tools code and found an ast.Importer implementation called \"poorMansImporter\", but the code indicates it's a half-assed implementation that does some guesswork. It doesn't seem generally useful.\n\nI see a types.Universe, which is a *types.Scope, but I need an *ast.Scope. And there's no ast.Universe *ast.Scope.\n\nArgh! Help! :)", 
            "subreddit": "golang", 
            "title": "How do you get an *ast.Package?", 
            "url": "https://www.reddit.com/r/golang/comments/6yt1r5/how_do_you_get_an_astpackage/"
        }, 
        {
            "author": "netzdamon", 
            "created_utc": 1504829054.0, 
            "domain": "self.golang", 
            "id": "6yr6qx", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yr6qx/configuration_management_tools/", 
            "score": 0, 
            "selftext": "Are there any actively developed config management tools written in golang? I remember seeing a few over the years, I been doing some searching to check progress and the few I found all seem to be dead. No updates in the last year or more. A friend and I were talking about starting one of our own, but I don't want to reinvent the wheel if there's an active project we could contribute to instead.", 
            "subreddit": "golang", 
            "title": "configuration management tools", 
            "url": "https://www.reddit.com/r/golang/comments/6yr6qx/configuration_management_tools/"
        }, 
        {
            "author": "weberc2", 
            "created_utc": 1504824406.0, 
            "domain": "self.golang", 
            "id": "6yqr2d", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 29, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yqr2d/gallium_an_idea_for_a_programming_language_that/", 
            "score": 6, 
            "selftext": "https://github.com/weberc2/gallium\n\nI wanted to start a conversation about some ideas I've had to write a language that compiles to Go. The rationale and notes are available in the readme. I want this thread to be a starting point for the conversation about how this language could be built and what it could look like (at a broad level--details notwithstanding) and maybe to find some like minds with whom to continue this conversation after this thread expires. I want a constructive discussion--I don't want to debate the rationale (maybe you think Go or language X is good enough--that's fine, but that's not what I'm here to talk about). As I mention in the readme, I've never built a language, so it probably won't go anywhere, but I'm particularly interested to hear any special reasons why this can't work in theory.", 
            "subreddit": "golang", 
            "title": "Gallium: An idea for a programming language that compiles to Go", 
            "url": "https://www.reddit.com/r/golang/comments/6yqr2d/gallium_an_idea_for_a_programming_language_that/"
        }, 
        {
            "author": "ishanjain28", 
            "created_utc": 1504818331.0, 
            "domain": "github.com", 
            "id": "6yq4nt", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yq4nt/a_highly_aggressive_fast_and_reliable_multipart/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A Highly Aggressive, Fast and Reliable Multipart File Downloader Tool", 
            "url": "https://github.com/ishanjain28/pluto"
        }, 
        {
            "author": "Ashtonian", 
            "created_utc": 1504818135.0, 
            "domain": "self.golang", 
            "id": "6yq3wt", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yq3wt/where_do_you_guys_go_to_find_go_jobs/", 
            "score": 1, 
            "selftext": "wondering where I should be looking?", 
            "subreddit": "golang", 
            "title": "where do you guys go to find go jobs?", 
            "url": "https://www.reddit.com/r/golang/comments/6yq3wt/where_do_you_guys_go_to_find_go_jobs/"
        }, 
        {
            "author": "andradei", 
            "created_utc": 1504816323.0, 
            "domain": "lemire.me", 
            "id": "6ypwui", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 28, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ypwui/go_does_not_inline_functions_when_it_should/", 
            "score": 44, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go does not inline functions when it should", 
            "url": "https://lemire.me/blog/2017/09/05/go-does-not-inline-functions-when-it-should/"
        }, 
        {
            "author": "jcox250", 
            "created_utc": 1504811305.0, 
            "domain": "medium.com", 
            "id": "6ypd51", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ypd51/tutorial_password_hash_salt_using_go/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Tutorial - Password Hash & Salt Using Go", 
            "url": "https://medium.com/@jcox250/password-hash-salt-using-golang-b041dc94cb72"
        }, 
        {
            "author": "y4m4b4", 
            "created_utc": 1504807536.0, 
            "domain": "blog.minio.io", 
            "id": "6yoyar", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yoyar/go_implementation_of_data_at_rest_encryption/", 
            "score": 14, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go implementation of Data At Rest Encryption", 
            "url": "https://blog.minio.io/data-at-rest-encryption-done-right-7446c644ddb6"
        }, 
        {
            "author": "Theralos", 
            "created_utc": 1504793322.0, 
            "domain": "github.com", 
            "id": "6ynfaw", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ynfaw/gosc_an_helper_package_for_go_written_to_be_user/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Gosc: an helper package for Go, written to be user friendly with alias inspired by Lodash", 
            "url": "https://github.com/danilopolani/gosc"
        }, 
        {
            "author": "lanycrost", 
            "created_utc": 1504787653.0, 
            "domain": "self.golang", 
            "id": "6ymwv2", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ymwv2/golang_not_connecting_to_postgres_thought_gorm/", 
            "score": 2, 
            "selftext": "Hi everyone!\n\nGolang container isn't finding Postgres db's.  I have one idea but can't implement this logic. Is it possible to retry to connect to database, if connection is refused?\nfor example...\n\n[And this is a link to my topic in golang forum, reddit code markdown works bad.](https://forum.golangbridge.org/t/golang-not-connecting-to-postgres-thought-gorm-and-hosted-by-docker/6571)\n\n    func Init() {\n\tauthConnect := fmt.Sprintf( \"host=%s port=%s user=%s dbname=%s sslmode=disable password=%s\",\n\t\tos.Getenv( \"AUTH_DB_HOST\" ),\n\t\tos.Getenv( \"AUTH_DB_PORT\" ),\n\t\tos.Getenv( \"AUTH_DB_USER\" ),\n\t\tos.Getenv( \"AUTH_DB_NAME\" ),\n\t\tos.Getenv( \"AUTH_DB_PASSWORD\" ) )\n\t\n\tAuthConnect:\n\tAuthDB, err = gorm.Open( \"postgres\", authConnect )\n\n\tif err != nil {\n\t\tlog.Printf(\"Got error when connect database `auth`, the error is '%v'\", err)\n\t\tgoto AuthConnect\n\t}\n\n\tuserConnect := fmt.Sprintf( \"host=%s port=%s user=%s dbname=%s sslmode=disable password=%s\",\n\t\tos.Getenv( \"USER_DB_HOST\" ),\n\t\tos.Getenv( \"USER_DB_PORT\" ),\n\t\tos.Getenv( \"USER_DB_USER\" ),\n\t\tos.Getenv( \"USER_DB_NAME\" ),\n\t\tos.Getenv( \"USER_DB_PASSWORD\" ) )\n\n\tUserConnect:\n\tUserDB, err = gorm.Open(\"postgres\", userConnect )\n\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error when connect database `user`, the error is '%v'\", err)\n\t\tgoto UserConnect\n\t}\n    }\n \nIf you have any suggestions please help me.\n\nHere are my code, logs and other details.\n\n    func Init() {\n\tauthConnect := fmt.Sprintf( \"host=%s port=%s user=%s dbname=%s sslmode=disable password=%s\",\n\t\tos.Getenv( \"AUTH_DB_HOST\" ),\n\t\tos.Getenv( \"AUTH_DB_PORT\" ),\n\t\tos.Getenv( \"AUTH_DB_USER\" ),\n\t\tos.Getenv( \"AUTH_DB_NAME\" ),\n\t\tos.Getenv( \"AUTH_DB_PASSWORD\" ) )\n\n\tAuthDB, err = gorm.Open( \"postgres\", authConnect )\n\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error when connect database `auth`, the error is '%v'\", err)\n\t}\n\n\tuserConnect := fmt.Sprintf( \"host=%s port=%s user=%s dbname=%s sslmode=disable password=%s\",\n\t\tos.Getenv( \"USER_DB_HOST\" ),\n\t\tos.Getenv( \"USER_DB_PORT\" ),\n\t\tos.Getenv( \"USER_DB_USER\" ),\n\t\tos.Getenv( \"USER_DB_NAME\" ),\n\t\tos.Getenv( \"USER_DB_PASSWORD\" ) )\n\n\tUserDB, err = gorm.Open(\"postgres\", userConnect )\n\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error when connect database `user`, the error is '%v'\", err)\n\t}\n    }\n\nAfter starting the container I get this message.\n\n\n    auth_1     | 2017/09/07 12:04:32 Got error when connect database `auth`, the error is 'dial tcp 127.0.0.1:5437: getsockopt: connection refused'\n\n\nMy docker-compose.yml\n\n\n    version: '3'\nservices:\n  user_db:\n    image: postgres\n    environment:\n      - POSTGRES_USER=postgres\n      - POSTGRESS_PASSWORD=postgres\n      - POSTGRES_DB=user\n    ports:\n      - \"5432:5432\"\n  auth_db:\n    image: postgres\n    environment:\n      - POSTGRES_USER=postgres\n      - POSTGRESS_PASSWORD=postgres\n      - POSTGRES_DB=auth\n    ports:\n      - \"5437:5432\"\n  auth:\n    build:\n      context: .\n      dockerfile: ./auth/Dockerfile\n    environment:\n      - AUTOMIGRATE=true\n      - AUTH_DB_HOST=localhost\n      - USER_DB_HOST=localhost\n      - AUTH_DB_PORT=5437\n      - USER_DB_PORT=5432\n      - AUTH_DB_USER=postgres\n      - USER_DB_USER=postgres\n      - AUTH_DB_NAME=auth\n      - USER_DB_NAME=user\n      - AUTH_DB_PASSWORD=postgres\n      - USER_DB_PASSWORD=postgres\n    ports:\n      - \"8070:8070\"\n    depends_on:\n      - user_db\n      - auth_db\n  user:\n    build:\n      context: .\n      dockerfile: ./user/Dockerfile\n    environment:\n      - AUTOMIGRATE=true\n    ports:\n      - \"8090:8090\"\n    depends_on:\n      - user_db\n\n\nMy docker-compose logs\n\n\n     Attaching to grsuser_auth_db_1, grsuser_user_db_1, grsuser_user_1, grsuser_auth_1\nauth_db_1  | The files belonging to this database system will be owned by user \"postgres\".\nauth_db_1  | This user must also own the server process.\nauth_db_1  | \nauth_db_1  | The database cluster will be initialized with locale \"en_US.utf8\".\nauth_db_1  | The default database encoding has accordingly been set to \"UTF8\".\nauth_db_1  | The default text search configuration will be set to \"english\".\nauth_1     | 2017/09/07 12:04:32 Got error when connect database `auth`, the error is 'dial tcp 127.0.0.1:5437: getsockopt: connection refused'\nauth_db_1  | \nauth_db_1  | Data page checksums are disabled.\nuser_db_1  | The files belonging to this database system will be owned by user \"postgres\".\nauth_db_1  | \nuser_db_1  | This user must also own the server process.\nuser_db_1  | \nuser_db_1  | The database cluster will be initialized with locale \"en_US.utf8\".\nauth_db_1  | fixing permissions on existing directory /var/lib/postgresql/data ... ok\nauth_db_1  | creating subdirectories ... ok\nuser_db_1  | The default database encoding has accordingly been set to \"UTF8\".\nauth_db_1  | selecting default max_connections ... 100\nuser_db_1  | The default text search configuration will be set to \"english\".\nauth_db_1  | selecting default shared_buffers ... 128MB\nuser_db_1  | \nuser_db_1  | Data page checksums are disabled.\nauth_db_1  | selecting dynamic shared memory implementation ... posix\nauth_db_1  | creating configuration files ... ok\nuser_db_1  | \nauth_db_1  | running bootstrap script ... ok\nuser_db_1  | fixing permissions on existing directory /var/lib/postgresql/data ... ok\nuser_1     | Now listening on: http://localhost:8090\nauth_db_1  | performing post-bootstrap initialization ... ok\nuser_db_1  | creating subdirectories ... ok\nuser_db_1  | selecting default max_connections ... 100\nauth_db_1  | \nuser_1     | Application started. Press CTRL+C to shut down.\nauth_db_1  | WARNING: enabling \"trust\" authentication for local connections\nuser_db_1  | selecting default shared_buffers ... 128MB\nauth_db_1  | You can change this by editing pg_hba.conf or using the option -A, or\nuser_1     | Now listening on: http://localhost:8090\nuser_db_1  | selecting dynamic shared memory implementation ... posix\nauth_db_1  | --auth-local and --auth-host, the next time you run initdb.\nuser_1     | Application started. Press CTRL+C to shut down.\nuser_db_1  | creating configuration files ... ok\nauth_db_1  | syncing data to disk ... ok\nuser_db_1  | running bootstrap script ... ok\nauth_db_1  | \nauth_db_1  | Success. You can now start the database server using:\nuser_db_1  | performing post-bootstrap initialization ... ok\nuser_db_1  | syncing data to disk ... ok\nuser_db_1  | \nuser_db_1  | Success. You can now start the database server using:\nuser_db_1  | \nuser_db_1  |     pg_ctl -D /var/lib/postgresql/data -l logfile start\nauth_db_1  | \nuser_db_1  | \nauth_db_1  |     pg_ctl -D /var/lib/postgresql/data -l logfile start\nuser_db_1  | \nuser_db_1  | WARNING: enabling \"trust\" authentication for local connections\nauth_db_1  | \nuser_db_1  | You can change this by editing pg_hba.conf or using the option -A, or\nauth_db_1  | ****************************************************\nuser_db_1  | --auth-local and --auth-host, the next time you run initdb.\nauth_db_1  | WARNING: No password has been set for the database.\nauth_db_1  |          This will allow anyone with access to the\nuser_db_1  | ****************************************************\nauth_db_1  |          Postgres port to access your database. In\nuser_db_1  | WARNING: No password has been set for the database.\nauth_db_1  |          Docker's default configuration, this is\nuser_db_1  |          This will allow anyone with access to the\nauth_db_1  |          effectively any other container on the same\nuser_db_1  |          Postgres port to access your database. In\nauth_db_1  |          system.\nauth_db_1  | \nauth_db_1  |          Use \"-e POSTGRES_PASSWORD=password\" to set\nuser_db_1  |          Docker's default configuration, this is\nauth_db_1  |          it in \"docker run\".\nuser_db_1  |          effectively any other container on the same\nauth_db_1  | ****************************************************\nuser_db_1  |          system.\nauth_db_1  | waiting for server to start....LOG:  could not bind IPv6 socket: Cannot assign requested address\nauth_db_1  | HINT:  Is another postmaster already running on port 5432? If not, wait a few seconds and retry.\nauth_db_1  | LOG:  database system was shut down at 2017-09-07 11:55:29 UTC\nauth_db_1  | LOG:  MultiXact member wraparound protections are now enabled\nauth_db_1  | LOG:  database system is ready to accept connections\nauth_db_1  | LOG:  autovacuum launcher started\nauth_db_1  |  done\nauth_db_1  | server started\nauth_db_1  | CREATE DATABASE\nauth_db_1  | \nauth_db_1  | ALTER ROLE\nauth_db_1  | \nauth_db_1  | \nuser_db_1  | \nuser_db_1  |          Use \"-e POSTGRES_PASSWORD=password\" to set\nuser_db_1  |          it in \"docker run\".\nuser_db_1  | ****************************************************\nuser_db_1  | waiting for server to start....LOG:  could not bind IPv6 socket: Cannot assign requested address\nuser_db_1  | HINT:  Is another postmaster already running on port 5432? If not, wait a few seconds and retry.\nuser_db_1  | LOG:  database system was shut down at 2017-09-07 11:55:29 UTC\nuser_db_1  | LOG:  MultiXact member wraparound protections are now enabled\nuser_db_1  | LOG:  database system is ready to accept connections\nuser_db_1  | LOG:  autovacuum launcher started\nuser_db_1  |  done\nauth_db_1  | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*\nauth_db_1  | \nauth_db_1  | LOG:  received fast shutdown request\nuser_db_1  | server started\nuser_db_1  | CREATE DATABASE\nuser_db_1  | \nuser_db_1  | ALTER ROLE\nuser_db_1  | \nuser_db_1  | \nuser_db_1  | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*\nuser_db_1  | \nuser_db_1  | LOG:  received fast shutdown request\nauth_db_1  | waiting for server to shut down....LOG:  aborting any active transactions\nauth_db_1  | LOG:  autovacuum launcher shutting down\nauth_db_1  | LOG:  shutting down\nauth_db_1  | LOG:  database system is shut down\nauth_db_1  |  done\nauth_db_1  | server stopped\nauth_db_1  | \nauth_db_1  | PostgreSQL init process complete; ready for start up.\nauth_db_1  | \nauth_db_1  | LOG:  database system was shut down at 2017-09-07 11:55:34 UTC\nauth_db_1  | LOG:  MultiXact member wraparound protections are now enabled\nauth_db_1  | LOG:  database system is ready to accept connections\nauth_db_1  | LOG:  autovacuum launcher started\nauth_db_1  | LOG:  received smart shutdown request\nauth_db_1  | LOG:  autovacuum launcher shutting down\nuser_db_1  | waiting for server to shut down....LOG:  aborting any active transactions\nuser_db_1  | LOG:  autovacuum launcher shutting down\nuser_db_1  | LOG:  shutting down\nuser_db_1  | LOG:  database system is shut down\nuser_db_1  |  done\nuser_db_1  | server stopped\nuser_db_1  | \nuser_db_1  | PostgreSQL init process complete; ready for start up.\nuser_db_1  | \nuser_db_1  | LOG:  database system was shut down at 2017-09-07 11:55:34 UTC\nuser_db_1  | LOG:  MultiXact member wraparound protections are now enabled\nuser_db_1  | LOG:  autovacuum launcher started\nuser_db_1  | LOG:  database system is ready to accept connections\nauth_db_1  | LOG:  shutting down\nauth_db_1  | LOG:  database system is shut down\nauth_db_1  | LOG:  database system was shut down at 2017-09-07 12:00:31 UTC\nauth_db_1  | LOG:  MultiXact member wraparound protections are now enabled\nauth_db_1  | LOG:  database system is ready to accept connections\nauth_db_1  | LOG:  autovacuum launcher started\ngrsuser_auth_1 exited with code 1\n    \n\nRegards, Khachatur!", 
            "subreddit": "golang", 
            "title": "Golang not connecting to Postgres thought gorm and hosted by Docker", 
            "url": "https://www.reddit.com/r/golang/comments/6ymwv2/golang_not_connecting_to_postgres_thought_gorm/"
        }, 
        {
            "author": "mustafaakin", 
            "created_utc": 1504784993.0, 
            "domain": "self.golang", 
            "id": "6ymp10", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ymp10/generating_grpc_service_from_postgres_database/", 
            "score": 9, 
            "selftext": "Hi, I once started a project to generate a gRPC service from a given database, generating server side code for existing tables, views and stored procedures. I made something but it is primitive. What do you think about it? I am always tired of writing database code and do not like using ORMs that get in the way too much, and I thought having a gRPC service, It can be helpful for multi language use case or deploying it infront of a database and possibly providing a layer for security / isolation. What do you think? If I complete this project, would that be useful? I actually like writing stored procedures, and having the most of the DB logic in one place would be helpful, but what can be downsides of this approach?\n\nhttps://github.com/mustafaakin/gopqgen", 
            "subreddit": "golang", 
            "title": "Generating gRPC Service from Postgres Database [IDEA]", 
            "url": "https://www.reddit.com/r/golang/comments/6ymp10/generating_grpc_service_from_postgres_database/"
        }, 
        {
            "author": "tzuchinc", 
            "created_utc": 1504782846.0, 
            "domain": "codementor.io", 
            "id": "6ymj91", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ymj91/go_tutorial_rest_api_backed_by_postgresql/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go tutorial: REST API backed by PostgreSQL", 
            "url": "https://www.codementor.io/flavio304/go-tutorial-rest-api-backed-by-postgresql-bjzrykwq1"
        }, 
        {
            "author": "tzuchinc", 
            "created_utc": 1504782016.0, 
            "domain": "codementor.io", 
            "id": "6ymh3m", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ymh3m/how_i_learned_go/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "How I learned Go!", 
            "url": "https://www.codementor.io/codehakase/how-i-learned-go-bl9bow05o"
        }, 
        {
            "author": "natefinch", 
            "created_utc": 1504754236.0, 
            "domain": "gnorm.org", 
            "id": "6yknhv", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 16, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yknhv/gnorm_is_not_an_orm_its_a_databasefirst_code/", 
            "score": 23, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "GNORM is Not an ORM, it's a database-first code generator", 
            "url": "https://gnorm.org"
        }, 
        {
            "author": "muesli", 
            "created_utc": 1504753389.0, 
            "domain": "github.com", 
            "id": "6ykkn7", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ykkn7/wagon_a_webassemblybased_go_interpreter/", 
            "score": 52, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "wagon, a WebAssembly-based Go interpreter", 
            "url": "https://github.com/go-interpreter/wagon"
        }, 
        {
            "author": "Simerty", 
            "created_utc": 1504753150.0, 
            "domain": "self.golang", 
            "id": "6ykju8", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ykju8/go_outside_of_the_web/", 
            "score": 9, 
            "selftext": "It seems like the majority of the posts on this sub are about using Go to build technologies related to the web.\n\nI was looking for examples of Go being used to solve problems that do not relate to the web. One big project that comes to mind is [Docker](https://www.docker.com/). Does anyone know of more examples of Go being used outside of web?", 
            "subreddit": "golang", 
            "title": "Go outside of the web", 
            "url": "https://www.reddit.com/r/golang/comments/6ykju8/go_outside_of_the_web/"
        }, 
        {
            "author": "srt32", 
            "created_utc": 1504752307.0, 
            "domain": "github.com", 
            "id": "6ykh8a", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ykh8a/automated_archiving_of_heroku_postgres_backups_to/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Automated Archiving of Heroku Postgres Backups to S3 Written in Go", 
            "url": "https://github.com/srt32/hkpg/"
        }, 
        {
            "author": "forgiveangel", 
            "created_utc": 1504747774.0, 
            "domain": "self.golang", 
            "id": "6yk2en", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yk2en/how_would_i_query_an_entire_table_from_postgres/", 
            "score": 0, 
            "selftext": "Currently looking at the pq standard library. Trying to find a way around needing to declare a variable for every column that you desire like in the example below.\n\n```\n    func (p *product) getProduct(db *sql.DB) error {\n        return db.QueryRow(\"SELECT name, price FROM products WHERE id=$1\", p.ID).Scan(&p.Name, &p.Price)\n```\n I have a thought of querying for all the table names and creating a single string like \n\n```\nSELECT (column1, column2, ....columnN) FROM table\n```\n\nBut that just seems silly.\n", 
            "subreddit": "golang", 
            "title": "How would I query an entire table from Postgres?", 
            "url": "https://www.reddit.com/r/golang/comments/6yk2en/how_would_i_query_an_entire_table_from_postgres/"
        }, 
        {
            "author": "golangjob", 
            "created_utc": 1504744967.0, 
            "domain": "self.golang", 
            "id": "6yjt3p", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yjt3p/hiring_1_jr_and_2_sr_go_devs/", 
            "score": 4, 
            "selftext": "\nThis is a new startup based out of Portland, Oregon. Only US citizens can be selected for these positions.\n\nWe are looking preferably for people with professional experience.\n\nPlease send your info/resume/work and a small introduction in a PM to this account  (or leave a comment) and we'll get back to you as soon as possible.\n\nPay range is 60k - 150k + benefits. ", 
            "subreddit": "golang", 
            "title": "Hiring 1 Jr. and 2 Sr. Go Devs", 
            "url": "https://www.reddit.com/r/golang/comments/6yjt3p/hiring_1_jr_and_2_sr_go_devs/"
        }, 
        {
            "author": "muesli", 
            "created_utc": 1504739578.0, 
            "domain": "blog.filippo.io", 
            "id": "6yjap6", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yjap6/playing_with_kernel_tls_in_linux_413_and_go/", 
            "score": 45, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Playing with kernel TLS in Linux 4.13 and Go", 
            "url": "https://blog.filippo.io/playing-with-kernel-tls-in-linux-4-13-and-go/"
        }, 
        {
            "author": "baliance", 
            "created_utc": 1504738581.0, 
            "domain": "self.golang", 
            "id": "6yj721", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yj721/baliancecomgooxml_pure_go_office_open_library/", 
            "score": 17, 
            "selftext": "The library is fairly new, but progressing quickly.  It takes a different approach from existing Go OOXML libraries by using code generated from the ECMA-376 XSDs to create the XML based types, and wrapping them with a friendlier API.  \n\nThe primary advantages are:\n\n* round-tripping of arbitrary docx/xlsx/pptx files without losing content\n* allowing users to bail out to the .X() method on every wrapped type to manipulate the raw OOXML should an API not exist for the functionality that they need. \n\n\nAs an example of the second, if setting a document background is ever requested by a user, we would add a method so that the following worked:\n    \n    dox := document.New()\n    dox.SetBackground(color.RGB(50,50,50))\n    \n\nThe user is not stuck though and can always continue making progress with the  library as is by falling back to ```.X()```:\n\n\n    dox := document.New()\n    doc.X().Background = wordprocessingml.NewCT_Background()\n    doc.X().Background.ColorAttr = &wordprocessingml.ST_HexColor{}\n    doc.X().Background.ColorAttr.ST_HexColorRGB = color.RGB(50, 50, 50).AsRGBString()\n\nIf you do ever need to resort to OOXML manipulation, please file an issue so we can add an API to cover that use case.  The ECMA-376 spec is massive and its hard to tell which parts might be commonly vs rarely used.\n\nRegarding current status, DOCX and XLSX work well with development currently being heavy on XLSX with the next major step being adding support for PPTX as soon as the rest of the chart types are added to the spreadsheet package.\n\nhttp://github.com/baliance/gooxml", 
            "subreddit": "golang", 
            "title": "baliance.com/gooxml: Pure Go Office Open Library (.xlsx/.docx/.pptx) [AGPLv3]", 
            "url": "https://www.reddit.com/r/golang/comments/6yj721/baliancecomgooxml_pure_go_office_open_library/"
        }, 
        {
            "author": "AngryGoNerd", 
            "created_utc": 1504738300.0, 
            "domain": "self.golang", 
            "id": "6yj614", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yj614/beginner_guide_to_go_on_raspberry_pi/", 
            "score": 10, 
            "selftext": "Hi,\n\nI use Go with the Raspberry Pi 3 and I would like to know if other people where interested in a Guide with sample projects to get started with Go on the Raspberry Pi?", 
            "subreddit": "golang", 
            "title": "Beginner Guide to Go on Raspberry Pi", 
            "url": "https://www.reddit.com/r/golang/comments/6yj614/beginner_guide_to_go_on_raspberry_pi/"
        }, 
        {
            "author": "stronglift_cyclist", 
            "created_utc": 1504732625.0, 
            "domain": "self.golang", 
            "id": "6yilf6", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yilf6/overriding_functions_to_debug_third_party_packages/", 
            "score": 0, 
            "selftext": "I've looked for techniques on overriding functions to debug third party packages, but haven't found any. Here's the issue I'm up against.\n\n    package main\n    import github.com/foo/bar\n    baz()\n    \nI think there's a bug in baz() (from package bar), so I want to replace it with an instrumented version. I could fork bar on github, make the changes, push, then replace my imports to use my version of baz(), but there's got to be a better way. Ideas?", 
            "subreddit": "golang", 
            "title": "Overriding functions to debug third party packages", 
            "url": "https://www.reddit.com/r/golang/comments/6yilf6/overriding_functions_to_debug_third_party_packages/"
        }, 
        {
            "author": "sbinet", 
            "created_utc": 1504729217.0, 
            "domain": "self.golang", 
            "id": "6yi8dh", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yi8dh/go_based_gsoc_projects_cern/", 
            "score": 6, 
            "selftext": "here is a link to a meeting full of status updates on GSoC projects @CERN:\n\n- https://indico.cern.ch/event/662490/\n\nwith 4 projects that are Go-based:\n\n- https://indico.cern.ch/event/662490/contributions/2705390/attachments/1516793/2367391/rishi_shah_gsoc17.pdf\n- https://indico.cern.ch/event/662490/contributions/2705400/attachments/1516828/2367453/vibhav-pant_Google_Summer_of_Code.pdf\n- https://indico.cern.ch/event/662490/contributions/2705401/attachments/1516328/2366508/Jet_Clustering_Optimizations_in_Fads.pdf\n- https://indico.cern.ch/event/662490/contributions/2705402/attachments/1515347/2364604/gsoc_cern_talks_gopy_final.pdf\n\nenjoy!\n\nPS: it seems plausible that if CERN is selected as an organization for GSoC-2018, there will be more Go-based proposals :)", 
            "subreddit": "golang", 
            "title": "Go based GSoC projects @CERN", 
            "url": "https://www.reddit.com/r/golang/comments/6yi8dh/go_based_gsoc_projects_cern/"
        }, 
        {
            "author": "daenney", 
            "created_utc": 1504726672.0, 
            "domain": "self.golang", 
            "id": "6yhydt", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yhydt/find_packages_that_import_a_package/", 
            "score": 2, 
            "selftext": "I was hoping to find a way to essentially reverse a package import, to find any public package that imports another package. I took a look at godoc.org figuring it might have a graph of sorts but no luck.\n\nThe reason I want to do this is b/c I've found a package that I'd like to use but the documentation is a bit lacking. I was hoping that based on figuring out who else is using this package I can stroll through their code and learn from that instead.", 
            "subreddit": "golang", 
            "title": "Find packages that import a package", 
            "url": "https://www.reddit.com/r/golang/comments/6yhydt/find_packages_that_import_a_package/"
        }, 
        {
            "author": "ramzy0x", 
            "created_utc": 1504725205.0, 
            "domain": "self.golang", 
            "id": "6yhsjf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yhsjf/need_help_in_oauth2_golang/", 
            "score": 0, 
            "selftext": "i have create golang api with viper \ni can add oauth2 for the code following the next git repo\nhttps://github.com/go-oauth2/oauth2\nbut i need to reuse the  access_token in the api \n\nso when i run in the browser \nhttp://34.212.136.167:9096/token?grant_type=client_credentials&client_id=000000&client_secret=999999\n\nthe output is \n{\"access_token\":\"BLYCHNALOMEZUG_MFNS8YW\",\"expires_in\":7200,\"token_type\":\"Bearer\"}\n\n\ni need to use the access_token in the url like \nhttp://34.212.136.167:9096/api?token=access_token=BLYCHNALOMEZUG_MFNS8YW& <rest of api >\n\n\nthanks", 
            "subreddit": "golang", 
            "title": "Need help in oauth2 golang", 
            "url": "https://www.reddit.com/r/golang/comments/6yhsjf/need_help_in_oauth2_golang/"
        }, 
        {
            "author": "cbogart", 
            "created_utc": 1504723448.0, 
            "domain": "self.golang", 
            "id": "6yhliq", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yhliq/survey_results_how_software_ecosystems_deal_with/", 
            "score": 19, 
            "selftext": "Last fall we ran [a survey about how and why breaking changes are handled differently in 18 different software ecosystems, including Go](https://www.reddit.com/r/golang/comments/4x2wje/looking_for_info_on_how_go_package_developers/).  We've just submitted a paper to a conference about the results, and we've also set up a site where you can [compare how different ecosystems perceived](http://breakingapis.org/survey) their values, practices of upstream and downstream developers, and the health of their ecosystem.\n\nResults showed some stark differences between software communities, for example:\n[Making updates available to end users quickly](http://breakingapis.org/survey/values.html#rapid?ecos=Haskell_Stack_Stackage_,Node_js_NPM,Ruby_Rubygems) was highly valued by Node and Ruby communities, but was considered less important to Eclipse.  The Perl and Eclipse communities value [stability](http://breakingapis.org/survey/values.html#stability?ecos=Eclipse_plugins_,Haskell_Cabal_Hackage_,Perl_CPAN) most, while Hackage/Cabal valued it least.\n\nEcosystems have very different ways of dealing with versioning; for example in Go it's common for people to sometimes [make small updates without increasing the version number](http://breakingapis.org/survey/upstream.html#mon_versionless_updates_eco?ecos=Go,Maven,Node_js_NPM).  In Rust, developers more frequently chip in and [help with maintenance of upstream packages](http://breakingapis.org/survey/downstream.html#sync_liaison_code?ecos=NuGet,Rust_Cargo) than in NuGet. \n\nThere are a lot of other results on the linked site, and we\u2019re interested in your impressions of the results.  Do the results make sense to you?  What answers would you have expected?  Do you think the differences are intentional?  If you have any thoughts about it I\u2019ll try to keep up with comments here, or you can also send us comments through the website.  The [anonymized raw data](https://figshare.com/articles/Culture_and_Breaking_Change_A_Survey_of_Values_and_Practices_in_18_Open_Source_Software_Ecosystems/5108716) is also available.\n \n\nWe want to sincerely thank the large number of people in the Go community who responded, and we\u2019re eager to hear what you think!\n \n\nChris, Anna, Jim, and Christian", 
            "subreddit": "golang", 
            "title": "Survey results: How software ecosystems deal with breaking changes", 
            "url": "https://www.reddit.com/r/golang/comments/6yhliq/survey_results_how_software_ecosystems_deal_with/"
        }, 
        {
            "author": "spaztheannoyingkitty", 
            "created_utc": 1504718420.0, 
            "domain": "self.golang", 
            "id": "6yh1pa", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yh1pa/how_to_structure_a_struct_with_many_member/", 
            "score": 1, 
            "selftext": "Given a struct with many member functions (let's say 30+), how would you structure the code to make it easy to read/understand/test/etc.?", 
            "subreddit": "golang", 
            "title": "How to structure a struct with many member functions?", 
            "url": "https://www.reddit.com/r/golang/comments/6yh1pa/how_to_structure_a_struct_with_many_member/"
        }, 
        {
            "author": "marksteve4", 
            "created_utc": 1504713223.0, 
            "domain": "self.golang", 
            "id": "6yggvo", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yggvo/is_sonarqube_good_for_go_static_analysis/", 
            "score": 4, 
            "selftext": "I used to be a java developer. Sonarqube is pretty good for static analysis. How about go? is it good as well? What other full fledged options for go analysis?\n ", 
            "subreddit": "golang", 
            "title": "is sonarqube good for go static analysis?", 
            "url": "https://www.reddit.com/r/golang/comments/6yggvo/is_sonarqube_good_for_go_static_analysis/"
        }, 
        {
            "author": "dm319", 
            "created_utc": 1504712957.0, 
            "domain": "self.golang", 
            "id": "6ygfuy", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ygfuy/does_android_go_have_anything_to_do_with_go/", 
            "score": 3, 
            "selftext": "Seems a bit confusing to have another Google product which features 'Go' - 'Android Go', 'Youtube Go' etc.., but it made me wonder how they're [rebuilding android to use less memory](https://www.youtube.com/watch?v=G0Cb1D5OyJY).", 
            "subreddit": "golang", 
            "title": "Does Android Go have anything to do with Go?", 
            "url": "https://www.reddit.com/r/golang/comments/6ygfuy/does_android_go_have_anything_to_do_with_go/"
        }, 
        {
            "author": "blixtra", 
            "created_utc": 1504711679.0, 
            "domain": "kinvolk.io", 
            "id": "6ygayf", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ygayf/ebpf_golang_an_update_on_the_gobpf_library/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "eBPF + Golang: an update on the gobpf library", 
            "url": "https://kinvolk.io/blog/2017/09/an-update-on-gobpf---elf-loading-uprobes-more-program-types/"
        }, 
        {
            "author": "silent1mezzo", 
            "created_utc": 1504711172.0, 
            "domain": "tech.gadventures.com", 
            "id": "6yg946", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yg946/going_functional_with_webhook_dispatching/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Going functional with webhook dispatching", 
            "url": "https://tech.gadventures.com/going-functional-6aabc5c6373"
        }, 
        {
            "author": "campoy", 
            "created_utc": 1504710864.0, 
            "domain": "github.com", 
            "id": "6yg81b", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yg81b/a_go_framework_for_apiai_fulfillment_webhooks/", 
            "score": 12, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A Go framework for API.ai fulfillment webhooks", 
            "url": "https://github.com/campoy/apiai"
        }, 
        {
            "author": "RussellLuo", 
            "created_utc": 1504703184.0, 
            "domain": "self.golang", 
            "id": "6yfhz5", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yfhz5/protocgengohttp_is_enhanced_to_support_grpcs/", 
            "score": 2, 
            "selftext": "With this enhancement, now you can use all the existing awesome gRPC's unary interceptors (e.g. [go-grpc-middleware](https://github.com/grpc-ecosystem/go-grpc-middleware)) in the HTTP server generated by [protoc-gen-gohttp](https://github.com/RussellLuo/protoc-go-plugins/tree/master/examples).", 
            "subreddit": "golang", 
            "title": "protoc-gen-gohttp is enhanced to support gRPC's unary server interceptor", 
            "url": "https://www.reddit.com/r/golang/comments/6yfhz5/protocgengohttp_is_enhanced_to_support_grpcs/"
        }, 
        {
            "author": "0xdef", 
            "created_utc": 1504698528.0, 
            "domain": "self.golang", 
            "id": "6yf4ks", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yf4ks/install_and_update_golang/", 
            "score": 0, 
            "selftext": "for clean and fresh installation which way do you suggest  and why? \n- gvm (golang version manager)\n- ppa \n- old skull download and copy way\n\n", 
            "subreddit": "golang", 
            "title": "install and update golang", 
            "url": "https://www.reddit.com/r/golang/comments/6yf4ks/install_and_update_golang/"
        }, 
        {
            "author": "ritz078", 
            "created_utc": 1504697251.0, 
            "domain": "transform.now.sh", 
            "id": "6yf172", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yf172/an_online_repl_to_generate_go_struct_from_json/", 
            "score": 19, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "An online REPL to generate Go Struct from JSON.", 
            "url": "https://transform.now.sh/json-to-go/"
        }, 
        {
            "author": "bandesz", 
            "created_utc": 1504694790.0, 
            "domain": "github.com", 
            "id": "6yev85", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yev85/flint_interpolation_language/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Flint: Interpolation Language", 
            "url": "https://github.com/opsidian/flint"
        }, 
        {
            "author": "bandesz", 
            "created_utc": 1504693669.0, 
            "domain": "github.com", 
            "id": "6yeskk", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yeskk/parser_combinator_library_for_contextfree/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Parser combinator library for context-free languages", 
            "url": "https://github.com/opsidian/parsley"
        }, 
        {
            "author": "AgiraTechnologies", 
            "created_utc": 1504680008.0, 
            "domain": "agiratech.com", 
            "id": "6ydzm0", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 11, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ydzm0/how_to_deploy_a_golang_web_application_with_docker/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "How To Deploy a Golang Web Application with Docker", 
            "url": "http://www.agiratech.com/deploy-golang-web-application-docker/"
        }, 
        {
            "author": "throwawaybeginr", 
            "created_utc": 1504655219.0, 
            "domain": "self.golang", 
            "id": "6ybxko", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 16, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ybxko/what_are_your_longterm_experiences_using_go/", 
            "score": 12, 
            "selftext": "Hi guys,\n\nFor experienced people, compare and contrast using the go built-in (standard library) server for production, with nginx.  Is Go good enough for any size production and has all the bells and whistles you need?\n\nI am particularly interested in logging as I would think maybe nginx has more logging than it does?  (Just my impression since Go http server seems so simple).\n\nOf course Go server is definitely production-ready and very small and extremely easy to start using immediately.  My impression is, if you have a Go server it takes less than 14 seconds to have an http server up.  (Maybe another 45 to add a firewall rule if you're using that.)\n\nI'm just wondering if people *keep* using it as they scale, or whether they eventually migrate away?\n\nThanks for sharing your thoughts and experiences, including on any aspects I missed or got wrong!", 
            "subreddit": "golang", 
            "title": "What are your long-term experiences, using Go built-in server vs nginx", 
            "url": "https://www.reddit.com/r/golang/comments/6ybxko/what_are_your_longterm_experiences_using_go/"
        }, 
        {
            "author": "beekay24", 
            "created_utc": 1504652043.0, 
            "domain": "self.golang", 
            "id": "6ybmun", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 31, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6ybmun/too_many_go_http_web_frameworks_out_in_the_wild/", 
            "score": 7, 
            "selftext": "Is anyone else a little annoyed/frustrated over how many there are now? It seems like every one advertises itself as \"the fastest out there\". \n\nMy company uses echo and today I came across gin when a coworker decided to use it in his poc code. When I looked through gin, I saw this seemingly neverending list of performance benchmarks comparing gin to the other http frameworks...https://github.com/gin-gonic/gin/blob/master/BENCHMARKS.md\n\nI believe in a balance to everything so for there to be a healthy competition between the frameworks is great but this is getting to be a bit much...\nthoughts?", 
            "subreddit": "golang", 
            "title": "Too many go HTTP web frameworks out in the wild?", 
            "url": "https://www.reddit.com/r/golang/comments/6ybmun/too_many_go_http_web_frameworks_out_in_the_wild/"
        }, 
        {
            "author": "mwholt", 
            "created_utc": 1504647394.0, 
            "domain": "blog.golang.org", 
            "id": "6yb6fx", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yb6fx/community_outreach_working_group/", 
            "score": 12, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Community Outreach Working Group", 
            "url": "https://blog.golang.org/community-outreach-working-group"
        }, 
        {
            "author": "ferociousturtle", 
            "created_utc": 1504645990.0, 
            "domain": "self.golang", 
            "id": "6yb17h", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 46, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yb17h/used_go_for_more_than_2_years_what_are_your/", 
            "score": 34, 
            "selftext": "I'm considering a few tech stacks at the moment for web development (Elixir, Clojure, TypeScript+Node, and .NET Core). I'm interested in hearing from folks who have used Go for a while. What has gone well? What hasn't? If you could start your project over, would you still use Go?", 
            "subreddit": "golang", 
            "title": "Used go for more than 2 years? What are your thoughts about it?", 
            "url": "https://www.reddit.com/r/golang/comments/6yb17h/used_go_for_more_than_2_years_what_are_your/"
        }, 
        {
            "author": "kjnkjnkjnkjnkjnkjn", 
            "created_utc": 1504642915.0, 
            "domain": "self.golang", 
            "id": "6yap3o", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yap3o/how_do_you_rebuildrestart_your_app_on_file_changes/", 
            "score": 7, 
            "selftext": "I'm trying to use inotifywait. \n\nI have a web app I'm building and I want to restart the server on each file change. My problem now is that after the first file change the server starts but it blocks inotifywait from running until I manually stop it. \n\nAnyone have a solution to this? \n\nedit: solutions here aren't bad but I found this solution for inotifywait:\n\nhttps://stackoverflow.com/questions/12264238/restart-process-on-file-change-in-linux\n\n    #!/bin/sh\n    while true; do\n      go build\n      $@ &\n      PID=$!\n      inotifywait -r -e modify .\n      kill $PID\n    done\n\nRun like `$ ./this_script ./your_binary` in the root of your project directory.", 
            "subreddit": "golang", 
            "title": "How do you rebuild/restart your app on file changes?", 
            "url": "https://www.reddit.com/r/golang/comments/6yap3o/how_do_you_rebuildrestart_your_app_on_file_changes/"
        }, 
        {
            "author": "jcox250", 
            "created_utc": 1504640336.0, 
            "domain": "medium.com", 
            "id": "6yaeob", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yaeob/generating_prefixed_base64_ids_in_go/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Generating Prefixed Base64 ID's In Go", 
            "url": "https://medium.com/@jcox250/generating-prefixed-base64-ids-in-golang-e7731bd89c1b"
        }, 
        {
            "author": "kjnkjnkjnkjnkjnkjn", 
            "created_utc": 1504639570.0, 
            "domain": "self.golang", 
            "id": "6yabil", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6yabil/does_go_have_a_way_to_make_long_numbers_more/", 
            "score": 5, 
            "selftext": "Like if I have a number like 44000000000 it's kind of hard to tell what it is. Some languages allow underscores in numbers like 44_000_000_000. Does go have a way to make large numbers like this more readable?", 
            "subreddit": "golang", 
            "title": "Does go have a way to make long numbers more readable?", 
            "url": "https://www.reddit.com/r/golang/comments/6yabil/does_go_have_a_way_to_make_long_numbers_more/"
        }, 
        {
            "author": "whitedruid", 
            "created_utc": 1504628559.0, 
            "domain": "self.golang", 
            "id": "6y92ux", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y92ux/golang_mgo_and_a_persistent_connection/", 
            "score": 1, 
            "selftext": "Hi,\nCan anyone to help with an easy question by Golang/mgo? I want to rewrite of my newbie-code at Go for optimize an interaction between an easy HTTP-router and MongoDB engine. At now, the function for getting an propertie of object create a connection to the database at every time at calling. I have no to loosing by performance, because my router to serve of one hundred client per a hour (joke) :) But I want to clean up MongoDB log from excess records und level up of my Golang skill too :)\nWhta I need to add at the next code for optimize it?\n\n\n    func urlinfo (c Settings, u string) (r *Ro) {\n    Host := []string{\n        c.Mgo_host,\n    }\n    session, err := mgo.DialWithInfo(&mgo.DialInfo{\n        Addrs: Host,\n        Username: c.Mgo_user,\n        Password: c.Mgo_pass,\n        Database: c.Mgo_audb,\n    })\n    if err != nil {\n        fmt.Println(\"Could not to connect to MongoDB engine!\")\n        return\n    }\n    defer session.Close()\n    session.SetMode(mgo.Monotonic, true)\n\n    c := session.DB(c.Mgo_iodb).C(\"rtab\")\n    \n    clRo := new(Ro)\n    err = c.Find(bson.M{\"id\": u}).Select(bson.M{\"id\": &clRo.Id, \"acl\": &clRo.Acl, \"tZ\": &clRo.TZ }).One(&clRo)\n    return clRo\n    }  \n", 
            "subreddit": "golang", 
            "title": "Golang, mgo and a persistent connection...", 
            "url": "https://www.reddit.com/r/golang/comments/6y92ux/golang_mgo_and_a_persistent_connection/"
        }, 
        {
            "author": "weberc2", 
            "created_utc": 1504628558.0, 
            "domain": "self.golang", 
            "id": "6y92ut", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y92ut/help_authenticating_with_hackernews/", 
            "score": 0, 
            "selftext": "I'm trying to get my upvote information from HN, but their API doesn't support private user information, so I decided to try scraping; however, I can't seem to authenticate correctly (see my attempt here: https://gist.github.com/ns-cweber/20033179b75e3c0e301062c85b2d35e4). The login request returns 200, but passing the cookies to the /upvoted endpoint returns 39 bytes of non-HTML garbage (with http 200): sN/QH.\ufffdT(,q\ufffd\ufffd\ufffd. This also isn't the error message you get when auth fails--that is \"Cannot display that\" (try it yourself here: https://news.ycombinator.com/upvoted?id=dang&comments=t).\n\nI've tried double and triple checking the headers against my browser and against curl, and I'm confirming that the output is the same via httputil.DumpRequest. Still, my Go client is getting different data than curl or my browser.\n\nCould someone help me spot my error?", 
            "subreddit": "golang", 
            "title": "HELP: Authenticating with HackerNews", 
            "url": "https://www.reddit.com/r/golang/comments/6y92ut/help_authenticating_with_hackernews/"
        }, 
        {
            "author": "mingrammer", 
            "created_utc": 1504618973.0, 
            "domain": "github.com", 
            "id": "6y81ov", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y81ov/top_go_web_frameworks_based_on_their_stars/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Top Go web frameworks based on their Stars!", 
            "url": "https://github.com/mingrammer/go-web-framework-stars"
        }, 
        {
            "author": "hnlq715", 
            "created_utc": 1504606570.0, 
            "domain": "github.com", 
            "id": "6y7281", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y7281/simple_server_that_scrapes_nginx_vts_stats_and/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Simple server that scrapes Nginx vts stats and exports them via HTTP for Prometheus consumption", 
            "url": "https://github.com/hnlq715/nginx-vts-exporter"
        }, 
        {
            "author": "microo8", 
            "created_utc": 1504600390.0, 
            "domain": "github.com", 
            "id": "6y6oea", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y6oea/new_golymer_element_domrepeat/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "New golymer element: dom-repeat", 
            "url": "https://github.com/microo8/golymer/tree/master/elements/dom-repeat"
        }, 
        {
            "author": "asdasdasdaqqq", 
            "created_utc": 1504598291.0, 
            "domain": "self.golang", 
            "id": "6y6jz9", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 23, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y6jz9/how_do_you_handle_your_database_connection_in/", 
            "score": 42, 
            "selftext": "I'm just getting started trying to make a simple web app in go. All of the examples I look at just define a global db object and use it like this\n\n    package main\n    var db *some.DB\n    \n    func main() {\n        db = NewDB()\n        db.Create(&User{id:1})\n        db.Delete(&User{id:2})\n    }\nWhat is a better way to handle the database connection while still keeping it accessible from various models/routes?\n\nAre there any open source examples or implementations I could take a look at?\n\nThanks! ", 
            "subreddit": "golang", 
            "title": "How do you handle your database connection in non-trivial applications?", 
            "url": "https://www.reddit.com/r/golang/comments/6y6jz9/how_do_you_handle_your_database_connection_in/"
        }, 
        {
            "author": "vishesh92", 
            "created_utc": 1504597707.0, 
            "domain": "medium.com", 
            "id": "6y6iqr", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y6iqr/codon_workflow_framework_for_building_aggregator/", 
            "score": 15, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Codon: workflow framework for building aggregator APIs", 
            "url": "https://medium.com/groferseng/open-sourcing-codon-workflow-framework-for-building-aggregator-apis-f8e591a158b4?"
        }, 
        {
            "author": "callcifer", 
            "created_utc": 1504561133.0, 
            "domain": "aws.amazon.com", 
            "id": "6y3e2l", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y3e2l/aws_xray_sdk_for_go_beta/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "AWS X-Ray SDK for Go (Beta)", 
            "url": "https://aws.amazon.com/about-aws/whats-new/2017/08/aws-x-ray-sdk-for-go-beta/"
        }, 
        {
            "author": "tiagopotencia", 
            "created_utc": 1504553292.0, 
            "domain": "self.golang", 
            "id": "6y2jta", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y2jta/always_a_new_variable_when_multiople_returns/", 
            "score": 0, 
            "selftext": "I'm facing a wierd problem with Golang.\n\nOn `init()` function, i want to assign a value to my variable that was declared outside this function.\n\nBut to assign the value to this var, i need to get\n    `error`\nto check if everything is ok.\n\nHere is the code:\n\n    var retryValue time.Duration\n\n    func init() {\n\t    retryValue, err := time.ParseDuration(retries)\n    \n\t    if err != nil {\n\t\t    log.Fatal(\"retries value is invalid\", err)\n\t    }\n    }\n\n    func a(){\n\t    fmt.Println(retryValue)\n    }\n\nAnd i get the compiling error:\n    `retryValue declared and not used`\n\nI need to change `init()` to this:\n\n    func init() {\n\t    var err error\n\t    retryValue, err = time.ParseDuration(retries)\n\n\tif err != nil {\n\t\t    \n    log.Fatal(\"retries value is invalid\", err)\n\t    }\n    }\n\nThere is another way to solve this problem?\n    `:=`\nalways create a new variable if one of the variables are already declared? It's about variable golang's sope?\n\nThanks!", 
            "subreddit": "golang", 
            "title": "Always a new variable when multiople returns", 
            "url": "https://www.reddit.com/r/golang/comments/6y2jta/always_a_new_variable_when_multiople_returns/"
        }, 
        {
            "author": "monch0", 
            "created_utc": 1504552036.0, 
            "domain": "github.com", 
            "id": "6y2ezx", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y2ezx/warpwallet_implemented_in_go_for_the_terminal/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Warpwallet: implemented in go, for the terminal", 
            "url": "https://github.com/moncho/warpwallet"
        }, 
        {
            "author": "dlsniper", 
            "created_utc": 1504545996.0, 
            "domain": "blog.jetbrains.com", 
            "id": "6y1qzn", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 35, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y1qzn/gogland_eap_13_better_completion_new_inspections/", 
            "score": 79, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Gogland EAP 13: Better completion, new inspections, fixed performance bugs, and More.", 
            "url": "https://blog.jetbrains.com/go/2017/09/04/gogland-eap-13-better-completion-new-inspections-fixed-performance-bugs-and-more/"
        }, 
        {
            "author": "mwholt", 
            "created_utc": 1504544926.0, 
            "domain": "caddyserver.com", 
            "id": "6y1mnv", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y1mnv/caddy_0107_released_with_secure_forward_proxy/", 
            "score": 50, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Caddy 0.10.7 Released with Secure Forward Proxy Plugin", 
            "url": "https://caddyserver.com/blog/caddy-0_10_7-released"
        }, 
        {
            "author": "qrv3w", 
            "created_utc": 1504543325.0, 
            "domain": "github.com", 
            "id": "6y1g7s", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y1g7s/pianoai_using_portmidi_to_make_a_pianoplaying_ai/", 
            "score": 22, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "PIanoAI - using portmidi to make a piano-playing AI that learns in realtime", 
            "url": "https://github.com/schollz/PIanoAI"
        }, 
        {
            "author": "ibigbug2", 
            "created_utc": 1504540833.0, 
            "domain": "blog.xiaoba.me", 
            "id": "6y16dp", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y16dp/read_golang_memsstats_the_hard_way/", 
            "score": 3, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Read Golang MemsStats the Hard Way", 
            "url": "https://blog.xiaoba.me/2017/09/02/how-to-play-golang-with-gdb-and-python.html"
        }, 
        {
            "author": "tartpac", 
            "created_utc": 1504538814.0, 
            "domain": "github.com", 
            "id": "6y0yuy", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6y0yuy/chiefr_distributed_project_development_inspired/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Chiefr: Distributed project development inspired by the Linux kernel", 
            "url": "https://github.com/asciimoo/chiefr"
        }, 
        {
            "author": "Turmet", 
            "created_utc": 1504526009.0, 
            "domain": "self.golang", 
            "id": "6xzvmn", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xzvmn/wamp_websocket_library_client_for_go/", 
            "score": 3, 
            "selftext": "I have started using Go and want to use it to create a program that connects to a WAMP server. So I need a library that implements the client side of the WAMP protocol. I though it would be easy since Go is usually used for network io programs, but to my surprise I can not find a proper WAMP library that implements the client side half decently.\n\nThere is Turnpike https://github.com/jcelliott/turnpike , but its mostly focused on the server. The client side does not even implement a mechanism to notify if the connection has gone dead.\n\nAny suggestion appreciated.", 
            "subreddit": "golang", 
            "title": "WAMP websocket library (client) for Go", 
            "url": "https://www.reddit.com/r/golang/comments/6xzvmn/wamp_websocket_library_client_for_go/"
        }, 
        {
            "author": "Jelterminator", 
            "created_utc": 1504525686.0, 
            "domain": "github.com", 
            "id": "6xzuv7", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xzuv7/ann_virtualgo_v070_awesome_go_workspaces_now_with/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "[ANN] Virtualgo v0.7.0: awesome go workspaces, now with bindfs support and better defaults", 
            "url": "https://github.com/GetStream/vg/releases/tag/v0.7.0"
        }, 
        {
            "author": "tclineks", 
            "created_utc": 1504502401.0, 
            "domain": "github.com", 
            "id": "6xydbs", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 16, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xydbs/pqstream_stream_operations_out_of_a_postgres/", 
            "score": 17, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "pqstream: stream operations out of a Postgres database", 
            "url": "https://github.com/tmc/pqstream/blob/master/README.md"
        }, 
        {
            "author": "tech_tuna", 
            "created_utc": 1504478310.0, 
            "domain": "self.golang", 
            "id": "6xwc75", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 19, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xwc75/anyone_know_a_good_way_to_call_golang_library/", 
            "score": 4, 
            "selftext": "I'm working on a native library which I'm going to write in Golang and I need to access from Python, nodejs, Ruby, Java and PHP for now at least, I may need to support other languages eventually.\n\nI found this doc which shows how to make this work for the first four languages but not PHP: https://medium.com/learning-the-go-programming-language/calling-go-functions-from-other-languages-4c7d8bcc69bf\n\nI've googled around a bit but haven't found any active projects for calling into shared native libraries from PHP. . . I realize this is more of a PHP question potentially and I'm going to crosspost in r/php but if anyone here has recommendations, I'd be happy to hear about them.", 
            "subreddit": "golang", 
            "title": "Anyone know a \"good\" way to call Golang library code from PHP?", 
            "url": "https://www.reddit.com/r/golang/comments/6xwc75/anyone_know_a_good_way_to_call_golang_library/"
        }, 
        {
            "author": "deranjer", 
            "created_utc": 1504477424.0, 
            "domain": "self.golang", 
            "id": "6xw97k", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xw97k/web_gui_communication_options/", 
            "score": 3, 
            "selftext": "Just started learning golang and wanted to build a real time updating and interactive web ui. What are my options for communication between the web frontend and golang back end? I only have a little bit of PHP knowledge with basic HTML, never really done anything realtime.", 
            "subreddit": "golang", 
            "title": "Web gui communication options", 
            "url": "https://www.reddit.com/r/golang/comments/6xw97k/web_gui_communication_options/"
        }, 
        {
            "author": "bmadden19", 
            "created_utc": 1504474925.0, 
            "domain": "self.golang", 
            "id": "6xw0hz", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xw0hz/quad_art_with_go/", 
            "score": 46, 
            "selftext": "Hey all,\nI'm learning golang and I made a little art project using quad trees. Check it out https://github.com/bradymadden97/go-quads.\n", 
            "subreddit": "golang", 
            "title": "Quad art with Go", 
            "url": "https://www.reddit.com/r/golang/comments/6xw0hz/quad_art_with_go/"
        }, 
        {
            "author": "regeda", 
            "created_utc": 1504469843.0, 
            "domain": "github.com", 
            "id": "6xvi2h", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xvi2h/send_your_requests_using_stable_and_reliable/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Send your requests using stable and reliable approaches.", 
            "url": "https://github.com/regeda/go.failover"
        }, 
        {
            "author": "renemarxis", 
            "created_utc": 1504467122.0, 
            "domain": "self.golang", 
            "id": "6xv8a2", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xv8a2/converting_a_excel_sheet_to_golang/", 
            "score": 5, 
            "selftext": "Hello. I have a realy realy big excel sheet that needs to be ported to a web app. I think about using go for this. Any ideas if there is something out there that can be used for this? The sheet has many calculated values, and also some comboxes for selections. Many functions in the Excel-sheet are implemented as macros/vbs.\nI saw, that go supports google-sheets, so this could be one option, to store the data in there and do the calculations in google-sheet. But i would prefer some solution, where everything is on my server.", 
            "subreddit": "golang", 
            "title": "Converting a excel sheet to golang", 
            "url": "https://www.reddit.com/r/golang/comments/6xv8a2/converting_a_excel_sheet_to_golang/"
        }, 
        {
            "author": "chmikes", 
            "created_utc": 1504452604.0, 
            "domain": "github.com", 
            "id": "6xtrb4", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xtrb4/please_review_my_secure_cookie_package/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Please, review my secure cookie package", 
            "url": "https://github.com/chmike/cookie"
        }, 
        {
            "author": "ishanjain28", 
            "created_utc": 1504445394.0, 
            "domain": "self.golang", 
            "id": "6xt500", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xt500/instamojocom_api_wrapper/", 
            "score": 3, 
            "selftext": "Hey, I wrote a instamojo API Wrapper in golang. Take a look here, https://github.com/ishanjain28/instamojo\n\nDocumentation: https://godoc.org/github.com/ishanjain28/instamojo\n\nPlease let me know if you have any suggestion/criticism or advice.", 
            "subreddit": "golang", 
            "title": "Instamojo.com API Wrapper", 
            "url": "https://www.reddit.com/r/golang/comments/6xt500/instamojocom_api_wrapper/"
        }, 
        {
            "author": "Emacs24", 
            "created_utc": 1504434624.0, 
            "domain": "sirkon.github.io", 
            "id": "6xsghz", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 33, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xsghz/fast_log_parsing_with_go/", 
            "score": 33, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Fast log parsing with Go", 
            "url": "https://sirkon.github.io/ldetool/"
        }, 
        {
            "author": "skarlso", 
            "created_utc": 1504428045.0, 
            "domain": "self.golang", 
            "id": "6xs3lu", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xs3lu/furnace_binaries_are_now_available/", 
            "score": 0, 
            "selftext": "Hey folks.    \n    \nSo, I thought that maybe people don't want to get the source and compile stuff, but rather want a ready to use binary for each operating system. So I put a quick (ugly) website where you can download pre-compiled binaries for each operating system with a ~~MD5~~ SHA 256 digest for verification.    \n    \n[Furnace WebSite](https://skarlso.github.io/furnace-web/).    \n    \n[Furnace](https://github.com/Skarlso/go-furnace) is a website hosting solution written in go using CodeDeploy and CloudFormation stacks on AWS.    \nCheers!", 
            "subreddit": "golang", 
            "title": "Furnace Binaries are now available", 
            "url": "https://www.reddit.com/r/golang/comments/6xs3lu/furnace_binaries_are_now_available/"
        }, 
        {
            "author": "RussellLuo", 
            "created_utc": 1504427444.0, 
            "domain": "github.com", 
            "id": "6xs2i0", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xs2i0/a_supervisor_backed_service_discoverer_for/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A Supervisor backed service discoverer for automatic service-discovery.", 
            "url": "https://github.com/RussellLuo/superdiscoverer"
        }, 
        {
            "author": "akerro", 
            "created_utc": 1504427304.0, 
            "domain": "self.golang", 
            "id": "6xs28q", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xs28q/is_there_any_tomcatwildflylike_container_manager/", 
            "score": 3, 
            "selftext": "Is there any application/container for golang apps that would work similarly to Tomcat, where I can upload a binary file and it would automatically start the app with given path/port? \n\nIf now how else do you guys deploy a few microservices written in Golang? Docker?", 
            "subreddit": "golang", 
            "title": "Is there any Tomcat/Wildfly-like container manager for Golang apps?", 
            "url": "https://www.reddit.com/r/golang/comments/6xs28q/is_there_any_tomcatwildflylike_container_manager/"
        }, 
        {
            "author": "kjnkjnkjnkjnkjnkjn", 
            "created_utc": 1504404472.0, 
            "domain": "self.golang", 
            "id": "6xqkp4", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xqkp4/is_there_a_package_in_the_standard_library_for/", 
            "score": 14, 
            "selftext": "I'm trying to strip things like `\\n`, `&gt;`, etc from comments I retrieved from the reddit API. What is the standard way to achieve this?", 
            "subreddit": "golang", 
            "title": "is there a package in the standard library for sanitizing text?", 
            "url": "https://www.reddit.com/r/golang/comments/6xqkp4/is_there_a_package_in_the_standard_library_for/"
        }, 
        {
            "author": "puffybunion", 
            "created_utc": 1504400980.0, 
            "domain": "self.golang", 
            "id": "6xq9rx", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 62, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xq9rx/downvoting_posts_is_a_really_discouraging/", 
            "score": 0, 
            "selftext": "Hi,\n\nJust looking around the sub there's a surprising amount of posts with a score of 0.\n\nIf you guys keep downvoting everything that moves, people are going to get discouraged and not bother posting anymore.\n\nIf you don't like it - just don't upvote! 1 is SO much better then 0.\n\nNOTE: Not a butt-hurt poster, just a casual passer by who loves Go and wants to be part of a _happy_ community.\n\nEDIT: Apparently this post was construed as an order.. Uh.. OK..", 
            "subreddit": "golang", 
            "title": "Downvoting posts is a really discouraging practice. If you don't like it just don't upvote!", 
            "url": "https://www.reddit.com/r/golang/comments/6xq9rx/downvoting_posts_is_a_really_discouraging/"
        }, 
        {
            "author": "deckarep", 
            "created_utc": 1504388041.0, 
            "domain": "github.com", 
            "id": "6xp5p8", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xp5p8/bladerunner_a_remote_ssh_commandline_runner_based/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Bladerunner a remote SSH command-line runner based on TOML recipe files. (very alpha)", 
            "url": "https://github.com/deckarep/bladerunner"
        }, 
        {
            "author": "shark1337", 
            "created_utc": 1504374057.0, 
            "domain": "self.golang", 
            "id": "6xnkav", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xnkav/generate_idiomatic_go_sql_code_with_xo/", 
            "score": 11, 
            "selftext": "Hey, I've recently found this library https://github.com/knq/xo that generates idiomatic go code for sql dbs.\n\n From what I see, it generated exactly what's needed, no more, no less. I'm wondering if anyone is actually using this in production or if I should go raw sql. That's a good option to get consistent db code with minimum effort though", 
            "subreddit": "golang", 
            "title": "Generate idiomatic go sql code with xo", 
            "url": "https://www.reddit.com/r/golang/comments/6xnkav/generate_idiomatic_go_sql_code_with_xo/"
        }, 
        {
            "author": "aunyks", 
            "created_utc": 1504370424.0, 
            "domain": "github.com", 
            "id": "6xn4u9", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xn4u9/create_a_new_bitcoin_private_key_from_the_terminal/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Create a New Bitcoin Private Key From the Terminal!", 
            "url": "https://github.com/aunyks/create-btc-wallet"
        }, 
        {
            "author": "aten_j", 
            "created_utc": 1504363063.0, 
            "domain": "github.com", 
            "id": "6xmb98", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xmb98/crosslanguage_serialization_for_golang_greenpack/", 
            "score": 45, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Cross-language serialization for Golang: greenpack adds versioning, stronger typing, and optional schema atop msgpack. Faster than protobufs.", 
            "url": "https://github.com/glycerine/greenpack"
        }, 
        {
            "author": "8lall0", 
            "created_utc": 1504360374.0, 
            "domain": "self.golang", 
            "id": "6xm1kl", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xm1kl/proposal_warning_or_error_if_different_scoped/", 
            "score": 0, 
            "selftext": "    package main\n    \n    import \"fmt\"\n    \n    func main() {\n    \tvar foo int\n    \n    \tfor i, foo := 0, \"Foo\"; i < 1; i++ {\n    \t\tfmt.Println(i, foo)\n    \t}\n    \n    \tfmt.Printf(\"%s\", foo)\n    }\n    \nHere i have the **foo** var that is declared before the other **foo** inside the loop.\n\nThe behavior is correct due to scope, but i'd like to be warned if i have a variable with the same name (created with the **:=** construct) that the one declared with the **var** keyword before.\n\nWhat do you think about that?", 
            "subreddit": "golang", 
            "title": "Proposal: warning or error if different scoped variables have the same name.", 
            "url": "https://www.reddit.com/r/golang/comments/6xm1kl/proposal_warning_or_error_if_different_scoped/"
        }, 
        {
            "author": "titpetric", 
            "created_utc": 1504351892.0, 
            "domain": "scene-si.org", 
            "id": "6xld3j", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xld3j/parsing_strings_with_go_tit_petric/", 
            "score": 13, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Parsing strings with Go - Tit Petric", 
            "url": "https://scene-si.org/2017/09/02/parsing-strings-with-go/"
        }, 
        {
            "author": "throwawaybeginr", 
            "created_utc": 1504332701.0, 
            "domain": "self.golang", 
            "id": "6xk61n", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 30, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xk61n/what_part_of_the_spec_makes_the_executable_size/", 
            "score": 21, 
            "selftext": "C and C++ are suitable for embedded computing, and widely used for that purpose, even on microcontrollers with vanishingly small amounts of RAM - such as 32 KB like on the ATmega32, an 8-bit microcontroller in very wide usage and costing $1-$2 in quantities of one.  Certainly as you go up to 64 KB, 128 KB, 512 KB, there are lots and lots of people programming in C and C++.\n\nWhat is interesting is that when you look at the Go specification, it really doesn't say all that much.  It's a small language.  The biggest thing the specification references directly is all of UTF-8, which obviously includes many code points.\n\nWhat I am curious about is what else makes up that very large executable size?\n\nA \"hello world\" program takes up 1.3 MB and takes 930 KB of RAM, which is impressively small.  But where does it all go?  Unicode?  Garbage collection code?\n\nIt seems to me that the language itself is not that large so I'm very curious about the size.  The C specification is certainly larger.\n\nSo I'm curious about the breakdown?  By the way these memory usages and compiled file sizes are very impressive.  I'm just curious what's in them.\n\nIf you cut out Unicode, for example because the program did not need to do text-based IO at all, how much of that could you save?  It seems to me the largest part of the spec.\n\nThe reason Go might still be interesting, of course, is because it's such a small and \"correct\" language.  It's possible to code it after a bit of experience with very high confidence regarding what it is doing....", 
            "subreddit": "golang", 
            "title": "what part of the spec makes the executable size so much larger than C/C++?", 
            "url": "https://www.reddit.com/r/golang/comments/6xk61n/what_part_of_the_spec_makes_the_executable_size/"
        }, 
        {
            "author": "stoned_phillips", 
            "created_utc": 1504316127.0, 
            "domain": "self.golang", 
            "id": "6xizkf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xizkf/why_would_you_want_to_use_printf_over_print_or/", 
            "score": 4, 
            "selftext": "*EDIT* I had no idea what a formatted string was until some people answered this..I know, I'm a complete newb. Thanks everybody, this was real helpful.\n\nAfter running some throwaway programs, here's what I've gathered about `Print`, `Printf`, and `Println`:\n\n* `Print` will print number variables, and will not include a line break at the end.\n* `Printf` will not print number variables, and will not include a line break at the end.\n* `Println` will print number variables, and will include a line break at the end.\n\nIt seems to me the clear loser here is `Printf`, since it's the only one of the three that cannot print number variables.\n\nSo, my questions is: why would you use `Printf`? Does it save memory or something?", 
            "subreddit": "golang", 
            "title": "Why would you want to use Printf over Print or Println?", 
            "url": "https://www.reddit.com/r/golang/comments/6xizkf/why_would_you_want_to_use_printf_over_print_or/"
        }, 
        {
            "author": "jeevatkm", 
            "created_utc": 1504313140.0, 
            "domain": "aahframework.org", 
            "id": "6xipzh", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xipzh/ann_aah_web_framework_for_go_v08_released/", 
            "score": 10, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "[ANN] aah web framework for Go, v0.8 Released", 
            "url": "https://aahframework.org"
        }, 
        {
            "author": "ImreSamu", 
            "created_utc": 1504306573.0, 
            "domain": "blog.cloudflare.com", 
            "id": "6xi52i", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xi52i/sidh_in_go_for_quantumresistant_tls_13/", 
            "score": 40, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "SIDH in Go for quantum-resistant TLS 1.3", 
            "url": "https://blog.cloudflare.com/sidh-go/"
        }, 
        {
            "author": "hybsuns", 
            "created_utc": 1504295416.0, 
            "domain": "medium.com", 
            "id": "6xgzmp", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xgzmp/model_to_dto_mapper_my_first_experience_with_go/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Model to DTO Mapper: My first experience with Go reflect", 
            "url": "https://medium.com/@houyubing24/model-to-dto-mapper-my-first-experience-with-go-reflect-6cc68ccb4354"
        }, 
        {
            "author": "HugoWeb", 
            "created_utc": 1504292847.0, 
            "domain": "self.golang", 
            "id": "6xgpq6", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xgpq6/use_python_to_test_golang_web_services/", 
            "score": 0, 
            "selftext": "Hi guys,\nI was just wondering how common it is, since Python is so faster to write and manipulate objects, to use Python instead of Go to exercise HTTP APIs?\n", 
            "subreddit": "golang", 
            "title": "Use python to test Golang web services?", 
            "url": "https://www.reddit.com/r/golang/comments/6xgpq6/use_python_to_test_golang_web_services/"
        }, 
        {
            "author": "nesigma", 
            "created_utc": 1504291556.0, 
            "domain": "self.golang", 
            "id": "6xgkqg", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xgkqg/which_are_your_best_tools_for_testing_go_web_apps/", 
            "score": 4, 
            "selftext": "I am new to security. I've written a web application in Go that has protections against common attacks like CSRF and SQL injection. But I would like to know how secure it actually is and discover any other security issues it might have.\n\nWhich are your best Go specific or other tools for that?", 
            "subreddit": "golang", 
            "title": "Which are your best tools for testing Go web apps for security issues?", 
            "url": "https://www.reddit.com/r/golang/comments/6xgkqg/which_are_your_best_tools_for_testing_go_web_apps/"
        }, 
        {
            "author": "esimov", 
            "created_utc": 1504282680.0, 
            "domain": "github.com", 
            "id": "6xfl15", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xfl15/a_fast_almost_gaussian_blur_implementation_in_go/", 
            "score": 21, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A fast almost Gaussian Blur implementation in Go", 
            "url": "https://github.com/esimov/stackblur-go"
        }, 
        {
            "author": "forfuncsake", 
            "created_utc": 1504275891.0, 
            "domain": "forfuncsake.github.io", 
            "id": "6xeumq", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xeumq/til_lenfoo_is_a_valid_start_index_when_slicing_a/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "TIL len(foo) is a valid start index when slicing a slice, array or string.", 
            "url": "https://forfuncsake.github.io/post/2017/09/when-go-slice-bounds-get-hazy/"
        }, 
        {
            "author": "hybsuns", 
            "created_utc": 1504274897.0, 
            "domain": "self.golang", 
            "id": "6xeqzn", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xeqzn/how_do_you_map_structs_in_golang/", 
            "score": 0, 
            "selftext": "Coming from C# .NET MVC background, I appreciate the utility of AutoMapper that maps my domain model with DTO. This significantly relieves the burden of mapping objects.\n\nCurrently, I am working on my personal project that employs layered design. I am using DTO for client-side data representation. To be honest, my DTO is not much different from my business logic model, except certain data are removed in DTO for security reasons. I have a long list of domain objects, and each of them can be mapped to a variety of DTOs depending on the use case, and writing these mapper functions is tedious.\n\nSo, do any of you know if there is any sort of mappers that can (partially) reduce the workload of writing mapper functions? Thanks! ", 
            "subreddit": "golang", 
            "title": "How do you map structs in Golang", 
            "url": "https://www.reddit.com/r/golang/comments/6xeqzn/how_do_you_map_structs_in_golang/"
        }, 
        {
            "author": "shovelpost", 
            "created_utc": 1504273622.0, 
            "domain": "improbable.io", 
            "id": "6xemh1", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 26, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xemh1/grpcweb_moving_past_restjson_towards_typesafe_web/", 
            "score": 45, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "gRPC-Web: Moving past REST+JSON towards type-safe Web APIs", 
            "url": "https://improbable.io/games/blog/grpc-web-moving-past-restjson-towards-type-safe-web-apis"
        }, 
        {
            "author": "touristtam", 
            "created_utc": 1504264472.0, 
            "domain": "github.com", 
            "id": "6xdv3u", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xdv3u/a_simple_secure_self_destructing_message_service/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A simple secure self destructing message service, using hashicorp vault as a backend", 
            "url": "https://github.com/algolia/sup3rS3cretMes5age"
        }, 
        {
            "author": "suddendef", 
            "created_utc": 1504262734.0, 
            "domain": "big-elephants.com", 
            "id": "6xdqms", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xdqms/how_to_mock_an_http2_server_in_your_go_tests/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "How to mock an HTTP/2 server in your Go tests", 
            "url": "http://big-elephants.com/2017-09/this-programmer-tried-to-mock-an-http-slash-2-server-in-go-and-heres-what-happened/"
        }, 
        {
            "author": "jodosha", 
            "created_utc": 1504256146.0, 
            "domain": "blog.dnsimple.com", 
            "id": "6xdbp9", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xdbp9/how_to_test_go_https_services/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "How to test Go HTTPS Services", 
            "url": "https://blog.dnsimple.com/2017/08/how-to-test-golang-https-services/"
        }, 
        {
            "author": "stanislavb", 
            "created_utc": 1504254504.0, 
            "domain": "go.libhunt.com", 
            "id": "6xd8bm", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xd8bm/awesome_go_newsletter_issue_68/", 
            "score": 5, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Awesome Go Newsletter - Issue 68", 
            "url": "https://go.libhunt.com/newsletter/68"
        }, 
        {
            "author": "stanislavb", 
            "created_utc": 1504254209.0, 
            "domain": "github.com", 
            "id": "6xd7ov", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xd7ov/goby_go_programming_with_ruby_syntax/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Goby - GO programming with ruBY syntax", 
            "url": "https://github.com/goby-lang/goby"
        }, 
        {
            "author": "pramodhs", 
            "created_utc": 1504242815.0, 
            "domain": "mappingthejourney.com", 
            "id": "6xchqt", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6xchqt/listen_to_ryan_dahl_creator_of_nodejs_on/", 
            "score": 151, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Listen to Ryan Dahl, Creator of Node.js on programming with Go", 
            "url": "https://www.mappingthejourney.com/single-post/2017/08/31/Episode-8-Interview-with-Ryan-Dahl-Creator-of-Nodejs"
        }
    ], 
    "subreddit_creation_utc": 1257929668.0, 
    "subscribers": 34631, 
    "title": "The Go Programming Language", 
    "title_word_count_occurrences": {
        "android": 3, 
        "aws": 2, 
        "c++": 1, 
        "css": 1, 
        "docker": 6, 
        "github": 2, 
        "golang": 46, 
        "google": 1, 
        "intel": 1, 
        "ios": 1, 
        "java": 2, 
        "javascript": 1, 
        "linux": 3, 
        "machine learning": 1, 
        "perl": 1, 
        "php": 1, 
        "python": 1, 
        "ruby": 1, 
        "shell": 1, 
        "sql": 9, 
        "sublime": 1, 
        "tex": 9
    }, 
    "top_score_submissions": [
        {
            "author": "alecthomas", 
            "created_utc": 1505743857.0, 
            "domain": "github.com", 
            "id": "70v8fd", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 16, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/70v8fd/just_released_chroma_a_pure_go_syntax/", 
            "score": 214, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Just released Chroma, a pure Go syntax highlighting engine with support for ~150 languages", 
            "url": "https://github.com/alecthomas/chroma"
        }, 
        {
            "author": "farslan", 
            "created_utc": 1505419565.0, 
            "domain": "arslan.io", 
            "id": "704ske", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/704ske/the_ultimate_guide_to_writing_a_go_tool/", 
            "score": 207, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "The ultimate guide to writing a Go tool", 
            "url": "https://arslan.io/2017/09/14/the-ultimate-guide-to-writing-a-go-tool/"
        }, 
        {
            "author": "shovelpost", 
            "created_utc": 1506705891.0, 
            "domain": "i.redd.it", 
            "id": "739bgd", 
            "is_reddit_media_domain": true, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 33, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/739bgd/a_gopher_powered_light_bulb/", 
            "score": 168, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "A gopher powered light bulb!", 
            "url": "https://i.redd.it/w40yalbewuoz.png"
        }, 
        {
            "author": "cenuij", 
            "created_utc": 1505319717.0, 
            "domain": "groups.google.com", 
            "id": "6zvmuk", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 41, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/6zvmuk/go_is_being_ported_to_fuchsia_os_core_services/", 
            "score": 165, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go is being ported to Fuchsia OS, core services including network stack will be implemented in Go", 
            "url": "https://groups.google.com/forum/#!topic/golang-dev/2xuYHcP0Fdc"
        }, 
        {
            "author": "howeman", 
            "created_utc": 1506035509.0, 
            "domain": "commandcenter.blogspot.com", 
            "id": "71n0pz", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/golang/comments/71n0pz/go_ten_years_and_climbing/", 
            "score": 160, 
            "selftext": "", 
            "subreddit": "golang", 
            "title": "Go: Ten years and climbing", 
            "url": "https://commandcenter.blogspot.com/2017/09/go-ten-years-and-climbing.html"
        }
    ], 
    "total_submissions": 360, 
    "utc_of_data_collection_completion": "2017-10-16 18:50:36", 
    "utc_of_data_collection_start": "2017-10-16 18:50:34"
}