{
    "active_user_count": 31, 
    "advertiser_category": null, 
    "audience_target": "", 
    "avg_comment_num_per_submission": 7, 
    "avg_submission_score": 6, 
    "collection_range_end_unix_timestamp": 1506816000, 
    "collection_range_end_utc": "2017-10-01 00:00:00", 
    "collection_range_start_unix_timestamp": 1504224000, 
    "collection_range_start_utc": "2017-09-01 00:00:00", 
    "description": "From [its website][1]:\n\n> Git is a [free and open source][2] distributed version control system designed to handle everything from small to very large projects with speed and efficiency.\n\nGit is _not_ the same as GitHub. GitHub did not create Git. For GitHub-specific posts, please see /r/github.\n\nGit is not an acronym or initialism: please write `git` or Git, but not GIT.\n\n* * * \n\n**Documentation**\n\n* [Pro Git](http://git-scm.com/book)\n* [Git Ready](http://gitready.com/)\n* [Git Reference](http://gitref.org/)\n* [Git Magic](http://www-cs-students.stanford.edu/~blynn/gitmagic/index.html)\n* [Git for Computer Scientists](http://eagain.net/articles/git-for-computer-scientists/)\n* [A Visual Git Reference](http://marklodato.github.com/visual-git-guide/index-en.html?no-svg)\n* [Git Primer](http://danielmiessler.com/study/git/)\n* [Git Immersion](http://gitimmersion.com/)\n* [Think Like a Git](http://think-like-a-git.net/)\n* [Git Workflows](http://documentup.com/skwp/git-workflows-book)\n* [Git on Stack Overflow](http://stackoverflow.com/questions/tagged/git)\n* [Getting Git Right](https://www.atlassian.com/git/)\n\n* * *\n\n**Graphical Clients**\n\n* [GitHub Desktop](https://desktop.github.com/) (Win, Mac)\n* [SourceTree](http://www.sourcetreeapp.com/) (Win, Mac)\n* [SmartGit](http://www.syntevo.com/smartgit/) (Win, Mac, Linux)\n* [GitX](http://gitx.frim.nl/) (Mac)\n* [Tower](http://www.git-tower.com/) (Win, Mac)\n* [Git Extensions](http://gitextensions.github.io/) (Win)\n* [TortoiseGit](https://tortoisegit.org/) (Win)\n* [GitEye](http://www.collab.net/products/giteye) (Win, Mac, Linux)\n* [GitKraken](http://www.gitkraken.com/) (Win, Mac, Linux)\n* [Working Copy](http://workingcopyapp.com/) (iOS)\n* [Git2Go](http://git2go.com/) (iOS)\n\n* * *\n\n**Code Hosting**\n\n* [GitHub](https://github.com/)\n* [GitLab](https://gitlab.com/)\n* [Bitbucket](https://bitbucket.org/)\n* [Codebase](https://www.codebasehq.com/)\n* [Bonobo Git Server](https://bonobogitserver.com/)\n* [Gogs](https://gogs.io/)\n* [Deveo](https://deveo.com/)\n* [Gitea](https://gitea.io/)\n* [Visual Studio Team Services](https://visualstudio.com/team-services/)\n\n[1]: http://git-scm.com/\n[2]: http://git-scm.com/about/free-and-open-source", 
    "display_name": "git", 
    "domain_occurrences": {
        "about.gitlab.com": 1, 
        "asciinema.org": 1, 
        "blog.nilbus.com": 1, 
        "brewing-bits.com": 1, 
        "dev.to": 1, 
        "evilmartians.com": 1, 
        "johnothecoder.uk": 1, 
        "justinaiken.com": 1, 
        "medium.com": 5, 
        "mindweb.network": 1, 
        "oilshell.org": 2, 
        "ownyourbits.com": 2, 
        "plasticscm.com": 1, 
        "reddit.com": 1, 
        "self.git": 70, 
        "wholien.xyz": 1, 
        "youtube.com": 1
    }, 
    "id": "2qhv1", 
    "num_external_website_posts": 22, 
    "num_text_posts": 70, 
    "public_description": "", 
    "submissions": [
        {
            "author": "KevMar", 
            "created_utc": 1506800987.0, 
            "domain": "self.git", 
            "id": "73h28y", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/73h28y/team_moving_projects_to_git_do_i_understand_git/", 
            "score": 9, 
            "selftext": "long story short, our team has one large project with a single branch in TFS that I am slicing up into much smaller TFS git repos. A lot of these are tools\\utilities\\helper scripts where local dev testing is sufficient and everything checked in is usable by the team. Team has various levels of GIT experience. \n\nSo each project should have a master branch and we are to create feature branches for our work. Do all projects need a develop branch for consistency or only the ones that may have multiple feature branches going?  A few important pieces will have someone managing pull requests but devs will be able to merge to master for most of these.\n\nFeel free to question\\guide me on the above approach, but here is where I want to be sure on my understanding of things:\n\n**rebase**: this is done before a feature is merged into a main branch. This is only necessary if you want the history to look a certain way. This is more a personal preference, but the team should set a standard on this one way or another. How important is this?\n\n**squash**: This is done on your local before you push to a shared branch because it rewrites history. You do this to merge small/noisy commits together and present your work as a single change. Keeps the history clean, easy to undo, and easy to cherry pick if you should need to do so. Never squash changes that have already been pushed.\n\n**merge  --no-ff**: I'm soft on this one. Yes, it merges but is having that merge commit the recommended approach or is it extra noise that should be avoided? Or is there specific guidance as to when `--no-ff` should be used. Like fast forward when merging into features but not when integrating back to main branches. That is how I currently utilize it.\n\nI want to hash out my understanding a bit here because I am sure that I will be facilitating the discussion with the team on how we should approach these scenarios. Other than a discussion on commit messages, is there anything else that a team should discuss as they move to git?\n\nUpdate: Thank you everyone for all the feedback. I have mostly used git on solo projects. I just wanted to reaffirm that I had a solid grasp before I find myself talking to it in front of a group. I learned a few things.", 
            "subreddit": "git", 
            "title": "Team moving projects to git, do I understand git?", 
            "url": "https://www.reddit.com/r/git/comments/73h28y/team_moving_projects_to_git_do_i_understand_git/"
        }, 
        {
            "author": "another_lease", 
            "created_utc": 1506799018.0, 
            "domain": "self.git", 
            "id": "73gv9j", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/73gv9j/gui_windows_for_portable_git_for_a_beginner/", 
            "score": 2, 
            "selftext": "Background:\n\n* I'm a beginner to Git.\n\n* I intend to use it to store a small repository on Dropbox on my PC.\n\n* I have downloaded portable Git (I prefer using portable software when possible).\n\nWould love your recos on which GUI (Windows 7) I should try that will play well with the portable version of Git.\n\n", 
            "subreddit": "git", 
            "title": "GUI (Windows) for portable Git for a beginner", 
            "url": "https://www.reddit.com/r/git/comments/73gv9j/gui_windows_for_portable_git_for_a_beginner/"
        }, 
        {
            "author": "oilshell", 
            "created_utc": 1506754202.0, 
            "domain": "oilshell.org", 
            "id": "73divg", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/73divg/git_log_in_html_a_harder_problem_and_a_safe/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Git Log in HTML: A Harder Problem and A Safe Solution", 
            "url": "http://www.oilshell.org/blog/2017/09/29.html"
        }, 
        {
            "author": "Rohaq", 
            "created_utc": 1506710964.0, 
            "domain": "self.git", 
            "id": "739vfg", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/739vfg/git_revert_of_old_merge/", 
            "score": 3, 
            "selftext": "So here's the scenario:\n\nWe use Gitflow. I merged the latest changes from a feature branch into develop a few weeks ago, as I was under the impression that we were releasing our two main features at the same time - I found out this wasn't the case this week.\n\nOkay, so we'll need to revert that merge, which returns develop back into a decent state. The problem is that I'm not sure how to get our feature branch back into a good state without either worrying about the revert replaying over our feature branch content later and removing files, and I can't find a way to do a revert of the reverted merge in our branch properly; when a bunch of deleted files return from the dead, they overwriting our feature branch changes made after the first merge from weeks ago.\n\nWhat I need is a way to do the latter case (to return the files), then replay all the changes made in the feature branch after that particular commit. Any suggestions?", 
            "subreddit": "git", 
            "title": "Git revert of old merge", 
            "url": "https://www.reddit.com/r/git/comments/739vfg/git_revert_of_old_merge/"
        }, 
        {
            "author": "JustinAiken", 
            "created_utc": 1506643127.0, 
            "domain": "justinaiken.com", 
            "id": "73458k", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 19, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/73458k/git_cherrydrop/", 
            "score": 24, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "git cherry-drop", 
            "url": "https://justinaiken.com/2017/09/28/git-cherry-drop/"
        }, 
        {
            "author": "DaBeechees", 
            "created_utc": 1506612608.0, 
            "domain": "self.git", 
            "id": "730tyq", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/730tyq/philosophy_should_i_commit_the_new_tests_along/", 
            "score": 6, 
            "selftext": "I have a class and I have some unit tests, and so far they all pass.\nThen I wrote some new tests for the same class and found that these new tests are failing (yay!).\n\nShould I commit the new tests, then fix the class and then commit the fix?\nOr should I commit the new tests *and* the fixed class in the same commit?", 
            "subreddit": "git", 
            "title": "[Philosophy] Should I commit the new tests along with the fix or separately?", 
            "url": "https://www.reddit.com/r/git/comments/730tyq/philosophy_should_i_commit_the_new_tests_along/"
        }, 
        {
            "author": "8aviav", 
            "created_utc": 1506584921.0, 
            "domain": "self.git", 
            "id": "72ynaf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/72ynaf/git_alias_for_git_grep_exclude/", 
            "score": 2, 
            "selftext": "    grxc = \"!f() { array=();for arg in ${@:2};do array+=(':(exclude)'$arg'');done;git grep $1 -- './*' ${array[@]}; }; f\"\n\n\nTo be added to `[alias]` section in `.gitconfig`.\n\nUsage: `git grxc test app/assets/* app/views/* cookbooks config` does a `git grep` over current directory for pattern `test`, excluding pathspecs `app/assets/*`, `app/views/*`, `cookbooks` and `config`.\n\nI use this as a tool every few days. If you know other ways to achieve similar things, or if you spot flaws in the shell code, I'd appreciate feedback in the comments", 
            "subreddit": "git", 
            "title": "git alias for git grep exclude", 
            "url": "https://www.reddit.com/r/git/comments/72ynaf/git_alias_for_git_grep_exclude/"
        }, 
        {
            "author": "qazzier", 
            "created_utc": 1506564624.0, 
            "domain": "self.git", 
            "id": "72x4ds", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/72x4ds/need_some_suggestions_on_a_better_workflow/", 
            "score": 5, 
            "selftext": "I work in a small team working on a website where nobody is very familiar with git workflows.\n\nOur current branches are master, premaster, and feature branches. We work on feature branches and merge into premaster when ready to go into our test / qa environment. When ready to go into master we cherry pick the commits to master.\n\nWe have a production website which pulls from master and one test website which pulls from premaster.\n\nThe problem is changes in premaster will sometimes be there for months while other stuff is ready to go sooner. We end up getting conflicts when cherry picking commits from premaster to master and it can be a bit of a hassle to deal with.\n\nIs there a better flow to help with this?", 
            "subreddit": "git", 
            "title": "Need some suggestions on a better workflow", 
            "url": "https://www.reddit.com/r/git/comments/72x4ds/need_some_suggestions_on_a_better_workflow/"
        }, 
        {
            "author": "Nevyn522", 
            "created_utc": 1506539700.0, 
            "domain": "self.git", 
            "id": "72uksl", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 13, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/72uksl/git_windows_client_with_strong_rebase/", 
            "score": 2, 
            "selftext": "I'm currently using Git Extensions and/or command line. However, I'm hacking through prototyping to production code, and am finding my tools are insufficient when I'm prepping a PR. Namely, I want to be able to easily fix up sequential commits (prefer: drag and drop), or right-click and alter the commit message without stepping through the entire git rebase flow (although I will know it happens each time). Mostly, my current tools tend to remove just enough of the context that I have trouble tracking where I was in the process. \n\nI know I can switch to creating a new branch and cherry-picking commits over, but I'm hoping that someone knows of a Git client that has improvements in this area.\n\nThanks!", 
            "subreddit": "git", 
            "title": "Git Windows Client with strong rebase functionality", 
            "url": "https://www.reddit.com/r/git/comments/72uksl/git_windows_client_with_strong_rebase/"
        }, 
        {
            "author": "grizzlyhamster", 
            "created_utc": 1506508578.0, 
            "domain": "self.git", 
            "id": "72relp", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/72relp/whats_the_right_workflow_with_pull_requests/", 
            "score": 3, 
            "selftext": "I'm struggling a little bit with learning how to do stuff correctly. I'm using gitlab at the moment, but I imagine it's similar with github. There is the main repository, let's call it company/app and I have my own repo forked from it, called grizzlyhamster/app. My local repo has two remotes: origin (grizzlyhamster/app@gitlab) and upstream (company/app@gitlab).\n\nNow whenever I do something, I create a feature branch in my local and gitlab repos and push commits to it, let's call it featureX. Once I'm done, I create a Pull Request from grizzlyhamaster/app/featureX to company/app/master, right? How do I then get the masters in sync? Do I just merge featureX to my own master? But then my master and company's master are not at the same head commit, even though they contain the same code. How do I then start a new feature branch, when masters are divergent? (Not sure if that's the right word). Then should I maybe pull company/app/master to my own master after PR is merged and merge them? But then, if I squash the PR, won't I lose the dev history in featureX? What if the PR awaits review and I want to start working on featureY right away?\n\nGod, git is so hard! (I know it isn't, I just don't know it well enough yet) I'm struggling with this a bit I have to say, I'd appreciate any input on best practices.", 
            "subreddit": "git", 
            "title": "What's the right workflow with pull requests?", 
            "url": "https://www.reddit.com/r/git/comments/72relp/whats_the_right_workflow_with_pull_requests/"
        }, 
        {
            "author": "zeta27", 
            "created_utc": 1506442377.0, 
            "domain": "self.git", 
            "id": "72les8", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/72les8/git_library_for_bash/", 
            "score": 5, 
            "selftext": "I've been doing some git checks on our bash sripts to give them more intelligence. eg. don't switch to a branch if you are already on that branch, or don't push if you are up to date. This checks where eventually isolated on a lib script with bash functions. \nMany of these work by parsing the output of git commands, for example:\nlib.git-get-current-branch(){\n    git branch | grep '* ' | sed 's:* ::'\n}\nlib.git-is-pusheable(){\n    git status | grep -i -q \"Your branch is ahead\"; return $?;\n}\nAnd some other more ellaborate stuff.\n\nFrom the moment I started doing this I had this funny itch, that I was doing something wrong. A partner has his GNU/Linux repositories on a mirror in spanish, and his git is outputting everything in spanish, rendering half of the function bogus.\n\nWhat is the git way of integrating to git in bash? Luckily the lib script is fairly short, so I don't mind rewriting it all. TY.", 
            "subreddit": "git", 
            "title": "git library for bash?", 
            "url": "https://www.reddit.com/r/git/comments/72les8/git_library_for_bash/"
        }, 
        {
            "author": "horoshimu", 
            "created_utc": 1506372789.0, 
            "domain": "self.git", 
            "id": "72feqe", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/72feqe/help_trying_to_resync_two_remotes/", 
            "score": 4, 
            "selftext": "i have a project with two remotes (one is a personal backup, other is the main one )\n\nsomewhere along the line they got out of sync, meaning i pushed some changes to the backup one that i didn't push to the main, and after a while pushed some other changes to main\n\nso it looks like this :\n\nmain:\n\n1) change 1002\n\n2) change 1001\n\n3) change 900\n\nbackup:\n\n1) change 905\n\n2) change 904\n\n3) change 900\n\nbasically i want to 'fix' these repos somehow.. \n\nwhats the best way to go about it ?\n", 
            "subreddit": "git", 
            "title": "[Help] trying to 'resync' two remotes", 
            "url": "https://www.reddit.com/r/git/comments/72feqe/help_trying_to_resync_two_remotes/"
        }, 
        {
            "author": "MacrosInHisSleep", 
            "created_utc": 1506354303.0, 
            "domain": "self.git", 
            "id": "72d9j1", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/72d9j1/git_mv_to_move_a_project_from_one_directory_to/", 
            "score": 5, 
            "selftext": "Disclaimer I'm a complete git newbie. I've got a project and I realized that when I created it, I created it in the wrong folder. It was supposed to be in *solutionFolder*/src/projectFolder and instead I had created in *solutionFolder*/projectFolder. \n\nNow I want to be able to move all the files to the right place, maintain the folder structure within \"projectFolder\", and still keep the history. \n\nI tried the following:\n\ngit mv -n .\\projectFolder .\\src and it shows that it would be able to do this successfully. However just running git mv .\\projectFolder .\\src without the -n fails with the message:\n\nfatal: renaming 'projectFolder' failed: Permission denied\n\nIt's a very strange error and I can't figure out what I need to do to give myself the permission to do this. ", 
            "subreddit": "git", 
            "title": "git mv to move a project from one directory to another.", 
            "url": "https://www.reddit.com/r/git/comments/72d9j1/git_mv_to_move_a_project_from_one_directory_to/"
        }, 
        {
            "author": "Srz2", 
            "created_utc": 1506298809.0, 
            "domain": "self.git", 
            "id": "728ygt", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/728ygt/question_how_do_you_prevent_someone_from_stealing/", 
            "score": 2, 
            "selftext": "In a corporate environment, how do you make sure the person who commits to a repository is who they say they are? How do you prevent someone from just changing their user.name and user.email to match someone else?", 
            "subreddit": "git", 
            "title": "[Question] How do you prevent someone from stealing your identity when committing?", 
            "url": "https://www.reddit.com/r/git/comments/728ygt/question_how_do_you_prevent_someone_from_stealing/"
        }, 
        {
            "author": "scarcella", 
            "created_utc": 1506295889.0, 
            "domain": "self.git", 
            "id": "728o5c", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/728o5c/binary_vs_base64/", 
            "score": 15, 
            "selftext": "Are there any pros to pushing up binary vs base64'ing the file? We encrypt some config files with openssl, should we pipe that through base64 or just push up the binary output from openssl?", 
            "subreddit": "git", 
            "title": "Binary vs Base64", 
            "url": "https://www.reddit.com/r/git/comments/728o5c/binary_vs_base64/"
        }, 
        {
            "author": "ssyrek", 
            "created_utc": 1506286397.0, 
            "domain": "medium.com", 
            "id": "727psf", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/727psf/when_you_git_in_trouble_a_version_control_story/", 
            "score": 11, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "When You \u201cGit\u201d in Trouble: a Version Control Story", 
            "url": "https://medium.com/@sjsyrek/when-you-git-in-trouble-a-version-control-story-97e6421b5c0e"
        }, 
        {
            "author": "nilbus", 
            "created_utc": 1506227096.0, 
            "domain": "blog.nilbus.com", 
            "id": "72344w", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/72344w/take_the_pain_out_of_git_conflict_resolution_use/", 
            "score": 31, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Take the pain out of git conflict resolution: use diff3", 
            "url": "https://blog.nilbus.com/take-the-pain-out-of-git-conflict-resolution-use-diff3/"
        }, 
        {
            "author": "mightyflux", 
            "created_utc": 1506219687.0, 
            "domain": "self.git", 
            "id": "722k7s", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/722k7s/clone_the_terminals_in_git_bash_into_new_ones/", 
            "score": 4, 
            "selftext": "how to clone my git bash terminals, like when i cd'd into a specific directory and when i go to that directory, I want to copy those terminals so that i don't have to cd again I just want to imitate that first terminal I have. \n\nSo, the idea is I can mirror a specific terminal into another so that i don't have to open and cd once again.", 
            "subreddit": "git", 
            "title": "clone the terminals in git bash into new ones", 
            "url": "https://www.reddit.com/r/git/comments/722k7s/clone_the_terminals_in_git_bash_into_new_ones/"
        }, 
        {
            "author": "camel_caseSnakeCase", 
            "created_utc": 1506103993.0, 
            "domain": "self.git", 
            "id": "71sui3", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 19, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/71sui3/renamed_a_file_from_filejs_to_filejs_but_git_isnt/", 
            "score": 18, 
            "selftext": "After changing my filename from file.js to File.js I went to check `git status` and it did not show up as a changed file. I confirmed that I am in the root of the project yet it isn't seeing that change. Is this a git thing I am not aware of? I tried changing another file's capitalization and that did not show up in Git status either.\n\n\nThanks for the help! \n\n\nEdit: I figured it out by RTFM. I used `git mv -f myFile.js MyFile.js` and that worked! ", 
            "subreddit": "git", 
            "title": "Renamed a file from \"file.js\" to \"File.js\" but Git isn't detecting it?", 
            "url": "https://www.reddit.com/r/git/comments/71sui3/renamed_a_file_from_filejs_to_filejs_but_git_isnt/"
        }, 
        {
            "author": "xblade724", 
            "created_utc": 1506095873.0, 
            "domain": "self.git", 
            "id": "71rwuw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/71rwuw/is_git_cleanup_safe_for_unity_projects/", 
            "score": 3, 
            "selftext": "For example, SmartGit popped this up:\n\nhttps://i.imgur.com/7ubGr9d.png\n\nI'm wondering if it'll destroy things haha -- I googled it a bit but still not sure. Any Unity users here that have used git cleanup?", 
            "subreddit": "git", 
            "title": "is \"git cleanup\" safe for Unity projects?", 
            "url": "https://www.reddit.com/r/git/comments/71rwuw/is_git_cleanup_safe_for_unity_projects/"
        }, 
        {
            "author": "marksteve4", 
            "created_utc": 1506035437.0, 
            "domain": "self.git", 
            "id": "71n0hk", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/71n0hk/is_there_a_way_to_pull_remote_master_to_local/", 
            "score": 4, 
            "selftext": "this is useful for scripting. Note not asking for merge remote master to the current branch", 
            "subreddit": "git", 
            "title": "Is there a way to pull remote master to local master on another branch?", 
            "url": "https://www.reddit.com/r/git/comments/71n0hk/is_there_a_way_to_pull_remote_master_to_local/"
        }, 
        {
            "author": "passion-and-warfare", 
            "created_utc": 1506021285.0, 
            "domain": "self.git", 
            "id": "71lh9e", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/71lh9e/whats_the_deal_with_fetch/", 
            "score": 3, 
            "selftext": "I'm a recently employed developer, so I want/need to get to grips with the finer points of git that weren't relevant when working alone. \n\nFetch confuses me quite badly. My understanding is that git thinks of our project as existing in 3 places: Our working directory, our local repository (inside .git), and our remote repository.\n\nPull gets from the remote, saves into local, and merges the files with those in our working directory. Great. \n\nFetch gets from the remote, saves into local, and *doesn't* merge. Well, this confuses me. If the local repository is tracking our changes, then what does it mean to update it, but not our working files? I simply do not understand how (or even why you'd want to) update the local repo without changing your working files.\n\nSo: \n\n1) If fetch doesn't update your files, what *does* it update?\n\n2) What's the use of updating [answer to 1]?", 
            "subreddit": "git", 
            "title": "What's the deal with fetch?", 
            "url": "https://www.reddit.com/r/git/comments/71lh9e/whats_the_deal_with_fetch/"
        }, 
        {
            "author": "billobob", 
            "created_utc": 1506020423.0, 
            "domain": "self.git", 
            "id": "71ldmt", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/71ldmt/the_best_client_for_pure_visualization/", 
            "score": 2, 
            "selftext": "I use the command line for most things as I actually find it easier to make mistakes doing any operations using UI tools, but I do like to use UI tools to visualize branches, have a quick visual representation of any conflicts, etc. It also needs to be fast, as one of the projects I'm working on is fairly large and has many branches (which makes sourcetree more or less unusable).  \n\nA FOSS project would be nice, but I don't care that much. ", 
            "subreddit": "git", 
            "title": "The best client for pure visualization?", 
            "url": "https://www.reddit.com/r/git/comments/71ldmt/the_best_client_for_pure_visualization/"
        }, 
        {
            "author": "hypersistence", 
            "created_utc": 1506005941.0, 
            "domain": "youtube.com", 
            "id": "71jofj", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": {
                "oembed": {
                    "author_name": "Vlad Mihalcea", 
                    "author_url": "https://www.youtube.com/user/vladmihalcea", 
                    "height": 338, 
                    "html": "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/bndbMb_tGks?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>", 
                    "provider_name": "YouTube", 
                    "provider_url": "https://www.youtube.com/", 
                    "thumbnail_height": 360, 
                    "thumbnail_url": "https://i.ytimg.com/vi/bndbMb_tGks/hqdefault.jpg", 
                    "thumbnail_width": 480, 
                    "title": "How to integrate a GitHub Pull Request using rebase and commit squashing", 
                    "type": "video", 
                    "version": "1.0", 
                    "width": 600
                }, 
                "type": "youtube.com"
            }, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/71jofj/video_how_to_integrate_a_github_pull_request/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "[Video] - How to integrate a GitHub Pull Request using interactive rebase and squashing commits", 
            "url": "https://www.youtube.com/watch?v=bndbMb_tGks"
        }, 
        {
            "author": "chillysurfer", 
            "created_utc": 1506004253.0, 
            "domain": "medium.com", 
            "id": "71jhrj", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/71jhrj/a_simple_personal_wiki_using_a_little_python_and/", 
            "score": 30, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "A simple personal wiki using a little Python and a small Git hook", 
            "url": "https://medium.com/@trstringer/a-simple-personal-wiki-using-a-little-python-and-a-small-git-hook-c352fc5cca8b"
        }, 
        {
            "author": "MasteroftheMaze", 
            "created_utc": 1505959132.0, 
            "domain": "self.git", 
            "id": "71g0z9", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/71g0z9/git_source_control_rpm_package/", 
            "score": 3, 
            "selftext": "Can someone possibly help me with a dilemma. I'm trying to install git (source control) on an older Mandrake 10 box. Anything new needs a lot of dependencies but I'm trying to find something that is possibly standalone or something that will utilize libraries from that era. Secondly this needs to be an RPM package. \n\nNote: I'm NOT looking for git in reference to \"GNU Interactive Tools\". I need the source control git.", 
            "subreddit": "git", 
            "title": "git source control RPM package", 
            "url": "https://www.reddit.com/r/git/comments/71g0z9/git_source_control_rpm_package/"
        }, 
        {
            "author": "oilshell", 
            "created_utc": 1505896167.0, 
            "domain": "oilshell.org", 
            "id": "719pjq", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/719pjq/how_to_quickly_and_correctly_generate_a_git_log/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "How to Quickly and Correctly* Generate a Git Log in HTML", 
            "url": "http://www.oilshell.org/blog/2017/09/19.html"
        }, 
        {
            "author": "codemunky", 
            "created_utc": 1505894897.0, 
            "domain": "self.git", 
            "id": "719mts", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/719mts/how_best_to_add_general_notes_to_a_project_on/", 
            "score": 0, 
            "selftext": "I have broad ideas for future features that I'd like to add to my project, which is a private repository hosted on GitLab.  I'm the sole developer.\n\nI don't think creating a new \"issue\" for them is the right thing to do.  Should I use the wiki feature or add an rtf document in the project root?  Or something else?\n\nThanks! ", 
            "subreddit": "git", 
            "title": "How best to add general \"notes\" to a project on gitlab ?", 
            "url": "https://www.reddit.com/r/git/comments/719mts/how_best_to_add_general_notes_to_a_project_on/"
        }, 
        {
            "author": "Fasyx", 
            "created_utc": 1505890222.0, 
            "domain": "self.git", 
            "id": "719car", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/719car/can_you_recommend_a_good_strcture_when_having/", 
            "score": 8, 
            "selftext": "Hey,\n\nmy team and me are currently discussing how we will use git. I read about some 'best practices' etc., but these guides assume you have big projects.\n\nCurrently we have a lot of code, which is independent of other code. What would be a good way to manage a maintainable structure? We were thinking about creating a repo for each context and use branches to differentiate between every code file. However I dont agree on this, since it\u00b4s not what branches are made for(correct me if I\u00b4m wrong).\n\nMost of the time we have a lot of code (files), but a lot of small projects with ~300 - 500 lines of code. As I said, independend of each other.\n\nDo you guys have any tips on this? Thanks! :)", 
            "subreddit": "git", 
            "title": "Can you recommend a good strcture when having hundreds, independent of each other, code files?", 
            "url": "https://www.reddit.com/r/git/comments/719car/can_you_recommend_a_good_strcture_when_having/"
        }, 
        {
            "author": "sitnik", 
            "created_utc": 1505837603.0, 
            "domain": "evilmartians.com", 
            "id": "7141fj", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/7141fj/git_push_force_and_how_to_deal_with_it/", 
            "score": 16, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "git push --force and how to deal with it", 
            "url": "https://evilmartians.com/chronicles/git-push---force-and-how-to-deal-with-it"
        }, 
        {
            "author": "gezoutenHostie", 
            "created_utc": 1505822017.0, 
            "domain": "self.git", 
            "id": "712fyf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 18, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/712fyf/gitlab_local_connection_problems/", 
            "score": 4, 
            "selftext": "So I've had this problem before at work, then it was solved by getting a new computer (it was old).\n\nYesterday everything worked fine, this morning I try to surf to the company gitlab and couldn't connect. When I try to clone a repository to my local system I get a port 22: Connection timed out and when I try it with https I get port 443: Timed out\n\nOn chrome I get \"ERR_CONNECTION_TIMED_OUT\"\n    \nEdge tells me \"There was a temporary DNS error. Try refreshing the page. Error Code: INET_E_RESOURCE_NOT_FOUND\"\n\nI've pinged the ip and I get \"Request timed out\"\n\nWhen I run $ ssh -vT git@github.com it gives me a bunch of lines but it ends in\n\n        debug1: No more authentication methods to try.\n        Permission denied (publickey).\n\nIf I run $ ssh -vT git@gitlab.company.com I just get\n\n        OpenSSH_7.5p1, OpenSSL 1.0.2k  26 Jan 2017\n        debug1: Reading configuration data /etc/ssh/ssh_config\n        debug1: Connecting to gitlab.company.com [10.1.10.21] port 22.\n        cddebug1: connect to address 10.1.10.21 port 22: Connection timed out\n        ssh: connect to host gitlab.company.com port 22: Connection timed out\n    \nI've regenerated SSH keys and put them in https://gitlab.com/profile/keys (that I can acces, its just the gitlab.company.com that doesn't work).\nI talked to IT at the company and they said nothing has changed, no new firewalls, no nothing.\n\nI did install the Chrome Test Server to start making PWA but removed it after I discovered I had this gitlab problem again thinking it might have to do something with it. I rebooted my pc after the uninstall.\n\nWhat more can I do? I'm on Windows 10 and run Ubuntu in Oracle VM virtual box (where I can connect just fine).\nThanks.\n\n\nEDIT: I've done a system restore to a couple of days ago, didn't help, I logged in a different windows account, still couldn't connect, I've changed network cable (using a coworker his \"internet\") still doesn't work. There must be something that I'm doing locally that messed things up.\n\n\nSOLVED: Apparently my IP was blacklisted for a reason Mr. Network guy doesn't really know. He removed the ban and everything is in working order. Thanks a lot for the help, maybe it didn't solve it, but I learned a lot along the way!", 
            "subreddit": "git", 
            "title": "gitlab local connection problems", 
            "url": "https://www.reddit.com/r/git/comments/712fyf/gitlab_local_connection_problems/"
        }, 
        {
            "author": "rjusher", 
            "created_utc": 1505696918.0, 
            "domain": "self.git", 
            "id": "70rnyp", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 24, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/70rnyp/is_there_a_way_to_manage_a_git_repo_from_the_cloud/", 
            "score": 0, 
            "selftext": "Is there some solution that doesn't involve a dynamic DNS and remote ssh into a computer to execute commands on a git repo. I need something like this because I have a computer at work and one in my home office, from time to time I would like to continue my work from home but forgot to stash and upload my changes to Dropbox, I can't ssh into the work computer because I don't manage the network and the IT department isn't willing to open DynDNS for me.", 
            "subreddit": "git", 
            "title": "Is there a way to manage a git repo from the cloud?", 
            "url": "https://www.reddit.com/r/git/comments/70rnyp/is_there_a_way_to_manage_a_git_repo_from_the_cloud/"
        }, 
        {
            "author": "Karimo_", 
            "created_utc": 1505663891.0, 
            "domain": "self.git", 
            "id": "70ob0u", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 12, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/70ob0u/more_than_one_person_editing_file_simultaneously/", 
            "score": 5, 
            "selftext": "I know there are some stack overflow posts on this but I'm new to git and I still don't quite get it. If for instance there is a contributors file with the names of the contributors, and 2 people add their name at the same time, is the only way to resolve that conflict manually? On some stack posts it said that git should do it automatically but I tested it and it didn't.", 
            "subreddit": "git", 
            "title": "More than one person editing file simultaneously", 
            "url": "https://www.reddit.com/r/git/comments/70ob0u/more_than_one_person_editing_file_simultaneously/"
        }, 
        {
            "author": "jerryatteric", 
            "created_utc": 1505576543.0, 
            "domain": "self.git", 
            "id": "70hjl2", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/70hjl2/multi_customer_documentation_scripts_repo_and/", 
            "score": 4, 
            "selftext": "I'm a new git user trying to plan out a work flow. \n\nLet's say I have a code base of 10 files.  Five files are text, five files are binary.   Each week I create a new directory, make modifications to some of the base files, and add more binary files to make a release.  The released version will not have to be supported with bug fixes.  It would be convenient to be able to rebuild the release version if necessary.  I may or may not want to carry forward modifications to the base files.  \n\nWhat kind of work flow is this in git?  \nDo I tag or branch each release?  \nAfter each release do I push the changes I want to carry forward to the remote, then clone the repo in the new directory each week? \n\nThanks for reading and your consideration.  ", 
            "subreddit": "git", 
            "title": "Multi customer documentation + scripts repo and work flow advice.", 
            "url": "https://www.reddit.com/r/git/comments/70hjl2/multi_customer_documentation_scripts_repo_and/"
        }, 
        {
            "author": "lethly", 
            "created_utc": 1505571197.0, 
            "domain": "self.git", 
            "id": "70h2xy", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/70h2xy/where_to_find_first_git_implementation_source_code/", 
            "score": 13, 
            "selftext": "In [this](https://www.youtube.com/watch?v=qs_xS1Y6nGc) interview with Junio Hamano he mentions the first implementation by Linus of about 1200 lines of code. Is this available anywhere that anyone knows of?", 
            "subreddit": "git", 
            "title": "Where to find first Git implementation source code?", 
            "url": "https://www.reddit.com/r/git/comments/70h2xy/where_to_find_first_git_implementation_source_code/"
        }, 
        {
            "author": "tobiasvl", 
            "created_utc": 1505559927.0, 
            "domain": "medium.com", 
            "id": "70gb11", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/70gb11/why_you_should_stop_using_git_rebase/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Why you should stop using Git rebase", 
            "url": "https://medium.com/@fredrikmorken/why-you-should-stop-using-git-rebase-5552bee4fed1"
        }, 
        {
            "author": "zapeggo", 
            "created_utc": 1505517218.0, 
            "domain": "self.git", 
            "id": "70di3v", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/70di3v/need_help_setting_up_webhooks_in_bitbucket/", 
            "score": 2, 
            "selftext": "Thanks for reading!\nI have a paid ngrok account and a webhooks-listener repo.\nThe problem is that I get a 404 or 405 'The method is not allowed for the requested URL.'  from my Bitbucket push / deploy.\nWhen I look at the port 5000, the server is up, but the link it gives me for webhook just leads me to a 404 not found.\n\nHeres the tut I followed:\nhttps://confluence.atlassian.com/bitbucket/tutorial-create-and-trigger-a-webhook-747606432.html", 
            "subreddit": "git", 
            "title": "Need help setting up webhooks in BitBucket", 
            "url": "https://www.reddit.com/r/git/comments/70di3v/need_help_setting_up_webhooks_in_bitbucket/"
        }, 
        {
            "author": "ziolko90", 
            "created_utc": 1505503091.0, 
            "domain": "self.git", 
            "id": "70c2m2", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/70c2m2/have_you_forgotten_a_git_command_its_not_a/", 
            "score": 2, 
            "selftext": "I am evaluating an idea of a tool that answers questions regarding CLI commands directly in user terminal. (E.g. *how to stop tracking file in git*).\n\nCurrently I focus on *git* to check if I am able to cover useful basic and mid-level commands. The more users I get the better the tool will become.\n\n[Check it out on npm](https://goo.gl/hktDvC) and let me know if you like it. Don't worry about missing commands - I will add them successively :)", 
            "subreddit": "git", 
            "title": "Have you forgotten a git command? It's not a problem anymore.", 
            "url": "https://www.reddit.com/r/git/comments/70c2m2/have_you_forgotten_a_git_command_its_not_a/"
        }, 
        {
            "author": "oroborn", 
            "created_utc": 1505492501.0, 
            "domain": "self.git", 
            "id": "70awpp", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/70awpp/git_on_windows/", 
            "score": 3, 
            "selftext": "Is there a way to show the file path when doing git status on Window's command prompt?\n\nFor example if I were to add a new folder called \"foobar\" on a branch and then do git status, I would see \"blah/projects/foobar\" on my macbook at work. But at home on my windows machine I would just see '/foobar'.  \n\nI want to be able to do git add 'blah/projects/foobar'.", 
            "subreddit": "git", 
            "title": "Git on Windows", 
            "url": "https://www.reddit.com/r/git/comments/70awpp/git_on_windows/"
        }, 
        {
            "author": "vfclists", 
            "created_utc": 1505466114.0, 
            "domain": "self.git", 
            "id": "708nnt", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/708nnt/if_a_file_merged_into_a_master_branch_moves_ahead/", 
            "score": 3, 
            "selftext": "Say I merge a file A into a master branch, then later on merge the changes from the master into my topic branch.\n\nIf the file has not changed in master and I decide to merge the master back into the topic branch, will the merge process detect that the file A come from the branch, and shouldn't be overwritten because it has moved ahead?\n\nOf course if file A has been changed by another user in master then the user should be notified.\n\nLogically speaking, the changed file should conflict, but I am wondering if Git has a means of knowing that the file  is from that user and has moved ahead, such as by checking the timestamp", 
            "subreddit": "git", 
            "title": "If a file merged into a master branch moves ahead of master and master is merged back into the branch does the changed file get overwritten or seen as conflicting?", 
            "url": "https://www.reddit.com/r/git/comments/708nnt/if_a_file_merged_into_a_master_branch_moves_ahead/"
        }, 
        {
            "author": "xblade724", 
            "created_utc": 1505462552.0, 
            "domain": "self.git", 
            "id": "708gn5", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/708gn5/is_there_a_way_to_assume_unchanged_one_line_in_a/", 
            "score": 3, 
            "selftext": "For example, we keep accidentally pushing a \"TEST_INIT\" const as true instead of false. This causes hours of loss if we forget to turn this back to false before we push.\n\nIs there a way to assume unchanged JUST THIS ONE LINE? Please ELI5 (but a 5yr old that knows intermediate git stuff :P)", 
            "subreddit": "git", 
            "title": "Is there a way to assume unchanged ONE LINE in a file?", 
            "url": "https://www.reddit.com/r/git/comments/708gn5/is_there_a_way_to_assume_unchanged_one_line_in_a/"
        }, 
        {
            "author": "OraculoDota2", 
            "created_utc": 1505415614.0, 
            "domain": "self.git", 
            "id": "704d4v", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 25, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/704d4v/which_is_better_for_companies_github_bitbucket/", 
            "score": 11, 
            "selftext": "My answer is always Bitbucket, for small businesses and GitLab for bigger. But I'm always required by GitHub because of the popularity.\n\nThe first thing I think is the cost, and in that context, of course, that GitHub is made for community, public repositories, there's no reason why a company that makes websites use Github. Am I being mistaken in this thought?", 
            "subreddit": "git", 
            "title": "Which is better for companies? GitHub, Bitbucket, GitLab.", 
            "url": "https://www.reddit.com/r/git/comments/704d4v/which_is_better_for_companies_github_bitbucket/"
        }, 
        {
            "author": "codemunky", 
            "created_utc": 1505396404.0, 
            "domain": "self.git", 
            "id": "7029z3", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/7029z3/am_i_using_gitlabphpstorm_correctly_detailed/", 
            "score": 4, 
            "selftext": "I always used to edit in notepad++ and then FTP changes to the live server.\n\nOver the last couple of years I'm even \"naughtier\", and just use Vim on the server, editing live files directly.\n\nI know this is bad, but it's my site, my business and I'm the sole developer, and I've felt happy to take the risk.  Very occasional errors/downtime for my users felt ok.\n\nI want to modernise my workflow though, so have installed PhpStorm on my Windows 10 laptop, and paid for a year of GitLab (I want private repositories).  I should probably install GitLab on my server rather than use their SaaS, but one step at a time!\n\nI really like gitlab for the issue tracking etc even though I'm a one-man band.  I know the fact that it's just me makes it a glorified to-do list, but I still want it.\n\nSo I want to edit in PhpStorm, which will then push to GitLab, which in turn will push to production?  Is that right?  I will also set up a staging environment to push to first.\n\nComplete newb, sorry if I'm making little sense!\n\nSteps:\n\n* install git for windows\n* install PhpStorm\n* subscribe to GitLab\n* create myproject on GitLab (from blank template)\n* go to project folder on server\n* create suitable .gitignore file\n* git init\n* git remote add origin git@gitlab.com:me/myproject\n* git add .\n* git commit -m \"Initial commit\"\n\nPerfect, my files from the live webserver are now in GitLab\n\n* open PhpStorm\n* \"Check out from version control\"\n* \"Git\"\n* \"https://gitlab.com/me/myproject\"\n* \"Clone\"\n\nPerfect, my files from GitLab are now on my laptop in PhpStorm\n\n* edit some files\n* edit some more\n* \"VCS\" menu item -> \"Commit\"\n\nPerfect, my files are now committed into GitLab\n\nHow do I then push that to production?\n\nI feel I should be able to do it from within GitLab, but I couldn't find it and ended up doing something like this on my webserver instead:\n\n* git fetch\n* git checkout -f master\n* git pull\n\nIs this all the right way to be doing things?\n\nThanks!", 
            "subreddit": "git", 
            "title": "Am I using GitLab/PhpStorm correctly? Detailed steps of my workflow inside, any advice appreciated!", 
            "url": "https://www.reddit.com/r/git/comments/7029z3/am_i_using_gitlabphpstorm_correctly_detailed/"
        }, 
        {
            "author": "Thrasolth", 
            "created_utc": 1505392842.0, 
            "domain": "mindweb.network", 
            "id": "701ybb", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/701ybb/a_collection_of_videos_tutorials_and_websites_i/", 
            "score": 1, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "A collection of videos, tutorials and websites I used to learn git in a weekend", 
            "url": "https://mindweb.network/board/learn-git-fast"
        }, 
        {
            "author": "nachoparker", 
            "created_utc": 1505374138.0, 
            "domain": "ownyourbits.com", 
            "id": "700qse", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/700qse/host_your_own_git_repository_at_home/", 
            "score": 6, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Host your own git repository at home", 
            "url": "https://ownyourbits.com/2017/08/03/host-your-own-git-repository-at-home/"
        }, 
        {
            "author": "DaBeechees", 
            "created_utc": 1505373745.0, 
            "domain": "self.git", 
            "id": "700pyq", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/700pyq/advice_huge_number_of_text_files_for_the_unit/", 
            "score": 1, 
            "selftext": "I need to include a lot of text files for the unit tests.\nThe full set is something like 200MB of text. I can cut it down to something like 50MB, but it's still quite a lot of data.\n\nI am debating if I should put them all into a zip file (it's text after all) and just expand the archive before running the tests.\n\nOn one hand this would save a significant amount of space in the repo, on the other hand tracking the individual test files instead of a huge binary blob would be very nice.\n\nWhat would you do? I'm leaning towards the \"uncompressed folder\" option at the moment.", 
            "subreddit": "git", 
            "title": "Advice: huge number of text files for the unit tests. Folder or zip file?", 
            "url": "https://www.reddit.com/r/git/comments/700pyq/advice_huge_number_of_text_files_for_the_unit/"
        }, 
        {
            "author": "bhalp1", 
            "created_utc": 1505325566.0, 
            "domain": "dev.to", 
            "id": "6zwav3", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zwav3/im_a_git_master_ask_me_anything/", 
            "score": 12, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "\"I'm a Git Master, Ask Me Anything\"", 
            "url": "https://dev.to/gonedark/im-a-git-master-ask-me-anything"
        }, 
        {
            "author": "tillybrow", 
            "created_utc": 1505321831.0, 
            "domain": "self.git", 
            "id": "6zvvdu", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zvvdu/new_user_git_shell_for_mac/", 
            "score": 0, 
            "selftext": "I am in intro to Aerospace Engineering and I have LaTeX and GitHub downloaded, but I can't get Git Shell, which we used on microsoft computers for practice. I've been trying and my MacBook is just not doing it, I used sourceforge and it says it is installed but I can't even find what I installed. \n\nPlease help, I'm sure this sounds ridiculous but I have a big assignment done and can't get ahold of my professor. ", 
            "subreddit": "git", 
            "title": "New user. Git Shell for Mac?", 
            "url": "https://www.reddit.com/r/git/comments/6zvvdu/new_user_git_shell_for_mac/"
        }, 
        {
            "author": "vfclists", 
            "created_utc": 1505217014.0, 
            "domain": "self.git", 
            "id": "6zmfza", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zmfza/is_there_a_webbased_tool_that_provides_an/", 
            "score": 7, 
            "selftext": "The image below is from Redmine's Diff view and allows one to select commits which are quite far apart to compare them. I need a similar tool not necessary linked to a project manager which does them same.\nRedmine if fine but the syntax-coloring is outdated and doesn't support quite a number of popular languages.\n\n[Imgur](https://i.imgur.com/c2iuAxU.png)\n\nIf the only other available tools that can accomplish this are full-fledged project managers that will be fine. I can connect to the repo just for the diffing and ignore the other features.\n\n", 
            "subreddit": "git", 
            "title": "Is there a web-based tool that provides an interface to diffs between versions of a file like Redmine?", 
            "url": "https://www.reddit.com/r/git/comments/6zmfza/is_there_a_webbased_tool_that_provides_an/"
        }, 
        {
            "author": "muesli", 
            "created_utc": 1505209089.0, 
            "domain": "self.git", 
            "id": "6zlxfv", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zlxfv/whats_your_way_to_monitor_a_pile_of_git/", 
            "score": 7, 
            "selftext": "I have a whole src/ dir full of git repos that I regularly monitor and watch for changes. It's easy enough to `cd` to it and `git fetch/pull`, but it gets tiresome once you do it for the 20th repository in a row.\n\n`gostatus` is neat for everything Golang, but I'm looking for something a little bit more generic.\n\nHow do you monitor all your git repos?", 
            "subreddit": "git", 
            "title": "What's your way to monitor a pile of git repositories for changes?", 
            "url": "https://www.reddit.com/r/git/comments/6zlxfv/whats_your_way_to_monitor_a_pile_of_git/"
        }, 
        {
            "author": "nunofpfeliciano", 
            "created_utc": 1505203370.0, 
            "domain": "medium.com", 
            "id": "6zllr3", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zllr3/why_git/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Why Git?", 
            "url": "https://medium.com/@N_Feliciano/why-git-7782b2c6e629"
        }, 
        {
            "author": "Suq_Madiq_Beech", 
            "created_utc": 1505186938.0, 
            "domain": "self.git", 
            "id": "6zkgyw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zkgyw/help_please_wtf_is_going_on/", 
            "score": 0, 
            "selftext": "If I try to enter any git commands\n\n1. It doesnt work\n\n2. Spawns endless \"Git for Windows\" processes that I can't end task. \n\n3. Quickly stalls my computer", 
            "subreddit": "git", 
            "title": "Help please. Wtf is going on", 
            "url": "https://www.reddit.com/r/git/comments/6zkgyw/help_please_wtf_is_going_on/"
        }, 
        {
            "author": "7890yuiop", 
            "created_utc": 1505176876.0, 
            "domain": "reddit.com", 
            "id": "6zjkl6", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zjkl6/magit_fundraising_campaign_on_kickstarter_xpost/", 
            "score": 24, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Magit fundraising campaign on Kickstarter (x-post from /r/emacs)", 
            "url": "https://www.reddit.com/r/emacs/comments/6xf3er/magit_fundraising_campaign_on_kickstarter/"
        }, 
        {
            "author": "eyalk5", 
            "created_utc": 1505175576.0, 
            "domain": "self.git", 
            "id": "6zjgal", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zjgal/git_deleted_my_commit_what_did_i_do_wrong/", 
            "score": 0, 
            "selftext": "It went like this: I had done a change on a branch that I wanted to commit on master. I first did commit on the branch, without noticing . Then, I thought, ok let's switch to master. I actually wondered what  will happen. \nDid:\n\nGit stash\n\nGit checkout master\n\nGit stash pop\n\nThen my commit has gone and also my changes. \nI think git stash should warn about commit or fucking keep the commit.", 
            "subreddit": "git", 
            "title": "Git deleted my commit. What did I do wrong?", 
            "url": "https://www.reddit.com/r/git/comments/6zjgal/git_deleted_my_commit_what_did_i_do_wrong/"
        }, 
        {
            "author": "q11qq1", 
            "created_utc": 1505171983.0, 
            "domain": "self.git", 
            "id": "6zj43h", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 3, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zj43h/how_do_i_work_on_both_something_that_will_stay_in/", 
            "score": 1, 
            "selftext": "I'm working on some code that has a component (X) that will get merged to master for long term usage, as well as a component (Y) that will stay in a branch to be used only for this specific scenario.  \n\nWhat is the right branch structure for this?  It would be easiest to just work on X and Y in the Y branch, but then I'd have to cherry-pick the X commits and that's inelegant.  Do I branch X and Y both off master, then merge X into Y first, do all my work and testing and then merge X into master?\n", 
            "subreddit": "git", 
            "title": "How do I work on both something that will stay in a branch, and something that will get merged to master?", 
            "url": "https://www.reddit.com/r/git/comments/6zj43h/how_do_i_work_on_both_something_that_will_stay_in/"
        }, 
        {
            "author": "shkico", 
            "created_utc": 1505166926.0, 
            "domain": "self.git", 
            "id": "6zimde", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zimde/how_to_add_every_folder_which_starts_with_myname/", 
            "score": 5, 
            "selftext": "I am creating basic Wordpress themes for clients and I am thinking about pushing to Github only theme + my personal plugins.\n\nWhat would be the most easier way to add theme:\n\n     /wp-content/themes/mythemename\n\nand every plugin whose folder name only starts with \"_myname-\"?\n\n    /wp-content/plugins/_myname-contact\n    /wp-content/plugins/_myname-googlemap\n\nSince these hierarchy and naming conventions would be the same in every project, does git offer a possibility to do it in a file (something like .gitignore exists for ignoring) so that I already have everything set in advance and if I call \"git add *\" from root it would only do the stuff inside above folders and skip everything else? (While still ignoring node_modules and maybe few other things as usual)\n\n\n\n**EDIT: I finally did it with this settings as a start** https://gist.github.com/salcode/b515f520d3f8207ecd04\n", 
            "subreddit": "git", 
            "title": "How to add every folder which starts with \"_myname-\"?", 
            "url": "https://www.reddit.com/r/git/comments/6zimde/how_to_add_every_folder_which_starts_with_myname/"
        }, 
        {
            "author": "vfclists", 
            "created_utc": 1505124000.0, 
            "domain": "self.git", 
            "id": "6zefhn", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zefhn/does_git_push_mirror_virtually_clone_your_repo_on/", 
            "score": 0, 
            "selftext": "Let us say you clone a repo to different locations and do different work on them.\n\nIf from one location you execute a 'git push --mirror'  to the remote, does the push virtually clone the local repo on the remote? By that I mean is it equivalent to deleting the remote repo, and executing an `rsync -avz ` from your git repo to the remote? Does git virtually delete the original repo before pushing your own there - ie the repo will not combine your push with what was there before and not retain any information from the other users at all?\n\nI assume there may be some differences if the remote repo is a bare one as opposed to a regular workin repo.\n\nWhat I am interested in is whether a `git clone --mirror` from the original to your local workstation, followed by a `git push --mirror` to the new location is equivalent to doing an `rsync -avz` directly from the original location to the new location. I assume that you would have to do a `git init --bare` on the new location before pushing.", 
            "subreddit": "git", 
            "title": "Does 'git push --mirror' virtually clone your repo on the remote?", 
            "url": "https://www.reddit.com/r/git/comments/6zefhn/does_git_push_mirror_virtually_clone_your_repo_on/"
        }, 
        {
            "author": "wholien", 
            "created_utc": 1505121597.0, 
            "domain": "wholien.xyz", 
            "id": "6zeafn", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zeafn/some_helpful_git_workflows_and_knowledge/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Some Helpful Git Workflows and Knowledge", 
            "url": "https://wholien.xyz/2017/09/11/helpful-git-workflows/"
        }, 
        {
            "author": "wholien", 
            "created_utc": 1505119613.0, 
            "domain": "medium.com", 
            "id": "6ze66i", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6ze66i/some_helpful_git_knowledge/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Some Helpful Git Knowledge", 
            "url": "https://medium.com/@wholien/some-helpful-git-commands-and-workflows-7a249994f79"
        }, 
        {
            "author": "xblade724", 
            "created_utc": 1505112283.0, 
            "domain": "self.git", 
            "id": "6zdr8j", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zdr8j/can_no_longer_pullpush_private_repo_with_gitlab/", 
            "score": 1, 
            "selftext": "This error is making me go crazy! I didn't change anything that I know of. I made a commit, then I pushed. Like I normally do, with like 1 line of code changed. This time, **for both push and pull,** I'm getting:\n\n> ssh_exchange_identification: Connection closed by remote host\n> fatal: Could not read from remote repository.\n> \n> Please make sure you have the correct access rights\n> and the repository exists.\n\nI'm pointing to a private GitLab hosted repo (yea it's called -public, it became private, haha):\n\nhttps://gitlab.com/dylanh724/tol-node-public\n\n* I tried rebooting and followed several guides. \n* I tried resetting my ssh key (and passing it to GitLab). \n* I tried temporarily adding `sshd : ALL : allow` to **/etc/hosts.allow**\n* I tried a different private repo -- I can't seem to pull/push with that one, either.\n\nWhat DOES work:\n\n* Cloning a public GitLab repo\n* Cloning a public GitHub repo\n\nAny hints to narrow this down further? It seems like just an ssh key issue, but why would it suddenly do that? And if I made a new one + uploaded it and it still doesn't work, what could it be?", 
            "subreddit": "git", 
            "title": "Can no longer pull/push private repo with GitLab: ssh_exchange identification: connection closed by remote host", 
            "url": "https://www.reddit.com/r/git/comments/6zdr8j/can_no_longer_pullpush_private_repo_with_gitlab/"
        }, 
        {
            "author": "xblade724", 
            "created_utc": 1505105767.0, 
            "domain": "self.git", 
            "id": "6zdbv9", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 23, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zdbv9/is_gittower_worth_it_any_experiences/", 
            "score": 13, 
            "selftext": "GitTower seems pretty pricey compared to, well, even the average piece of software in 2017. I've read mixed reviews, so usually the best is to jump to real people on Reddit: can anyone tell me a few pros and cons?\n\nI've been frustrated with every Git GUI client out there and I've used quite a lot -- this seems promising, although the price drives me away.\n\n1. If I'm going to use SOME form of Git GUI on Windows, is it worth it for the price (using with GitLab)? Why? *Please disclaim if you are staff: I'll know :)*\n\n2. Is it true that if I purchase the software ($80, iirc) for my desktop, I can't even use it on my laptop without having to pay for an additional license? That would be a deal-breaker for me.\n\nAnyway, just window shopping.", 
            "subreddit": "git", 
            "title": "Is GitTower worth it? Any experiences?", 
            "url": "https://www.reddit.com/r/git/comments/6zdbv9/is_gittower_worth_it_any_experiences/"
        }, 
        {
            "author": "Combinatorilliance", 
            "created_utc": 1505090490.0, 
            "domain": "self.git", 
            "id": "6zc332", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zc332/is_it_possible_to_use_git_to_debug_obscure_errors/", 
            "score": 10, 
            "selftext": "Hey all, I use Git to manage the development of my software. I have a few thousand users, and every time I release a new version of the software, it breaks in ways I couldn't anticipate beforehand. I have both tests and error reports, but these only help after the fact.\n\n(i) A user experiences a problem, (ii) send me a complaint that explains the issue (iii) I need information to solve the problem (reproduce the environment in which the bug happens) (iv) but I lack the information because the information I need is not present in my environment and I cannot predict beforehand what information will be missing.\n\nTo get the required information, I need to talk to the user. But sometimes (often), it's a deep technical problem that is unique to that person's setup. Right now, I build a custom version for the user, that hopefully harvests the required information.\n\nThe big problem here is that it's such a long, slow cycle, I want to move on and work on things that are more important than dealing with obscure errors.\n\nSo I was thinking, is it possible to use Git to manage debug deployment versions of my software catered to users specifically? I'd build a small interface for the user where she can input a tag/branch and the software will \"update\" itself to that version.\n\nTL;DR: I need specific information from users to debug obscure errors that are unique to them, can I use Git to deploy custom versions of my software that can fetch that information quickly?\n\nAlso, any tips or something from others who're dealing with this would be awesome :)\n", 
            "subreddit": "git", 
            "title": "Is it possible to use Git to debug obscure errors?", 
            "url": "https://www.reddit.com/r/git/comments/6zc332/is_it_possible_to_use_git_to_debug_obscure_errors/"
        }, 
        {
            "author": "Coraranus", 
            "created_utc": 1505051838.0, 
            "domain": "brewing-bits.com", 
            "id": "6z8cpz", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6z8cpz/a_way_to_split_up_big_merge_or_pullrequests/", 
            "score": 4, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "A way to split up big merge- or pull-requests - Brewing Bits", 
            "url": "https://brewing-bits.com/blog/splitting-big-merges/"
        }, 
        {
            "author": "travislaborde", 
            "created_utc": 1505008862.0, 
            "domain": "self.git", 
            "id": "6z5qhb", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6z5qhb/how_to_do_a_visual_folderbased_diff/", 
            "score": 4, 
            "selftext": "context: have spent years using Hg, with the primary tool being the TortoiseHg Workbench.\n\nIn that tool, I can click on any commit in the log, then \"control-click\" on any other commit in the log, then right-click for a context menu, which has the \"Visual Diff\" option.\n\nusing that option, I'm launched into BeyondCompare, comparing two \"folders.\"  the files listed are all files that have changed between the selected commits.\n\nif I pick two commits that have many commits having come between them, this diff is showing me all the files that were changed in those commits as well, not just the commits I have selected.\n\nI have been unable to find how to do this in any Git client.  I've tried SourceTree, Tortoise, GitHubDesktop, and some others.  \n\nMost of these will indeed show me that list of files within their UI, and for each, some clients then allow me to do an \"external diff\" on a one-by-one basis, but that's not what I'm after.\n\nThe behavior I'm after is really just like I cloned the repo twice, into two local folders, and in one of them I checkout commit A and in the other I checkout commit D, and then I BeyondCmopare those two folders.  Obviously that is possible, but very awkward and slow compared to clicking a couple of lines in the log and selecting \"Visual Diff.\"\n\nCan any of you please point me to a git client that might provide this behavior?  I'm working at a new company now and I really need to become as comfortable with Git as I am with Hg.\n\nThanks!\n\nEDIT:  for those still looking, this GUI client, available for both Windows and Mac, does this perfectly.  I might finally begin to like Git as much as Hg :)  Thanks Tower!  https://www.git-tower.com/windows/\n", 
            "subreddit": "git", 
            "title": "how to do a visual folder-based diff?", 
            "url": "https://www.reddit.com/r/git/comments/6z5qhb/how_to_do_a_visual_folderbased_diff/"
        }, 
        {
            "author": "AsafFisher", 
            "created_utc": 1504998307.0, 
            "domain": "self.git", 
            "id": "6z4vah", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6z4vah/github_is_my_city/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "GitHub is my city \ud83c\udf03", 
            "url": "https://www.reddit.com/r/git/comments/6z4vah/github_is_my_city/"
        }, 
        {
            "author": "vfclists", 
            "created_utc": 1504970497.0, 
            "domain": "self.git", 
            "id": "6z28vf", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 24, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6z28vf/what_tips_do_folks_have_for_using_a_single_git/", 
            "score": 15, 
            "selftext": "I am at the stage where I have found creating separate repos for even small projects to be rather onerous and awkward to manage especially when they have to be linked to a project tracker to log progress and make notes, and have to be pushed to their own remotes.\n\nI now want to use just a few repos for related projects and make each project a branch on that repo and make branches of the projects in the form project_topic_xx.\n\nHow wise will that be and how much experience do other folks have with that?\nAre there any downsides to watch out for.\n\nTo be honest I don't consider it to be much different from subversion repositories.", 
            "subreddit": "git", 
            "title": "What tips do folks have for using a single git repo for multiple projects?", 
            "url": "https://www.reddit.com/r/git/comments/6z28vf/what_tips_do_folks_have_for_using_a_single_git/"
        }, 
        {
            "author": "badboyzpwns", 
            "created_utc": 1504926492.0, 
            "domain": "self.git", 
            "id": "6yzhk0", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6yzhk0/newbie_show_whats_inside_a_file_in_a_commit/", 
            "score": 1, 
            "selftext": "I believe that git show <COMMIT HASH> will show all the files and what's inside it.\n\nThat would be messy if there are a lot of files. How do I view a specific file's code in a specific commit?", 
            "subreddit": "git", 
            "title": "[Newbie] Show whats inside a file in a commit", 
            "url": "https://www.reddit.com/r/git/comments/6yzhk0/newbie_show_whats_inside_a_file_in_a_commit/"
        }, 
        {
            "author": "Mikkognito", 
            "created_utc": 1504918822.0, 
            "domain": "self.git", 
            "id": "6yyw9v", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 7, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6yyw9v/i_need_to_remove_a_remotely_tracked_branch_that/", 
            "score": 10, 
            "selftext": "Here's a screenshot of what I'm trying to delete.\n\nhttps://i.imgur.com/JMgrJGd.png\n\norigin/dev-mikko does not exist anymore and I want to delete it from my history. How do I do this?", 
            "subreddit": "git", 
            "title": "I need to remove a remotely tracked branch that doesn't exist anymore", 
            "url": "https://www.reddit.com/r/git/comments/6yyw9v/i_need_to_remove_a_remotely_tracked_branch_that/"
        }, 
        {
            "author": "dep", 
            "created_utc": 1504894451.0, 
            "domain": "self.git", 
            "id": "6ywj1f", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6ywj1f/i_have_a_maintenance_branch_here_that_has/", 
            "score": 6, 
            "selftext": "Hello all!  I was tasked with doing some maintenance on our large (2.5GB) git repository.\n\nSo first thing I did was cloned a mirror of our repo.\n\nThen I performed some actions on the repository, which did the following things:\n\n* Filtered out (using BFG) the storage history of our top offending large binaries\n* I removed git history for binary files in our repository that were larger than 1M in size that were no longer in HEAD. In other words, these types of files are simply dead weight in a source code repo.\n\nAfter doing these tasks and running\n\ngit reflog expire --expire=now --all && git gc --prune=now --aggressive\n\nI had the repo down to 850MB or so.  Yay.\n\nThe second phase of this effort is to integrate this work back in to the team.  The BFG documentation recommends having everyone clone a brand new repo:\n\n\"At this point, you're ready for everyone to ditch their old copies of the repo and do fresh clones of the nice, new pristine data. It's best to delete all old clones, as they'll have dirty history that you don't want to risk pushing back into your newly cleaned repo.\"\n\nThat's all well and good, but not really feasible to ask such a large team to abandon their current repo and clone a brand new one. So instead I'm looking for an alternative workflow that would allow my team to absorb this work back in to their current repo.\n\nI can't seem to figure out the best way to do this. Simply merging my maintenance branch is going to cause our histories to collide and will essentially un-do the maintenance work.  I've considered having developers create a git patch, resetting their branch to the maintenance branch and then applying the patch on top, which also doesn't work because something about the re-written history post-reset causes the patch to fail.\n\nSo here I am.  Recommendations or advice is *much* appreciated.", 
            "subreddit": "git", 
            "title": "I have a maintenance branch here that has undergone some substantial filtering and history re-write. I need help integrating it back to the team.", 
            "url": "https://www.reddit.com/r/git/comments/6ywj1f/i_have_a_maintenance_branch_here_that_has/"
        }, 
        {
            "author": "crespo_modesto", 
            "created_utc": 1504893172.0, 
            "domain": "self.git", 
            "id": "6ywe7h", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6ywe7h/what_am_i_doing_wrong_permission_denied/", 
            "score": 7, 
            "selftext": "I know this is so prevalent (been reading through a lot of threads)\n\nSteps I've taken for a private git server:\n\nRemote (AWS EC2 CentOS Nginx, no domain using ip)\n> install git\n> add user git\n\nLocal\n> create ssh key, trying to use id_rsa.pub\n\nRemote\n>Added the local generated key to remote's authorized_keys (appended)\n\n>Created directory/empty git repository under git@ip:/srv/git/project.git\n\nLocal\n>Created local directory/empty git\n\n>Set remote origin\n\nTry to push something, identity file is found but get \"permission denied... no more authentication methods to try\", tried a couple of guides mostly these two from Git [setup](https://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server) [ssh](https://git-scm.com/book/en/v2/Git-on-the-Server-Generating-Your-SSH-Public-Key) and DO link [setup vps git](https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-git-server-on-a-vps)\n\nNot sure if I'm missing something blatantly obvious.\n\nI try to do ssh -v git@ip and it fails (permission denied)\n\nPorts 22, 80, 443, and 9418(git) open\n\nI'm not sure how the SSH key (last part of it) works where I had it set as username (what you see in terminal) and email. I tried different ways to create an ssh key using ssh-keygen.\n\nI did remove/re-append in the authorized_keys (remote) whenever I changed it. What am I missing?", 
            "subreddit": "git", 
            "title": "What am I doing wrong? (permission denied)", 
            "url": "https://www.reddit.com/r/git/comments/6ywe7h/what_am_i_doing_wrong_permission_denied/"
        }, 
        {
            "author": "granular2", 
            "created_utc": 1504873590.0, 
            "domain": "self.git", 
            "id": "6yufm4", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6yufm4/merge_x_theirs_then_already_uptodate_but_branches/", 
            "score": 8, 
            "selftext": "I wanted to avoid a mergeconflict and keep changes in branchB, so I did a `git merge -X theirs branchB` into master. Now if I again do git `merge branchB` it says `Already up-to-date.`. But the branches are different and I guess what I really want is branchB to be the new master.\n\nSolo-project and not such a big deal, but wondering what to do?\n\nThanks", 
            "subreddit": "git", 
            "title": "merge -X theirs, then Already up-to-date but branches different", 
            "url": "https://www.reddit.com/r/git/comments/6yufm4/merge_x_theirs_then_already_uptodate_but_branches/"
        }, 
        {
            "author": "leggo_tech", 
            "created_utc": 1504821969.0, 
            "domain": "self.git", 
            "id": "6yqibm", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 37, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6yqibm/if_you_have_a_featurea_branch_and_featureb_branch/", 
            "score": 13, 
            "selftext": "Currently have feature A with a few devs working on it. Moving along to the release date. Then we have feature-B which has to be based off of A and theres a lot of new code. Every few days I manually do a git merge feature-A while in my feautre-B branch. This work fine, but sometimes there are conflicts. But with any code/conflict resolution I want there to be a PR.\n\nThe problem is if I submit a PR it looks like I added a WHOLE ton of stuff from feature-A, when in reality feature-A code was already reviewed, so I only want the conflicts to be reviewed. \n\nOnly solution I see is to do the merge and push the merge with the conflicts, and then submit a PR with the conflict resolution. Is this standard operating procedure?", 
            "subreddit": "git", 
            "title": "If you have a feature-A branch and feature-B branch has to branch off of A, how do you keep B up to date?", 
            "url": "https://www.reddit.com/r/git/comments/6yqibm/if_you_have_a_featurea_branch_and_featureb_branch/"
        }, 
        {
            "author": "zantech", 
            "created_utc": 1504759432.0, 
            "domain": "self.git", 
            "id": "6yl2gq", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 19, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6yl2gq/git_in_newrapidly_changing_codebases/", 
            "score": 13, 
            "selftext": "I have experience using Git at a large company with a relatively well architected and stable code base. Most of the work was committing either bug fixes or writing new features that were nicely isolated from the existing code. The git workflow was straightforward and well documented: branch, commit, ..., commit, squash, merge etc. \n\nI have recently started at a new company. I am one of three developers on a new prototype product they are trying to get off the ground. The process is much more adhoc and fast paced. We have run into several issues with \"big bang\" git merges were we spend most of a day trying to sort out changes that were made. This seems to occur when we decide to make significant structural change (e.g. different design pattern). Aside from being horribly inefficient and a waste of time/money this is tedious. This can't be normal for new projects? \n\n**My question:** is there an approach for using git in early stages of a project where architecture is a bit more \"fluid\" and things are changing quickly? Is the solution more upfront architecture and better planning? \n\nThanks in advance! \n\n\n", 
            "subreddit": "git", 
            "title": "Git in New/Rapidly Changing Codebases", 
            "url": "https://www.reddit.com/r/git/comments/6yl2gq/git_in_newrapidly_changing_codebases/"
        }, 
        {
            "author": "Thaurin", 
            "created_utc": 1504694794.0, 
            "domain": "self.git", 
            "id": "6yev8g", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 9, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6yev8g/git_push_f_vs_git_push_d/", 
            "score": 14, 
            "selftext": "One should be careful when using the --force parameter with push, because it can change history on the remote after a rebase. But what is stopping me from just going like this?\n\n    git rebase master feature_branch\n    git push --delete remote feature_branch\n    git push remote feature_branch\n\nIs this destructive as `git push -f remote` is? Or does `git push -d` fail if the remote ref has been pushed forward by someone else, a little like `--force-with-lease`?", 
            "subreddit": "git", 
            "title": "git push -f vs. git push -d", 
            "url": "https://www.reddit.com/r/git/comments/6yev8g/git_push_f_vs_git_push_d/"
        }, 
        {
            "author": "Bomgar85", 
            "created_utc": 1504636027.0, 
            "domain": "asciinema.org", 
            "id": "6y9xc9", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6y9xc9/a_project_which_will_help_you_manage_your/", 
            "score": 2, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "A project which will help you manage your workspace if you have many dev projects.", 
            "url": "https://asciinema.org/a/134985"
        }, 
        {
            "author": "circa10a", 
            "created_utc": 1504635524.0, 
            "domain": "self.git", 
            "id": "6y9vc1", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 8, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6y9vc1/get_total_commit_count_in_gitlab/", 
            "score": 7, 
            "selftext": "I have a private gitlab instance and want the total commit count for last month for all my repos, similar to a shortlog. Anybody know of a way to do that? Via api, shell script, doesn't matter.\n\nAny help is appreciated.", 
            "subreddit": "git", 
            "title": "Get total commit count in gitlab", 
            "url": "https://www.reddit.com/r/git/comments/6y9vc1/get_total_commit_count_in_gitlab/"
        }, 
        {
            "author": "nachoparker", 
            "created_utc": 1504601876.0, 
            "domain": "ownyourbits.com", 
            "id": "6y6rfy", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6y6rfy/rebasing_in_git_without_losing_tags/", 
            "score": 8, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Rebasing in git without losing tags", 
            "url": "https://ownyourbits.com/2017/08/14/rebasing-in-git-without-losing-tags/"
        }, 
        {
            "author": "themoosemind", 
            "created_utc": 1504593404.0, 
            "domain": "self.git", 
            "id": "6y68vr", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 17, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6y68vr/gitlab_vs_bitbucket_server_vs_gitea_vs_gogs/", 
            "score": 20, 
            "selftext": "How do they compare? What are relevant differences to decide for one or the other?\n\n* [Gitlab](https://en.wikipedia.org/wiki/GitLab): Developed by GitLab Inc.; On-Premise and hosted version available; Ruby+Go\n* [Bitbucket Server](https://en.wikipedia.org/wiki/Bitbucket_Server_(software\\)) aka Stash: Developed by Atlassian, Inc.; non-free; Java\n* [Gitea](https://github.com/go-gitea/gitea): 18 maintainers; gratis and OpenSource; Go; Runs painlessly on a raspberry pi\n* [Gogs](https://github.com/gogits/gogs): 2 maintainers; gratis and OpenSource; Go", 
            "subreddit": "git", 
            "title": "Gitlab vs Bitbucket Server vs Gitea vs Gogs", 
            "url": "https://www.reddit.com/r/git/comments/6y68vr/gitlab_vs_bitbucket_server_vs_gitea_vs_gogs/"
        }, 
        {
            "author": "krabby_patty", 
            "created_utc": 1504541921.0, 
            "domain": "self.git", 
            "id": "6y1apw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6y1apw/using_git_bash_as_my_default_terminal_windows/", 
            "score": 26, 
            "selftext": "A bit off topic but does anyone else use GIT Bash as their main terminal in Windows? I've been using it for dev tasks on top of using it for GIT, it's a great wee thing :)", 
            "subreddit": "git", 
            "title": "Using Git Bash as my default terminal - Windows", 
            "url": "https://www.reddit.com/r/git/comments/6y1apw/using_git_bash_as_my_default_terminal_windows/"
        }, 
        {
            "author": "michalesco", 
            "created_utc": 1504430597.0, 
            "domain": "self.git", 
            "id": "6xs8k8", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 19, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xs8k8/how_can_i_commit_to_a_repo_i_didnt_create/", 
            "score": 18, 
            "selftext": "A friend of mine recently asked me to review his project, suggesting that I am free to commit directly to his repositary if necessary. I guess he also said that he added my email(?) address to the list of contributors (again, not sure if I am using the right term). \n\nSuppose I will change a part of his code. How could I commit my work to his repo directly? Thank you very much. ", 
            "subreddit": "git", 
            "title": "How can I commit to a repo I didn't create?", 
            "url": "https://www.reddit.com/r/git/comments/6xs8k8/how_can_i_commit_to_a_repo_i_didnt_create/"
        }, 
        {
            "author": "xblade724", 
            "created_utc": 1504420590.0, 
            "domain": "self.git", 
            "id": "6xrpug", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xrpug/need_help_removingignoring_a_txt_file_the_bloody/", 
            "score": 1, 
            "selftext": "[Windows]\n\nSo I have `build_info.txt` in the `/i42-tol-win64/Assets/StreamingAssets` dir.\n\n(1)\n\nI browsed to that folder and typed in a git console `git rm --cached build_info.txt`\n\n(2)\n\nI added this to the .gitignore file: \n\n    /Assets/StreamingAssets/build_info.txt\n    /Assets/StreamingAssets/build_info.txt.meta\n\nI then committed >> pushed.\n\nHowever, it alwaaaays seems to come back from other myself or my teammate. We can't get rid of the file, lol. \n\nWhere am I failing?\n\nEDIT: I just noticed that there is no /Assets in the root, it's `i42-tol-win64/Assets`. I'm going to try this :P", 
            "subreddit": "git", 
            "title": "Need help removing/ignoring a txt file. The bloody file is clingy!", 
            "url": "https://www.reddit.com/r/git/comments/6xrpug/need_help_removingignoring_a_txt_file_the_bloody/"
        }, 
        {
            "author": "wildsheikh", 
            "created_utc": 1504395316.0, 
            "domain": "self.git", 
            "id": "6xpsf5", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xpsf5/is_there_a_way_to_commit_during_git_bisect/", 
            "score": 3, 
            "selftext": "I am trying to debug an issue with git bisect. The issue is related to a combination of bugs in our CI and source code (the CI script is also part of the repository). I have already found the problem in our CI but I want to find when the problem happened in our code. To find the problem I have to push the code to our servers for each git bisection commit with the new CI script.\n\nI have written a script that pushes the bisection commit to our CI servers and wait for it to finish and then the bisection continues/stops if the CI was successful/unsuccessful.\n\nNow, the issue is that the CI script we had is not good and I have to commit the script at each bisection commit and then push it to our CI server. Is there a clean way of doing it with git?", 
            "subreddit": "git", 
            "title": "Is there a way to commit during git bisect?", 
            "url": "https://www.reddit.com/r/git/comments/6xpsf5/is_there_a_way_to_commit_during_git_bisect/"
        }, 
        {
            "author": "razvanpanda", 
            "created_utc": 1504353161.0, 
            "domain": "plasticscm.com", 
            "id": "6xlfoq", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 20, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xlfoq/what_are_your_opinions_of_semantic_or_structural/", 
            "score": 14, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "What are your opinions of semantic or structural merges and tools using it such as Plastic SCM version control system and SemanticMerge?", 
            "url": "https://www.plasticscm.com/movetoplastic/index.html"
        }, 
        {
            "author": "johnothecoder", 
            "created_utc": 1504349046.0, 
            "domain": "johnothecoder.uk", 
            "id": "6xl5ih", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xl5ih/when_to_use_github_vs_bitbucket/", 
            "score": 0, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "When to use GitHub vs BitBucket", 
            "url": "https://johnothecoder.uk/open-source/when-to-use-github-when-to-use-bitbucket/"
        }, 
        {
            "author": "kerakk19", 
            "created_utc": 1504346217.0, 
            "domain": "self.git", 
            "id": "6xkydh", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xkydh/cannot_set_write_permission_in_bitbucket/", 
            "score": 1, 
            "selftext": "Hello, i'm trying to add myself write permission in bitbucket repository, but when i'm adding SSH Key i see that this key is read-only. How can i add write permission to SSH key?\n\nThanks.", 
            "subreddit": "git", 
            "title": "Cannot set write permission in bitbucket repository?", 
            "url": "https://www.reddit.com/r/git/comments/6xkydh/cannot_set_write_permission_in_bitbucket/"
        }, 
        {
            "author": "xblade724", 
            "created_utc": 1504329581.0, 
            "domain": "self.git", 
            "id": "6xjz30", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xjz30/seeking_clarification_on_untracked_items_after/", 
            "score": 1, 
            "selftext": "I am using SmartGit, but the question should be general to Git:\n\nLet's say teammate creates and pushes \"a.cs\". I've never seen or touched it before. However, when I pull, I'll see \"untracked\" for this new a.cs file. Shouldn't it be TRACKED since I just pulled and teammate added it? \n\nThis part always confuses me", 
            "subreddit": "git", 
            "title": "Seeking clarification on \"untracked\" items after pull", 
            "url": "https://www.reddit.com/r/git/comments/6xjz30/seeking_clarification_on_untracked_items_after/"
        }, 
        {
            "author": "xblade724", 
            "created_utc": 1504329361.0, 
            "domain": "self.git", 
            "id": "6xjykw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 4, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xjykw/should_i_locally_commit_before_i_pull_then_push/", 
            "score": 3, 
            "selftext": "Does this order make the most sense? If not, what's recommended?", 
            "subreddit": "git", 
            "title": "Should I locally commit BEFORE I pull, THEN push?", 
            "url": "https://www.reddit.com/r/git/comments/6xjykw/should_i_locally_commit_before_i_pull_then_push/"
        }, 
        {
            "author": "werzor", 
            "created_utc": 1504313335.0, 
            "domain": "self.git", 
            "id": "6xiqn3", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 2, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xiqn3/is_there_a_way_to_revert_into_a_nonfastforwarded/", 
            "score": 7, 
            "selftext": "I'm playing around with git to better understand it, and came across this scenario.\n\nSuppose you have some history like this:\n\n    * Merge 'my-branch' into master (using --no-ff)\n    |\\\n    | * Update 2\n    | |\n    | * Update 1\n    |/\n    * Starting point\n    |\n    * Initial commit\n\nI noticed that if you `git reset head~1 --hard` on the master branch, it should be reset to the \"Starting point\" commit.\n\nThat means if my-branch is deleted immediately after merge, and someone later then reverts master back, all the intermediate steps from my-branch are gone, correct?\n\nWould there be any way to revert just a single commit from the non-fast-forwarded branch (e.g. you'd wind up back in \"Update 2\")?\n\nIf not, would there be a way of recovering the deleted my-branch?", 
            "subreddit": "git", 
            "title": "Is there a way to revert into a non-fast-forwarded merged branch?", 
            "url": "https://www.reddit.com/r/git/comments/6xiqn3/is_there_a_way_to_revert_into_a_nonfastforwarded/"
        }, 
        {
            "author": "crespo_modesto", 
            "created_utc": 1504300206.0, 
            "domain": "self.git", 
            "id": "6xhhvz", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xhhvz/is_it_easy_to_setup_git_on_your_own_server/", 
            "score": 2, 
            "selftext": "Sorry probably will be hated for asking this.\n\nI started to read through the manual, I mean it's easy to hit \"install git\" in command line but I mean, my only experience so far is using git that is hosted by github so I didn't have to deal with how to keep your code accessible to you remotely but safe from public as well.\n\nI'm down for docs if it's one of these on the right, not sure if it assumes you're using an environment that is already setup or hosted by GitHub or someone else.\n\nI'm not looking to pay for private either.\n\nedit: definitely gotta figure out how to incorporate it into the development cycle of being able to push it live and not use sftp like a pleab.", 
            "subreddit": "git", 
            "title": "Is it easy to setup git on your own server?", 
            "url": "https://www.reddit.com/r/git/comments/6xhhvz/is_it_easy_to_setup_git_on_your_own_server/"
        }, 
        {
            "author": "random503", 
            "created_utc": 1504291543.0, 
            "domain": "self.git", 
            "id": "6xgkoe", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 1, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xgkoe/how_to_debug_myprojectcsprojorig_both_added_on/", 
            "score": 1, 
            "selftext": "I'm merging the develop branch into my feature branch in a .NET solution and I'm getting the following git merge conflict:\n\n\"Two files with identical names have been added\"\nBoth branches were created with an existing csproj file. While new references may have been added to each csproj, the csproj files themselves already existed. So what does it mean when the merge resolver states:\n\n\"MyProject.csproj.orig [both added]\nTwo files with identical names have been added\"\nI'm assuming that the .orig extension may have been created by the git merge process. But I'm not sure how to handle this merge conflict. The project itself doesn't need a csproj.orig file. Am I supposed to do a manual merge resolution between these files? Should I delete/ignore these files? Or is it possible that something went wrong with the merge process?", 
            "subreddit": "git", 
            "title": "how to debug myproject.csproj.orig [both added] on git merge?", 
            "url": "https://www.reddit.com/r/git/comments/6xgkoe/how_to_debug_myprojectcsprojorig_both_added_on/"
        }, 
        {
            "author": "wrechen", 
            "created_utc": 1504286046.0, 
            "domain": "about.gitlab.com", 
            "id": "6xfypk", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 0, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xfypk/introducing_exclusive_features_to_gitlabcom/", 
            "score": 19, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Introducing exclusive features to GitLab.com Bronze, Silver and Gold plans", 
            "url": "https://about.gitlab.com/2017/09/01/gitlab-com-paid-features/"
        }, 
        {
            "author": "dreamburst", 
            "created_utc": 1504260087.0, 
            "domain": "self.git", 
            "id": "6xdkcw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 25, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6xdkcw/switching_from_svn_to_git_for_rapid_development/", 
            "score": 15, 
            "selftext": "We are a team of six developers, working on a project that is in constant rapid in-house development. We currently use SVN and have a single repository and two servers - development and live. Using JetBrains software, we add a remote host to development and download all of the code we need, and set it up so that whenever we save a file, it is uploaded back to the development server (we check for file changes before it is saved so we can handle merge conflicts).\n\nWe use the development server to test any new features and also to demonstrate / showcase these features to people who need to access them, so that they can point out any changes that need applying before it is pushed live. When all requirements are met, we commit the related files to the repository from the development server and then pull those files on the live server.\n\nThis workflow is terrible. development and live are heavily out of sync and it's incredibly difficult to track changes. We want to switch to Git so that we can handle our version control in a more efficient and cleaner way. I have been tasked with the migration from SVN to Git, and I've spent all week trying to figure out a decent way to go about this, but I am still unsure as to what we need for our purposes.\n\nI've come across feature workflows that have two branches - \"master\" and \"develop\". From my understanding of the workflows, we pull from develop and checkout into individual feature or hotfix branches to work on any features that we need to work on. We need to constantly test these features, so we commit and merge them into develop. When we're satisfied that those features are completed, we want to push them to master and pull them on the live server, but we only want to pull maybe one or two features, so we'll have to use cherry-picking.\n\nThis all sounds equally as messy as our current SVN setup, and I need some advice and a second opinion on how we can go about integrating git into our current development workflow.\n\nEDIT: I should also mention - development needs to be quick. There are some features and changes and fixes that need to be implemented as quickly as possible.", 
            "subreddit": "git", 
            "title": "Switching from SVN to Git for rapid development", 
            "url": "https://www.reddit.com/r/git/comments/6xdkcw/switching_from_svn_to_git_for_rapid_development/"
        }
    ], 
    "subreddit_creation_utc": 1209083870.0, 
    "subscribers": 14727, 
    "title": "git", 
    "title_word_count_occurrences": {
        "emacs": 1, 
        "github": 4, 
        "gitlab": 8, 
        "html": 2, 
        "php": 1, 
        "python": 1, 
        "shell": 1, 
        "tex": 1, 
        "windows": 4
    }, 
    "top_score_submissions": [
        {
            "author": "nilbus", 
            "created_utc": 1506227096.0, 
            "domain": "blog.nilbus.com", 
            "id": "72344w", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 10, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/72344w/take_the_pain_out_of_git_conflict_resolution_use/", 
            "score": 31, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Take the pain out of git conflict resolution: use diff3", 
            "url": "https://blog.nilbus.com/take-the-pain-out-of-git-conflict-resolution-use-diff3/"
        }, 
        {
            "author": "chillysurfer", 
            "created_utc": 1506004253.0, 
            "domain": "medium.com", 
            "id": "71jhrj", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 6, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/71jhrj/a_simple_personal_wiki_using_a_little_python_and/", 
            "score": 30, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "A simple personal wiki using a little Python and a small Git hook", 
            "url": "https://medium.com/@trstringer/a-simple-personal-wiki-using-a-little-python-and-a-small-git-hook-c352fc5cca8b"
        }, 
        {
            "author": "krabby_patty", 
            "created_utc": 1504541921.0, 
            "domain": "self.git", 
            "id": "6y1apw", 
            "is_reddit_media_domain": false, 
            "is_self": true, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 14, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6y1apw/using_git_bash_as_my_default_terminal_windows/", 
            "score": 26, 
            "selftext": "A bit off topic but does anyone else use GIT Bash as their main terminal in Windows? I've been using it for dev tasks on top of using it for GIT, it's a great wee thing :)", 
            "subreddit": "git", 
            "title": "Using Git Bash as my default terminal - Windows", 
            "url": "https://www.reddit.com/r/git/comments/6y1apw/using_git_bash_as_my_default_terminal_windows/"
        }, 
        {
            "author": "JustinAiken", 
            "created_utc": 1506643127.0, 
            "domain": "justinaiken.com", 
            "id": "73458k", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 19, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/73458k/git_cherrydrop/", 
            "score": 24, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "git cherry-drop", 
            "url": "https://justinaiken.com/2017/09/28/git-cherry-drop/"
        }, 
        {
            "author": "7890yuiop", 
            "created_utc": 1505176876.0, 
            "domain": "reddit.com", 
            "id": "6zjkl6", 
            "is_reddit_media_domain": false, 
            "is_self": false, 
            "is_video": false, 
            "link_flair_css_class": null, 
            "link_flair_text": null, 
            "media": null, 
            "num_comments": 5, 
            "num_crossposts": 0, 
            "permalink": "/r/git/comments/6zjkl6/magit_fundraising_campaign_on_kickstarter_xpost/", 
            "score": 24, 
            "selftext": "", 
            "subreddit": "git", 
            "title": "Magit fundraising campaign on Kickstarter (x-post from /r/emacs)", 
            "url": "https://www.reddit.com/r/emacs/comments/6xf3er/magit_fundraising_campaign_on_kickstarter/"
        }
    ], 
    "total_submissions": 92, 
    "utc_of_data_collection_completion": "2017-10-16 18:50:33", 
    "utc_of_data_collection_start": "2017-10-16 18:50:33"
}